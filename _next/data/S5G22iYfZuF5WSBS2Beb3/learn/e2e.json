{"pageProps":{"post":{"title":"e2e","slug":"e2e","content":"<h1>Cypress</h1>\n<h1>Testcafe</h1>\n<ul>\n<li>Print current DOM element</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">console.log(await Selector(&#x26;#39;element&#x26;#39;).innerText);\nconsole.log(await Selector(&#x26;#39;element&#x26;#39;).value);</code></pre></div>\n<h2>Testcafe tips</h2>\n<ul>\n<li>\n<p>Use live mode</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"e2e\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"testcafe --config-file e2e/.testcaferc.json --live\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Use <code>test.only</code> to focus on</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">test<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">only</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Source table filter on access `Admin`'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> sources <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword control-flow\">await</span> sources<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">selectAccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n</li>\n<li>\n<p>Loop thru all rows</p>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> rows <span class=\"token operator\">=</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Selector</span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-test-id=\"awesome-table\"] tbody tr'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> expectedValue <span class=\"token operator\">=</span> <span class=\"token string\">'yep'</span>\n<span class=\"token keyword\">var</span> rowsCount <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> rows<span class=\"token punctuation\">.</span><span class=\"token property-access\">count</span>\n<span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> rowsCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> elementSelector <span class=\"token operator\">=</span> rows<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">nth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">child</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// column 1</span>\n    <span class=\"token keyword\">const</span> sanity <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">elementSelector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n    <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">assertElementEqual</span><span class=\"token punctuation\">(</span>sanity<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerText</span><span class=\"token punctuation\">,</span> expectedValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n","ogImage":{"url":"/assets/covers/e2e.jpg"},"coverImage":"/assets/covers/e2e.jpg"}},"__N_SSG":true}