{"pageProps":{"post":{"title":"Github","slug":"github","content":"<h1>Git</h1>\n<h2>Git Commands</h2>\n<ul>\n<li>\n<p>Create</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Clone a repo</span>\n$ <span class=\"token function\">git</span> clone git@github.com:mapbox/mapbox-gl-js.git\n\n<span class=\"token comment\"># Create a new repo</span>\n$ <span class=\"token function\">git</span> init\n\n<span class=\"token comment\"># Create remote repo</span>\n$ gh repo create cli/my-project\n</code></pre></div>\n</li>\n<li>\n<p>Local changes</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> status\n$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span>\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> -p <span class=\"token operator\">&#x3C;</span>file<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">'some message'</span>\n\n<span class=\"token comment\"># Change the last commit (don't amend published commits)</span>\n$ <span class=\"token function\">git</span> commit -amend -m <span class=\"token string\">'replace last commit message'</span>\n\n<span class=\"token comment\"># Change the last commit with stage items</span>\n$ <span class=\"token function\">git</span> commit -amend -m <span class=\"token string\">'staged files will be added to the last commit'</span>\n</code></pre></div>\n</li>\n<li>\n<p>Commit history</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> log\n$ <span class=\"token function\">git</span> log -p <span class=\"token operator\">&#x3C;</span>file<span class=\"token operator\">></span>\n<span class=\"token comment\"># *use `:q` to close the log*</span>\n</code></pre></div>\n</li>\n<li>\n<p>Branches</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># List all existing branches</span>\n$ <span class=\"token function\">git</span> branch -av\n\n$ <span class=\"token function\">git</span> checkout <span class=\"token operator\">&#x3C;</span>branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> checkout -b <span class=\"token operator\">&#x3C;</span>new_branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> checkout --track <span class=\"token operator\">&#x3C;</span>remote/branch<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># Delete branch</span>\n$ <span class=\"token function\">git</span> branch -d <span class=\"token operator\">&#x3C;</span>branch_to_delete<span class=\"token operator\">></span>\n</code></pre></div>\n<ul>\n<li>It's sometimes good to prefix a branch with <code>feat/</code>, <code>fix/</code></li>\n</ul>\n</li>\n<li>\n<p>Tags</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> tag <span class=\"token operator\">&#x3C;</span>tag_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> push --tags\n</code></pre></div>\n</li>\n<li>\n<p>Update &#x26; publish</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> remote show origin\n$ <span class=\"token function\">git</span> fetch origin\n$ <span class=\"token function\">git</span> pull origin <span class=\"token operator\">&#x3C;</span>remote_branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> push origin <span class=\"token operator\">&#x3C;</span>branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> checkout --track origin/this-rocks\n\n<span class=\"token comment\"># Delete remote branch</span>\n$ <span class=\"token function\">git</span> branch -dr <span class=\"token operator\">&#x3C;</span>remote/branch<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p>Rebase &#x26; Merge</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Rebase</span>\n$ <span class=\"token function\">git</span> rebase <span class=\"token operator\">&#x3C;</span>branch<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> rebase --abort\n$ <span class=\"token function\">git</span> rebase --continue\n\n<span class=\"token comment\"># Merge &#x3C;branch> into your current HEAD</span>\n$ <span class=\"token function\">git</span> merge <span class=\"token operator\">&#x3C;</span>branch<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p>Undo</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Reset all change files to last commit</span>\n$ <span class=\"token function\">git</span> checkout <span class=\"token builtin class-name\">.</span>\n\n<span class=\"token comment\"># Delete all newly added files (untracked) (think of `f` for files and `d` for directories) </span>\n$ <span class=\"token function\">git</span> clean -fd\n</code></pre></div>\n</li>\n<li>\n<p>Stash</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> stash list\n$ <span class=\"token function\">git</span> stash save <span class=\"token operator\">&#x3C;</span>message<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> stash save <span class=\"token operator\">&#x3C;</span>message<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>-u<span class=\"token operator\">|</span>--include-untracked<span class=\"token operator\">></span> \n\n$ <span class=\"token function\">git</span> stash list\n$ <span class=\"token function\">git</span> stash apply stash@<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n$ <span class=\"token function\">git</span> stash drop stash@<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n\n$ <span class=\"token function\">git</span> stash <span class=\"token function\">clear</span>\n</code></pre></div>\n</li>\n<li>\n<p>Unstage</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> reset HEAD\n$ <span class=\"token function\">git</span> reset -- <span class=\"token operator\">&#x3C;</span>SOME_FILENAME<span class=\"token operator\">></span>\n</code></pre></div>\n<ul>\n<li>This will unstage your code but not delete your changes</li>\n</ul>\n</li>\n<li>\n<p>Revert to last commit</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># reset to last commit</span>\n$ <span class=\"token function\">git</span> checkout <span class=\"token builtin class-name\">.</span>\n\n<span class=\"token comment\"># clean allows you to remove all the new untracked files</span>\n<span class=\"token comment\"># Clean check what gets removed first</span>\n$ <span class=\"token function\">git</span> clean -nfd\n$ <span class=\"token function\">git</span> clean -fd\n</code></pre></div>\n</li>\n<li>\n<p>Deleting # of commits</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout <span class=\"token operator\">&#x3C;</span>BRANCH_WITH_COMMITS_TO_REMOVE<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> reset --soft HEAD~<span class=\"token operator\">&#x3C;</span>NUMBER_OF_COMMITS_TO_DELETE<span class=\"token operator\">></span>. <span class=\"token comment\"># example: git reset --soft HEAD~2</span>\n\n<span class=\"token comment\"># Now if you update github</span>\n$ <span class=\"token function\">git</span> push origin +<span class=\"token operator\">&#x3C;</span>BRANCH_NAME<span class=\"token operator\">></span> --force <span class=\"token comment\"># make sure that you have `+` in front of the branch name</span>\n</code></pre></div>\n</li>\n<li>\n<p>Deleting remote commit &#x26; tags</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Move the head back 2 commits</span>\n$ <span class=\"token function\">git</span> reset --hard HEAD~2\n<span class=\"token comment\"># This will wipe out the last 2 commit (THIS IS VERY DESTRUCTIVE, use with caution)</span>\n$ <span class=\"token function\">git</span> push origin -f\n\n<span class=\"token comment\"># Delete the local tags</span>\n$ <span class=\"token function\">git</span> tag -d <span class=\"token operator\">&#x3C;></span>\n<span class=\"token comment\"># Delete the tags </span>\n$ <span class=\"token function\">git</span> push --delete origin v0.1\n</code></pre></div>\n</li>\n<li>\n<p>Merging vs. Rebase</p>\n<ul>\n<li>\n<p>For integrating changes from another branch</p>\n</li>\n<li>\n<p>Both <code>Merging</code> &#x26; <code>Rebase</code> is a process of integrating changes from one branch to another</p>\n</li>\n<li>\n<p><code>Merging</code> preserves the branch history, it is used to combine public branches</p>\n</li>\n<li>\n<p><code>Rebase</code> does <em>not</em> preserve the branch history, and is used for combining private branches</p>\n</li>\n<li>\n<p>Merging example</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout main\n$ <span class=\"token function\">git</span> merge branch\n</code></pre></div>\n</li>\n<li>\n<p>Rebase example</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout branch\n$ <span class=\"token function\">git</span> rebase main\n$ <span class=\"token function\">git</span> checkout main\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>fast-forward merge</p>\n</li>\n<li>\n<p>Tags</p>\n<ul>\n<li>On Git, tags are often used in order to tag specific commits that may be more important than others.</li>\n<li>Tags may be used in order to bookmark certain events : releases, bug-fixes or just to add an informative and descriptive note to a commit.</li>\n<li>On GitHub, tags are often associated with actual product releases for example.\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Create a tag</span>\n$ <span class=\"token function\">git</span> tag -a -m <span class=\"token string\">\"Added terraform action\"</span> <span class=\"token operator\">&#x3C;</span>TAG_NAME<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> tag -a -m <span class=\"token string\">\"Added terraform action\"</span> v0.1\n\n<span class=\"token comment\"># Push a tag to the remote repo</span>\n$ <span class=\"token function\">git</span> push --follow-tags\n\n<span class=\"token comment\"># List tags</span>\n$ <span class=\"token function\">git</span> tag -l\n\n<span class=\"token comment\"># Delete a local tag</span>\n$ <span class=\"token function\">git</span> tag -d <span class=\"token operator\">&#x3C;</span>TAG_NAME<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> tag -d v0.1\n\n<span class=\"token comment\"># Delete a remote tag</span>\n$ <span class=\"token function\">git</span> push --delete origin <span class=\"token operator\">&#x3C;</span>TAG_NAME<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> push --delete origin v0.1\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>How To Set Upstream Branch on Git</p>\n<ul>\n<li>Upstream branches define the branch tracked on the remote repository by your local remote branch (also called the remote tracking branch)</li>\n</ul>\n</li>\n</ul>\n<h2>Updating a git commit message after it's been pushed</h2>\n<ul>\n<li>\n<p>When you commit somthing to git it's accompanied with a commit message that explains what changes were made</p>\n</li>\n<li>\n<p>If you need to update a message after it's been commited you can fix it with an <code>--amend</code> flag</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Changing the latest git commit message</span>\n$ <span class=\"token function\">git</span> commit --amend -m <span class=\"token string\">\"New message\"</span>\n\n<span class=\"token comment\"># Update the remote</span>\n$ <span class=\"token function\">git</span> push --force <span class=\"token operator\">&#x3C;</span>repository-name<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>branch-name<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># </span>\n$ <span class=\"token function\">git</span> push --force-with-lease <span class=\"token operator\">&#x3C;</span>repository-name<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>branch-name<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p><em>Note that the <code>--force</code> is not recommended unless you are absolutely sure that no one else has cloned your repository after the latest commit. It's probably best to use <code>--force-with-lease</code> flag because it will abort if there was an upstream change to the repository.</em></p>\n</li>\n<li>\n<p>If you want to update a commit in a past commit you need the sha value</p>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># list the last three </span>\n</code></pre></div>\n<h2>Squash and merge</h2>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout master\n$ <span class=\"token function\">git</span> merge --squash bugfix\n$ <span class=\"token function\">git</span> commit\n</code></pre></div>\n<p>==============</p>\n<h1>Github</h1>\n<ul>\n<li>\n<p>Github is basically Git in the cloud, it allows you to share with others</p>\n</li>\n<li>\n<p>You can make private and public repos</p>\n</li>\n<li>\n<p>In your source code you can add some github config files in the <code>.github</code> folder</p>\n</li>\n<li>\n<p>Some common files are:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">├── CODEOWNERS\n├── pull_request_template.md\n└── workflows\n    ├── build.yaml\n    └── deploy.yaml</code></pre></div>\n</li>\n<li>\n<p><code>.github/workflows/</code> is where you put your Github actions yaml files</p>\n</li>\n<li>\n<p>Controlling branches</p>\n<ul>\n<li>settings > Branches > \"Protect matching branches\"\n<ul>\n<li>you can define how many approvers you need</li>\n</ul>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2>Github CLI Commands</h2>\n<ul>\n<li>Install Github CLI <code>$ brew install gh</code></li>\n<li><a href=\"https://cli.github.com/manual/\">Github CLI Docs</a>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ gh auth login\n\n<span class=\"token comment\"># Gist</span>\n$ gh gist create --public hello.js\n\n<span class=\"token comment\"># Repo</span>\n$ <span class=\"token function\">git</span> init my-project\n$ <span class=\"token builtin class-name\">cd</span> my-project\n$ gh repo create\n\n<span class=\"token comment\"># Create a repository with a specific name</span>\n$ gh repo create my-project\n\n<span class=\"token comment\"># Create a repository in an organization</span>\n$ gh repo create cli/my-project\n</code></pre></div>\n</li>\n</ul>\n<h2>Setting up multiple SSH keys</h2>\n<ul>\n<li>If you have 2+ Github accounts you will have to create a new SSH key for each account</li>\n</ul>\n<ol>\n<li>Create an SSH Key</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Create an rsa key</span>\n$ ssh-keygen -t rsa -C <span class=\"token string\">\"your@email.com\"</span>\n<span class=\"token comment\"># id_rsa_*</span>\n\n<span class=\"token comment\"># Add your SSH private key to the ssh-agent and store your passphrase in the keychain. </span>\n$ ssh-add ~/.ssh/id_rsa\n$ ssh-add ~/.ssh/id_rsa_second-gh\n\n<span class=\"token comment\"># List all the registers keys</span>\n$ ssh-add -l\n</code></pre></div>\n<ol start=\"2\">\n<li>Update your <code>~/.ssh/config</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#first-gh account</span>\nHost github.com\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa\n\n<span class=\"token comment\">#second-gh account</span>\nHost github.com-2\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa_second-gh\n</code></pre></div>\n<ol start=\"2\">\n<li>Add your public SSH key to github</li>\n</ol>\n<ul>\n<li>Click on your avatar in the top right of the page then click on \"SSH keys &#x26; GPG keys\" in the sidebar</li>\n<li>or click the <a href=\"https://github.com/settings/keys\">SSH keys &#x26; GPG keys link</a></li>\n<li>click the \"New\" button under the SSH Keys section</li>\n<li>copy your *.pub key and paste it</li>\n</ul>\n<ol start=\"3\">\n<li>Test your connections</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># test your connection</span>\n$ <span class=\"token function\">ssh</span> -T git@github.com\n<span class=\"token comment\"># Hi first-gh! You've successfully authenticated, but GitHub does not provide shell access.</span>\n\n$ <span class=\"token function\">ssh</span> -T git@github.com-2\n<span class=\"token comment\"># Hi second-gh! You've successfully authenticated, but GitHub does not provide shell access.</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Clone a repo</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Cloning from 1st account</span>\n$ git@github.com:first-gh/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n\n<span class=\"token comment\"># Cloning for 2nd account </span>\n$ git@github.com-2:second-gh/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n\n<span class=\"token comment\"># Update username/email</span>\n$ <span class=\"token function\">git</span> config user.name <span class=\"token string\">\"username\"</span>\n$ <span class=\"token function\">git</span> config user.email <span class=\"token string\">\"your@email.com\"</span> \n\n<span class=\"token comment\"># update the second remote origin</span>\n$ <span class=\"token function\">git</span> remote set-url origin git@github.com-2:username/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n</code></pre></div>\n<h2>If git keeps asking for your pass-phase</h2>\n<ul>\n<li>Just edit your <code>~/.ssh/config</code> and enable the <code>UseKeychain</code> option:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">Host *\n    UseKeychain <span class=\"token function\">yes</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>PR Templates</h2>\n<ul>\n<li>All you have to do is create a file <code>.github/pull_request_template.md</code>\n<div class=\"remark-highlight\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token comment\">&#x3C;!--- Provide Ticket issue as [&#x3C;number>] and a general summary of your changes in the Title above --></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Description</span>\n<span class=\"token comment\">&#x3C;!--- Why is this change required? What problem does it solve? --></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> This pull request includes</span>\n\n<span class=\"token list punctuation\">-</span> [ ] Feature\n<span class=\"token list punctuation\">-</span> [ ] Bug Fix\n<span class=\"token list punctuation\">-</span> [ ] Documentation Update\n<span class=\"token list punctuation\">-</span> [ ] Maintenance\n<span class=\"token list punctuation\">-</span> [ ] Metrics\n<span class=\"token list punctuation\">-</span> [ ] Tests\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> The following changes were made</span>\n<span class=\"token comment\">&#x3C;!--- List your changes in detail --></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Expected behavior</span>\n<span class=\"token comment\">&#x3C;!--- List expected behavior --></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Steps to reproduce expected behavior</span>\n<span class=\"token comment\">&#x3C;!--- List steps to reproduce expected behavior --></span>\n</code></pre></div>\n</li>\n<li>Push it up to github</li>\n</ul>\n<h2>Github code owners</h2>\n<ul>\n<li><a href=\"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners\">docs</a></li>\n<li>People with admin or owner permissions can set up a CODEOWNERS file in a repository.</li>\n<li>Team must be visible and it must have write permissions regardless if the individuals in that team has admin access</li>\n<li>GitHub codeowners is implemented as a single file <code>.github/CODEOWNERS</code> in your repository</li>\n<li>Whenever a pull request is opened, GitHub will automatically check all changed files and check each codeowners rule, the owners are added as reviewers.</li>\n<li>Adding <code>@user &#x26; @teams</code> should be added on the same line</li>\n<li>Someone from each line needs to approve the PR to make it valid</li>\n<li>Order is important, the last matching pattern takes the most precedence.\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Lines starting with '#' are comments.</span>\n<span class=\"token comment\"># Each line is a file pattern followed by one or more owners.</span>\n\n<span class=\"token comment\"># These owners will be the default owners for everything in the repo.</span>\n*       @philopian\n\n<span class=\"token comment\"># Order is important. The last matching pattern has the most precedence.</span>\n<span class=\"token comment\"># So if a pull request only touches javascript files, only these owners</span>\n<span class=\"token comment\"># will be requested to review.</span>\n*.js    @octocat @github/js\n\n<span class=\"token comment\"># You can also use email addresses if you prefer.</span>\ndocs/*  docs@example.com\n</code></pre></div>\n</li>\n<li>Syntax exceptions\n<ul>\n<li>There are some syntax rules for gitignore files that do not work in CODEOWNERS files:</li>\n<li>Escaping a pattern starting with <code>#</code> using <code>\\</code> so it is treated as a pattern and not a comment</li>\n<li>Using <code>!</code> to negate a pattern</li>\n<li>Using <code>[ ]</code> to define a character range</li>\n</ul>\n</li>\n<li>Add extra layer of code security\n<img src=\"/assets/blog/github/github-security-1.jpg\" alt=\"\"></li>\n<li>With protected branches enabled, a code owner for each owned file has to leave a review before anyone can merge a pull request to that branch.\n<img src=\"/assets/blog/github/github-security-2.jpg\" alt=\"\"></li>\n</ul>\n<h2>Dependabot</h2>\n<ul>\n<li><a href=\"https://docs.github.com/en/code-security/dependabot/\">Dependabot docs</a></li>\n<li>Dependabot alerts you to keep all your dependencies updated</li>\n<li>Dependabot can now inform you of version updates</li>\n<li>To enable version updates, check a <code>.github/dependabot.yml</code> configuration file into your repository.</li>\n<li>Your configuration file tells Dependabot the kind of dependency you want to update (like Go modules or npm packages), where the dependency manifest is located, and how often you want Dependabot to look for updates</li>\n<li>On the schedule you specify, Dependabot will check if new versions are available.</li>\n<li>If updates are available, Dependabot sends pull requests to update your dependency manifest with the new versions.</li>\n<li>Simple example for nodejs\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># Basic dependabot.yml file with</span>\n<span class=\"token comment\"># minimum configuration for two package managers</span>\n\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n<span class=\"token key atrule\">updates</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Enable version updates for npm</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">package-ecosystem</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"npm\"</span>\n    <span class=\"token comment\"># Look for `package.json` and `lock` files in the `root` directory</span>\n    <span class=\"token key atrule\">directory</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/\"</span>\n    <span class=\"token comment\"># Check the npm registry for updates every day (weekdays)</span>\n    <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"daily\"</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Github Actions</h2>\n<ul>\n<li>Github Actions allows you to automate workflows that happen in your github repository base on event triggers you define in a YAML file</li>\n<li>You must store workflow files in the <code>.github/workflows</code> directory of your repository, currently you cannot have nested folder under <code>workflows</code>.</li>\n<li>Workflow files use YAML syntax, and must have either a .yml or .yaml file extension.</li>\n<li><code>Github Actions</code> works off of <a href=\"https://docs.github.com/en/actions/reference/events-that-trigger-workflows\">event triggers</a> &#x26; defined with the <code>on: </code> block in your YAML file</li>\n<li>Available <code>events trigger</code> workflows:\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\">branch_protection_rule\ncheck_run\ncheck_suite\ncreate\ndelete\ndeployment\ndeployment_status\ndiscussion\ndiscussion_comment\nfork\ngollum\nissue_comment\nissues\nlabel\nmilestone\npage_build\nproject\nproject_card\nproject_column\npublic\npull_request\npull_request_comment (use issue_comment)\npull_request_review\npull_request_review_comment\npull_request_target\npush\nregistry_package\nrelease\nrepository_dispatch\nschedule\n</code></pre></div>\n</li>\n<li>Common webhook events: <code>push</code>, <code>release</code>, <code>pull_request</code></li>\n<li>There is also <code>schedule</code>, <code>workflow_dispatch</code>, &#x26; <code>repository_dispatch</code></li>\n<li>Terms: <code>Events</code>, <code>Jobs</code>, <code>Runners</code>, <code>Steps</code>, <code>Actions</code></li>\n</ul>\n<h3>Hello world of Github Action</h3>\n<ul>\n<li>\n<p>There are 3 main pieces to the actions yaml file:</p>\n<ol>\n<li><code>name</code> (whatever name you want to call this workflow, this will show up in the GUI)</li>\n<li><code>on</code> (The trigger, it can be a string or an array of strings)</li>\n<li><code>jobs</code></li>\n</ol>\n</li>\n<li>\n<p>Create a file in your repo called <code>.github/workflows/hello.yml</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hello world\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">hello_world</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"hello world\"\n</code></pre></div>\n</li>\n<li>\n<p>Different ways to define your <code>event triggers</code>. Use the <code>on: </code></p>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Triggered when code is pushed to any branch in a repository</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n\n<span class=\"token comment\"># Triggers the workflow on push or pull request events</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">,</span> pull_request<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Ignore a branch</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches-ignore</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n</code></pre></div>\n</li>\n</ul>\n<h3>Github Actions runners</h3>\n<ul>\n<li>\n<p>GitHub offers hosted virtual machines to run workflows or you can provide your own</p>\n</li>\n<li>\n<p>GitHub offers runners with Linux, Windows, and macOS operating systems.</p>\n</li>\n<li>\n<p>When you use a GitHub-hosted runner, machine maintenance and upgrades are taken care of for you. You can run workflows directly on the virtual machine or in a Docker container.</p>\n</li>\n<li>\n<p><strong>Github hosted runner</strong>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># ...</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">some_job</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://docs.github.com/en/actions/using-github-hosted-runners/\">docs</a></p>\n</li>\n<li>\n<p><strong>Self-hosted runners</strong></p>\n</li>\n<li>\n<p>You can also host your own <code>self-hosted runners</code>, more <a href=\"https://docs.github.com/en/actions/hosting-your-own-runners/\">here</a></p>\n</li>\n<li>\n<p>Self-hosted runners using the <code>runs-on</code></p>\n</li>\n<li>\n<p>You can host your own runners and customize the environment used to run jobs in your GitHub Actions workflows.</p>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># ...</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">some_job</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">-</span>hosted\n</code></pre></div>\n</li>\n</ul>\n<h3>Working with env variables</h3>\n<ul>\n<li>\n<p>You can set environment variables for each job</p>\n</li>\n<li>\n<p>You define the variables under the job with an <code>env</code></p>\n</li>\n<li>\n<p>They cannot be a composite of other <code>env</code> defined that the same level, you cannot do</p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CANNOT DO THIS\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORKSPACE</span><span class=\"token punctuation\">:</span> dev\n      <span class=\"token key atrule\">PROJECT_NAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'....CANNOT-DO-THIS......${{ env.WORKSPACE}}'</span>\n</code></pre></div>\n</li>\n<li>\n<p>Due to a security vulnerability <code>set-env</code> is being deprecated and should no longer be used.</p>\n</li>\n<li>\n<p>Proper way to define define/use env is by setting it under the <code>env</code> block and using them with <code>${{ env.SOME_ENV_KEY }}</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'main'</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORKSPACE</span><span class=\"token punctuation\">:</span> dev\n      <span class=\"token key atrule\">PROJECT_NAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'this-rocks'</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run multiple commands\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          echo \"Running on ${{ env.WORKSPACE }}\"</span>\n<span class=\"token scalar string\">          echo \"project namet: ${{ env.PROJECT_NAME }}\"</span>\n<span class=\"token scalar string\">          terraform init -backend-config bucket=\"${{ env.PROJECT_NAME }}\"</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>Default working-directory option</h3>\n<ul>\n<li>By default the working directory is the root of the checkout repo</li>\n<li>You can actually set all the jobs to a specific working directory or just a specific job</li>\n<li>The Github actions have a working-directory option to declare on workflow. It specifies the working directory for all run steps.\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configured for all jobs\n<span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> web\n</code></pre></div>\n</li>\n<li>Configured for specific jobs\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configured for specific jobs\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">job1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> scripts\n</code></pre></div>\n</li>\n</ul>\n<h3>Have a step run multiple shell commands</h3>\n<ul>\n<li>Having one step in a job preform multiple command is easy just start with a <code>|</code> and all new lines before new commands:\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'main'</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run multiple commands\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          npm run ci</span>\n<span class=\"token scalar string\">          npm run lint</span>\n<span class=\"token scalar string\">          npm rum build</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Save Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">            build</span>\n<span class=\"token scalar string\">            pipeline</span>\n<span class=\"token scalar string\">            package.json</span>\n<span class=\"token scalar string\">            scripts</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>Saving temp files for other jobs</h3>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'main'</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run multiple commands\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          npm run ci</span>\n<span class=\"token scalar string\">          npm run lint</span>\n<span class=\"token scalar string\">          npm rum build</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Save Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">            build</span>\n<span class=\"token scalar string\">            pipeline</span>\n<span class=\"token scalar string\">            package.json</span>\n<span class=\"token scalar string\">            scripts</span>\n            \n  <span class=\"token key atrule\">using-artifacts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1   <span class=\"token comment\"># should have access to all the files uploaded with `actions/upload-artifact@v2`</span>\n</code></pre></div>\n<h3>Job dependencie</h3>\n<ul>\n<li>\n<p>(Job Example) One Job depending on the outcome of the other use the <code>needs</code> keyword</p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> &#x3C;Title<span class=\"token punctuation\">></span>\n\n<span class=\"token comment\"># Trigger (webhook, scheduled event, manual event)</span>\n<span class=\"token comment\"># Common webhook events: push, release, pull_request, create, delete, issues (https://docs.github.com/en/actions/reference/events-that-trigger-workflows)</span>\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> main <span class=\"token punctuation\">]</span>  <span class=\"token comment\"># what branch you want to watch </span>\n    <span class=\"token key atrule\">branches-ignore</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">first-job-name</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run npm Script\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Save Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">            build</span>\n<span class=\"token scalar string\">            pipeline</span>\n<span class=\"token scalar string\">            package.json</span>\n<span class=\"token scalar string\">            scripts</span>\n\n  <span class=\"token key atrule\">second-job-name</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> first<span class=\"token punctuation\">-</span>job<span class=\"token punctuation\">-</span>name\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">TEST_USER_USR</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.TEST_USER_USR <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">TEST_USER_PSW</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.TEST_USER_PSW <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Fetch `first<span class=\"token punctuation\">-</span>job<span class=\"token punctuation\">-</span>name`'s build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/download<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run npm Script\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run hello\n</code></pre></div>\n</li>\n<li>\n<p>(Job example) One workflow to build once and deploy in parallel</p>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build one and deploy in parallel\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n\n  <span class=\"token key atrule\">publish-npm</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> build\n\n  <span class=\"token key atrule\">publish-gpr</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> build\n</code></pre></div>\n</li>\n</ul>\n<h3>Allow to manually run an Action in the Github web GUI</h3>\n<ul>\n<li>Manually run Actions with <code>workflow_dispatch</code>\n<ul>\n<li>You can manually trigger workflow runs. To trigger specific workflows in a repository, use the workflow_dispatch event.</li>\n<li>To trigger more than one workflow in a repository and create custom events and event types, use the repository_dispatch event.</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Manually triggered workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">workflow_dispatch</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Person to greet'</span>\n        <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mona the Octocat'</span>\n      <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'location'</span>\n        <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n        <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'The Octoverse'</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">say_hello</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          echo \"Hello ${{ github.event.inputs.name }}!\"</span>\n<span class=\"token scalar string\">          echo \"- in ${{ github.event.inputs.home }}!\"</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>Github action to run a Conjob</h3>\n<ul>\n<li><a href=\"https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events\">docs Scheduled events</a></li>\n<li>If you are running a shell script you have to add change the owner of the script\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> --chmod<span class=\"token operator\">=</span>+x -- ./scripts/moveFile.sh\n</code></pre></div>\n</li>\n<li>GitHub automatically creates a <code>GITHUB_TOKEN</code> secret to use in your workflow, so you don’t have to worry about creating this. The <code>GITHUB_TOKEN</code> secret allows us to authenticate ourselves (in this example is needed to push the changes).\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run a scheduler\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span>  <span class=\"token string\">'0 0 * * 0'</span>  <span class=\"token comment\"># At 00:00 on Sunday. (https://crontab.guru/)</span>\n  <span class=\"token key atrule\">workflow_dispatch</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">scheduler</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run the npm Script\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run generate<span class=\"token punctuation\">:</span>report\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Commit generated report\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          git config --local user.email \"action@github.com\"</span>\n<span class=\"token scalar string\">          git config --local user.name \"GitHub Action\"</span>\n<span class=\"token scalar string\">          git add -A</span>\n<span class=\"token scalar string\">          git commit -m \"Auto-generated report\" -a</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Push changes\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> ad<span class=\"token punctuation\">-</span>m/github<span class=\"token punctuation\">-</span>push<span class=\"token punctuation\">-</span>action@v0.6.0\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>.  <span class=\"token comment\"># Github automatically takes care of this you don't have to create one</span>\n          <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main  \n</code></pre></div>\n</li>\n</ul>\n<h3>Configuring AWS credentials</h3>\n<ul>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials\">\"Configure AWS Credentials\" Action For GitHub Actions</a></li>\n<li>You will have to add <code>AWS_ACCESS_KEY_ID</code> &#x26; <code>AWS_SECRET_ACCESS_KEY</code> to your github secrets for the repo\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Using AWS Creds\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'main'</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run linter\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run lint\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run Tests\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run test<span class=\"token punctuation\">:</span>ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build Library\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Save Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">            build</span>\n<span class=\"token scalar string\">            pipeline</span>\n<span class=\"token scalar string\">            package.json</span>\n<span class=\"token scalar string\">            scripts</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> build\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MY_S3_WEBSITE_BUCKET_NAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"some-awesome-website\"</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Fetch Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/download<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configure AWS Credentials\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>actions/configure<span class=\"token punctuation\">-</span>aws<span class=\"token punctuation\">-</span>credentials@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">aws-access-key-id</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.AWS_ACCESS_KEY_ID <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">aws-secret-access-key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.AWS_SECRET_ACCESS_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token comment\"># aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # if you have/need it</span>\n          <span class=\"token key atrule\">aws-region</span><span class=\"token punctuation\">:</span> us<span class=\"token punctuation\">-</span>east<span class=\"token punctuation\">-</span><span class=\"token number\">2</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Copy files to the production website with the AWS CLI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          aws s3 sync . s3://${{ env.MY_S3_WEBSITE_BUCKET_NAME}}</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>GithubAction leveraging Terraform</h3>\n<ul>\n<li>Set up Terraform CLI in your GitHub Actions with <a href=\"https://github.com/hashicorp/setup-terraform\">hashicorp/setup-terraform</a>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'main'</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run linter\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run lint\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run Tests\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run test<span class=\"token punctuation\">:</span>ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build Library\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Save Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">            build</span>\n<span class=\"token scalar string\">            pipeline</span>\n<span class=\"token scalar string\">            package.json</span>\n<span class=\"token scalar string\">            scripts</span>\n\n  <span class=\"token key atrule\">dev_infrastructure</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORKSPACE</span><span class=\"token punctuation\">:</span> dev\n      <span class=\"token key atrule\">VAR_FILE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./env_configs/dev.tfvars'</span>\n      <span class=\"token key atrule\">terraform_state_bucket</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&#x3C;YOUR_TF_STATE_BUCKET>'</span>\n    <span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> pipeline/terraform\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> hashicorp/setup<span class=\"token punctuation\">-</span>terraform@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">terraform_version</span><span class=\"token punctuation\">:</span> 0.13.5\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configure AWS Credentials\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>actions/configure<span class=\"token punctuation\">-</span>aws<span class=\"token punctuation\">-</span>credentials@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">aws-region</span><span class=\"token punctuation\">:</span> us<span class=\"token punctuation\">-</span>west<span class=\"token punctuation\">-</span><span class=\"token number\">2</span>\n          <span class=\"token key atrule\">role-duration-seconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3600</span>\n          <span class=\"token key atrule\">role-to-assume</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.&#x3C;CI_ROLE<span class=\"token punctuation\">></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Terraform init\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          echo \"Running tf-deploy on ${{ env.WORKSPACE }}\"</span>\n<span class=\"token scalar string\">          echo \"Using Terraform state bucket: ${{ env.terraform_state_bucket }}\"</span>\n<span class=\"token scalar string\">          rm -rf .terraform/</span>\n<span class=\"token scalar string\">          terraform init -backend-config bucket=\"${{ env.terraform_state_bucket }}\"</span>\n<span class=\"token scalar string\">          if ! terraform workspace select ${{ env.WORKSPACE }}; then terraform workspace new ${{ env.WORKSPACE }}; fi</span>\n<span class=\"token scalar string\">          terraform apply -auto-approve -var-file=${{ env.VAR_FILE }}</span>\n\n  <span class=\"token key atrule\">deploy_dev</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> dev_infrastructure<span class=\"token punctuation\">,</span> build <span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Fetch Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/download<span class=\"token punctuation\">-</span>artifact@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configure AWS Credentials\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>actions/configure<span class=\"token punctuation\">-</span>aws<span class=\"token punctuation\">-</span>credentials@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">aws-region</span><span class=\"token punctuation\">:</span> us<span class=\"token punctuation\">-</span>west<span class=\"token punctuation\">-</span><span class=\"token number\">2</span>\n          <span class=\"token key atrule\">role-duration-seconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3600</span>\n          <span class=\"token key atrule\">role-to-assume</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.&#x3C;CI_ROLE<span class=\"token punctuation\">></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ./pipeline/client<span class=\"token punctuation\">-</span>deploy.sh dev\n</code></pre></div>\n</li>\n</ul>\n<h3>Notifiy builds</h3>\n<ul>\n<li>You can notify slack when a job step has happend\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Notify Slack\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">say_hello_to_slack</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          echo \"Hello ${{ github.event.inputs.name }}!\"</span>\n<span class=\"token scalar string\">          echo \"- in ${{ github.event.inputs.home }}!\"</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Notify Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          curl -X POST -H 'Content-type: application/json' --data '{\\\"text\\\":\\\"Hello Slack from '${{github.repository}}'' ${{ secrets.SLACK_HOOK}}</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>Composite Actions &#x26; Reusable Workflows</h3>\n<ul>\n<li>There are ALOT of overlap between Composite Actions &#x26; Reusable Workflows</li>\n<li><code>Composite Action</code> is presented as a <code>one-step</code> (even if it contains multiple steps) when invoked in a workflow</li>\n<li><code>Reusable workflows</code> can use <code>secrets</code>, whereas a composite action can’t.</li>\n<li>Both can only take string, number or boolean as a param. Arrays are not allowed.</li>\n<li><code>Reusable workflows</code> can’t be used with a <code>matrix</code> but <code>composite actions</code> can</li>\n</ul>\n<h4>Github resusable workflow repo</h4>\n<ul>\n<li>\n<p>You can have reusable workflows in the current repo or in another repo</p>\n<ul>\n<li>If in the same repo you have to have them in the <code>.github/workflows/</code> directory and not in a nested folder</li>\n<li>If in another repo, that repo has to be public or enabled available in your enterprise level and also in a <code>.github/workflows/</code> in that other repository</li>\n</ul>\n</li>\n<li>\n<p>All reusable workflows that use <code>secrets</code> need to be supplied those values and all <code>env</code> values should be pass thru via <code>inputs</code></p>\n</li>\n<li>\n<p>Creating a reusable workflow:</p>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">workflow_call</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">secrets</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">SOME_SECRET</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">hello_message</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A message to be passed in\"</span>\n        <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> string\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">setup</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">hello_message_as_env</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> inputs.hello_message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2.4.0\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"input value passed in =<span class=\"token punctuation\">></span> ( $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> inputs.hello_message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>)\"\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"input as environment variable  $hello_message_as_env\"\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"secret value passed in =<span class=\"token punctuation\">></span> ( $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SOME_SECRET <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>)<span class=\"token punctuation\">,</span> this should actually mask the actual secrete\"\n</code></pre></div>\n</li>\n<li>\n<p>Using that reusable workflow</p>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Uses reusable workflows\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">do_something</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">secrets</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">SOME_SECRET</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SECRET_IN_YOU_REPO_SETTINGS <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">hello_message</span><span class=\"token punctuation\">:</span> this rocks<span class=\"token tag\">!</span><span class=\"token tag\">!</span>\n    <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> ./.github/workflows/reuse<span class=\"token punctuation\">-</span>me.yml\n</code></pre></div>\n</li>\n</ul>\n<h4>Create a custom Github Action Composite Run Steps</h4>\n<ul>\n<li><code>Composite Run Steps</code> allows you to reuse parts of your workflows inside other workflows</li>\n<li>It's a type of actions that allows you to bundle multiple run steps in one single actions and re-use that bundle as a single step in another action</li>\n<li>You might have seen it in your for from</li>\n<li>TL;DR <code>Composite Run Steps</code> allows you to nest actions steps within an action step</li>\n<li>Why?\n<ul>\n<li>So you can create a template and reuse multiple places</li>\n<li>Keep things DRY (Don't Repeat Yourself)</li>\n<li>Use <code>env</code> variables</li>\n<li>You just need to modify one place to get the effect everywhere it gets uses that composite run steps</li>\n</ul>\n</li>\n<li>Supported properties:\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\">name  \nid  \nrun  \nenv  \nshell  \nworking<span class=\"token punctuation\">-</span>directory  \n</code></pre></div>\n</li>\n<li>Example of publicly available <code>Composite run steps</code> are: <code>aws-actions/configure-aws-credentials@v1</code>, <code>hashicorp/setup-terraform@v1</code></li>\n</ul>\n<ol>\n<li>Create a new repo just for this custom composiste run step e.g. <code>philopian/my-awesome-actions</code></li>\n<li>Create a <code>metadata file</code> and call it <code>actions.yml</code></li>\n</ol>\n<ul>\n<li>do not add trigger blocks in this file</li>\n</ul>\n<ol start=\"3\">\n<li>Add your content:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Build infrastructure'</span>\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Builds out our AWS infrastructure with Terraform'</span>\n<span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">WORKSPACE</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Workspace for which terraform is to build the infrastructure in'</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">VAR_FILE</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Location to the `env_configs/*.tfvars` file'</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">terraform_state_bucket</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'The terraform bucket for which terraform can write to the tf-state file in'</span>\n    <span class=\"token key atrule\">required</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">runs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">using</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"composite\"</span>\n  <span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> pipeline/terraform\n  <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> hashicorp/setup<span class=\"token punctuation\">-</span>terraform@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">terraform_version</span><span class=\"token punctuation\">:</span> 0.13.5\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Configure AWS Credentials\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> aws<span class=\"token punctuation\">-</span>actions/configure<span class=\"token punctuation\">-</span>aws<span class=\"token punctuation\">-</span>credentials@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">aws-region</span><span class=\"token punctuation\">:</span> us<span class=\"token punctuation\">-</span>west<span class=\"token punctuation\">-</span><span class=\"token number\">2</span>\n        <span class=\"token key atrule\">role-duration-seconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3600</span>\n        <span class=\"token key atrule\">role-to-assume</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.&#x3C;CI_ROLE<span class=\"token punctuation\">></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Terraform init\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">        echo \"Running tf-deploy on ${{ inputs.WORKSPACE }}\"</span>\n<span class=\"token scalar string\">        echo \"Using Terraform state bucket: ${{ inputs.terraform_state_bucket }}\"</span>\n<span class=\"token scalar string\">        rm -rf .terraform/</span>\n<span class=\"token scalar string\">        terraform init -backend-config bucket=\"${{ inputs.terraform_state_bucket }}\"</span>\n<span class=\"token scalar string\">        if ! terraform workspace select ${{ inputs.WORKSPACE }}; then terraform workspace new ${{ inputs.WORKSPACE }}; fi</span>\n<span class=\"token scalar string\">        terraform apply -auto-approve -var-file=${{ inputs.VAR_FILE }}</span>\n</code></pre></div>\n<ol start=\"4\">\n<li>From your terminal, check in your <code>actions.yml</code> file.</li>\n</ol>\n<ul>\n<li>Before we can use this \"snippet\" into our actions, we need to create a Tag and a Release for our repo.\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> action.yml\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Add action\"</span>\n$ <span class=\"token function\">git</span> push\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"5\">\n<li>From your terminal, add a tag. This example uses a tag called v1. For more information, see \"About actions.\"</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> tag -a -m <span class=\"token string\">\"Description of this release\"</span> v1\n$ <span class=\"token function\">git</span> push --follow-tags\n</code></pre></div>\n<ol start=\"6\">\n<li>Use this composite action, <strong>in a different repo</strong></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'main'</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">infrastructure</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> Terraform\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/philopian/my<span class=\"token punctuation\">-</span>awesome<span class=\"token punctuation\">-</span>actions@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">WORKSPACE</span><span class=\"token punctuation\">:</span> dev\n          <span class=\"token key atrule\">VAR_FILE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./env_configs/dev.tfvars'</span>\n          <span class=\"token key atrule\">terraform_state_bucket</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&#x3C;MY_TERRAFORM_S3_BUCKET>'</span>\n</code></pre></div>\n<h3>Github Action lint on push</h3>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CI\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span><span class=\"token number\">18.04</span>\n    <span class=\"token key atrule\">strategy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matrix</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node_version</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> matrix.node_version <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node_version</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> matrix.node_version <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> run CI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></span>\n<span class=\"token scalar string\">          npm install</span>\n<span class=\"token scalar string\">          npm run lint</span>\n<span class=\"token scalar string\">          npm run test</span>\n<span class=\"token scalar string\">          npm run build</span>\n</code></pre></div>\n<h2>Self-hosted Github Actions runner</h2>\n<ul>\n<li><a href=\"https://github.blog/2019-11-05-self-hosted-runners-for-github-actions-is-now-in-beta/\">Blog post on self-hosted runners</a></li>\n<li>If you don't make a self-hosted runner you are using a shared infrastructure on Github</li>\n<li>Advantages of a self-hosted runner:\n<ul>\n<li>Your environment, your tools</li>\n<li>Any size machine or configuration</li>\n<li>Secure access &#x26; networking</li>\n<li>Large workload support</li>\n</ul>\n</li>\n</ul>\n<h2>Github Pages</h2>\n<ul>\n<li>You can build a static site and have it hosted on GitHub Pages with a few configurations to the codebase and the github repository’s settings.</li>\n<li>This example expects that you are using npm for your development/deployment</li>\n</ul>\n<ol>\n<li>Create a new repo in Github</li>\n</ol>\n<ul>\n<li>Make sure that it's a <code>Public</code> repo</li>\n</ul>\n<ol start=\"2\">\n<li>Install the <a href=\"https://www.npmjs.com/package/gh-pages\">gh-pages</a> npm package</li>\n</ol>\n<ul>\n<li>Install gh-pages:\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm install gh-pages --save-dev</code></pre></div>\n</li>\n<li>Add a build/deploy script to your <code>package.json</code>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"some-build-script\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"predeploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf ./public\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &#x26;&#x26; gh-pages -d public\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>The <code>-d public</code> you're telling <code>gh-pages</code> where the build source code lives</li>\n<li>When you run npm run deploy all contents of the <code>public</code> folder will be moved to your repository’s gh-pages branch.</li>\n<li><strong>note</strong>: <em>With npm scripts if you prefix the scripts key name with <code>pre</code> it will run before the command and <code>post</code> it will run after</em></li>\n</ul>\n<ol start=\"3\">\n<li>Update setting for GithubPages</li>\n</ol>\n<ul>\n<li>You must select which branch will be deployed from your repository settings in GitHub for GitHub Pages to function.</li>\n<li>The nice thing about the <code>gh-pages</code> npm package is that it will create a <code>gh-pages</code> branch and wire it up for you</li>\n<li>Navigate to your repo then click [<code>Settings</code> > Scroll down to the <code>GitHub Pages</code> Section]\n<img src=\"/assets/blog/gh-pages-screenshot.png\" alt=\"\"></li>\n<li>It's ok to keep the path as <code>/ (root)</code> because the when you run <code>gh-pages -d public</code> it take the contents of the <code>public</code> folder and saves it to the root of the <code>gh-pages</code> branch</li>\n</ul>\n<ol start=\"4\">\n<li>Publishing to GitHub Pages</li>\n</ol>\n<ul>\n<li>All you need to do to publish to githubpages is to run the npm <code>deploy</code> script\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm run deploy</code></pre></div>\n</li>\n<li>Your static page should live: https://<code>&#x3C;GITHUB_USERNAME></code>.github.io/<code>&#x3C;REPO_NAME></code>/.</li>\n<li><em>You might have to clear your cache to see the new changes</em></li>\n</ul>\n<h3>Publish with Github Actions</h3>\n<ol>\n<li>create a personal access token</li>\n</ol>\n<ul>\n<li>click the avatar > profile > <code>Developer settings</code> > <code>Personal access token</code> or https://github.com/settings/tokens</li>\n<li>note: <code>&#x3C;repo_name> for github actions</code></li>\n<li>check the <code>repo</code> section</li>\n<li><strong>DON'T FORGET TO COPY THE TOKEN</strong></li>\n</ul>\n<ol start=\"2\">\n<li>In your repo settings paste the <code>ACCESS_TOKEN</code></li>\n</ol>\n<ul>\n<li></li>\n</ul>\n<h1>Github REST API</h1>\n<ul>\n<li><a href=\"https://docs.github.com/en/rest/reference\">REST API Reference</a></li>\n</ul>\n<ol>\n<li>Create a <code>New personal access token</code></li>\n</ol>\n<ul>\n<li>Go to <a href=\"https://github.com/settings/tokens/new?scopes=repo\">Github Developer settings</a></li>\n</ul>\n<ol start=\"2\">\n<li>Create a dotenv file in your repo root</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># file name: `.env`</span>\n<span class=\"token assign-left variable\">GH_PERSONAL_ACCESS_TOKEN</span><span class=\"token operator\">=</span><span class=\"token string\">'&#x3C;YOUR_ACCESS_TOKEN>'</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Install <code>@octokit/rest</code></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i @octokit/rest dotenv\n</code></pre></div>\n<ol start=\"4\">\n<li>Write your code</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Octokit</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/core'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ===== SETUP =============</span>\n<span class=\"token comment\">// Create a personal access token at https://github.com/settings/tokens/new?scopes=repo</span>\n<span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">auth</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GH_PERSONAL_ACCESS_TOKEN</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ===== SETUP =============</span>\n\n<span class=\"token comment\">// One way of getting </span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getRepos</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">org</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> repos <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> octokit<span class=\"token punctuation\">.</span><span class=\"token property-access\">rest</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">repos</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listForOrg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    org<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sort</span><span class=\"token operator\">:</span> <span class=\"token string\">'full_name'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">per_page</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'internal'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> repos<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">repo</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> repo<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Another way to get list of repos</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">listRepos</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">org</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> octokit<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET /orgs/{org}/repos'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    org<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">per_page</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">page</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> repos <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> item<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>repos<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// TODO: if the `response.data.length >= 100` make a call for the next page</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> repos\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Access files</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">owner<span class=\"token punctuation\">,</span> repo<span class=\"token punctuation\">,</span> path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> octokit<span class=\"token punctuation\">.</span><span class=\"token property-access\">rest</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">repos</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> owner<span class=\"token punctuation\">,</span> repo<span class=\"token punctuation\">,</span> path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token maybe-class-name\">Buffer</span><span class=\"token punctuation\">.</span><span class=\"token keyword module\">from</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">content</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">dependencies</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">org</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> repos <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">getRepos</span><span class=\"token punctuation\">(</span>org<span class=\"token punctuation\">)</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'repos'</span><span class=\"token punctuation\">,</span> repos<span class=\"token punctuation\">)</span>\n\n  repos<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">repo</span> <span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token keyword\">package</span> <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword control-flow\">await</span> <span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span>org<span class=\"token punctuation\">,</span> repo<span class=\"token punctuation\">,</span> <span class=\"token string\">'package.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">dependencies</span><span class=\"token punctuation\">)</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">dependencies</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">devDependencies</span><span class=\"token punctuation\">)</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">package</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">devDependencies</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> orgName <span class=\"token operator\">=</span> <span class=\"token string\">'...'</span>\n<span class=\"token function\">dependencies</span><span class=\"token punctuation\">(</span>orgName<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h1>Github GRAPH QL</h1>\n<ul>\n<li><a href=\"https://github.com/octokit/graphql.js\">docs</a></li>\n<li>Playing with the GraphQL Explorer\n<ol>\n<li>Got to the online <a href=\"https://docs.github.com/en/graphql/overview/explorer\">Graph QL explorer</a></li>\n<li>Click the <code>Sign in with Github</code> button (Authorize GraphQL API Explorer) if it's your first time</li>\n<li>In the GraphiQL click the <code>Explorer</code> button to see your options</li>\n</ol>\n</li>\n<li>example:\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">query { \n  viewer { \n    login\n  }\n}</code></pre></div>\n</li>\n</ul>\n","ogImage":{"url":"/assets/covers/github.jpg"},"coverImage":"/assets/covers/github.jpg"}},"__N_SSG":true}