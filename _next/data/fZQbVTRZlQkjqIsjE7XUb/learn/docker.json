{"pageProps":{"post":{"title":"docker","slug":"docker","content":"<h1>Basic Commands</h1>\n<ul>\n<li>\n<p>Basic commands</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># List all the images you have locally</span>\n$ docker images\n\n<span class=\"token comment\"># List all the containers</span>\n$ docker <span class=\"token function\">ps</span>\n\n<span class=\"token comment\"># List all running containers</span>\n$ docker <span class=\"token function\">ps</span> -a\n</code></pre></div>\n</li>\n<li>\n<p>Images</p>\n<ul>\n<li>Images are the blueprint to create a container\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ docker rmi <span class=\"token operator\">&#x3C;</span>IMAGE_NAME<span class=\"token operator\">></span>\n$ docker build -t <span class=\"token operator\">&#x3C;</span>IMAGE_NAME<span class=\"token operator\">></span> -f Dockerfile <span class=\"token builtin class-name\">.</span>\n$ docker run <span class=\"token operator\">&#x3C;</span>IMAGE_NAME<span class=\"token operator\">></span> -n <span class=\"token operator\">&#x3C;</span>CONTAINER_NAME<span class=\"token operator\">></span> -p <span class=\"token number\">8080</span>:8080\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Containers</p>\n<ul>\n<li>\n<p>A container is a runnable instance of an image.</p>\n</li>\n<li>\n<p>You can have multiple containers that were built from the same image</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ docker start <span class=\"token operator\">&#x3C;</span>CONTAINER_NAME<span class=\"token operator\">></span>\n$ docker stop <span class=\"token operator\">&#x3C;</span>CONTAINER_NAME<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Creating an image</p>\n<ul>\n<li>\n<p>All Docker images are based off some other image</p>\n</li>\n<li>\n<p>Creating a basic nodejs applications create a <code>Dockerfile</code>:</p>\n<ol>\n<li>Create a simple nodejs express application:</li>\n</ol>\n<ul>\n<li>Add some dependencies\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i -D @babel/node@7 @babel/preset-env@7 @babel/cli@7 @babel/core@7\n$ <span class=\"token function\">npm</span> i express\n$ <span class=\"token function\">mkdir</span> src\n$ <span class=\"token function\">touch</span> src/index.js\n</code></pre></div>\n</li>\n<li>Create a <code>.babelrc</code>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token property\">\"targets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"esmodules\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Add some script to your <code>package.json</code> file\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon --exec babel-node src/index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel src --out-dir dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node dist/index.js\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Create <code>src/index.js</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">express</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Hello</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Express\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all other routes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">ENV_VAR</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ENV_VAR</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"none passes in\"</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">...REST API is running, some ENV variable (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">ENV_VAR</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"2\">\n<li>Create <code>Dockerfile</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-Dockerfile\"><code class=\"language-Dockerfile\">FROM node:14\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\nCOPY src/ ./src\n\nRUN npm install\nRUN npm run build\n\nEXPOSE 3000\nCMD [ &#x26;quot;npm&#x26;quot;, &#x26;quot;run&#x26;quot;, &#x26;quot;serve&#x26;quot; ]</code></pre></div>\n<ol start=\"3\">\n<li>Create image &#x26; run the container</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ docker build -t pdotwdot/hello-simple-express:latest <span class=\"token builtin class-name\">.</span>\n$ docker images <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> pdotwdot/hello-simple-express\n$ docker run --name qqqqq -e <span class=\"token assign-left variable\">ENV_VAR</span><span class=\"token operator\">=</span><span class=\"token string\">'some env!'</span> --rm  -p <span class=\"token number\">1234</span>:3000 -t pdotwdot/hello-simple-express:latest\n</code></pre></div>\n<ol start=\"4\">\n<li>You can connect to that running container</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ docker <span class=\"token builtin class-name\">exec</span> -it <span class=\"token operator\">&#x3C;</span>CONTAINER_NAME<span class=\"token operator\">></span> <span class=\"token function\">bash</span> \n$ docker <span class=\"token builtin class-name\">exec</span> -it qqqqq <span class=\"token function\">bash</span> \n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n","ogImage":{"url":"/assets/covers/docker.jpg"},"coverImage":"/assets/covers/docker.jpg"}},"__N_SSG":true}