{"pageProps":{"post":{"title":"node.js","slug":"node.js","content":"<h1>What is Nodejs</h1>\n<ul>\n<li>\n<p>Node.js is an open-source and cross-platform JavaScript runtime environment.</p>\n</li>\n<li>\n<p>Node.js runs the V8 JavaScript engine, the core of Google Chrome, outside of the browser. This allows Node.js to be very performant.</p>\n</li>\n<li>\n<p>Both the browser and Node.js use JavaScript as their programming language.</p>\n</li>\n<li>\n<p>Node.js you don't have the <code>document</code>, <code>window</code> and all the other objects that are provided by the browser.</p>\n</li>\n<li>\n<p>The Browser we don't have all the nice APIs that allow for filesystem access functionality</p>\n</li>\n<li>\n<p>An additional feature that Nodejs provides is control over teh environment</p>\n</li>\n<li>\n<p>common npm commands</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init\n$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token operator\">&#x3C;</span>PACKAGE_NAME<span class=\"token operator\">></span> <span class=\"token operator\">|</span>  <span class=\"token function\">npm</span> i <span class=\"token operator\">&#x3C;</span>PACKAGE_NAME<span class=\"token operator\">></span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g <span class=\"token operator\">&#x3C;</span>SOME_GLOBAL_PACKAGE<span class=\"token operator\">></span>\n$ <span class=\"token function\">npm</span> uninstall <span class=\"token operator\">&#x3C;</span>PACKAGE_NAME<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token function\">npm</span> un <span class=\"token operator\">&#x3C;</span>PACKAGE_NAME<span class=\"token operator\">></span>\n$ <span class=\"token function\">npm</span> update <span class=\"token operator\">&#x3C;</span>PACKAGE_NAME<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token function\">npm</span> up <span class=\"token operator\">&#x3C;</span>PACKAGE_NAME<span class=\"token operator\">></span>\n$ <span class=\"token function\">npm</span> update\n$ <span class=\"token function\">npm</span> audit\n\n<span class=\"token comment\"># Run a npm script</span>\n$ <span class=\"token function\">npm</span> run <span class=\"token operator\">&#x3C;</span>NPM_SCRIPT_NAME<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># list globally installed packages</span>\n$ <span class=\"token function\">npm</span> list -g --depth<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n\n<span class=\"token comment\"># Update npm</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g npm@latest\n\n<span class=\"token comment\"># list installed packages and versions</span>\n$ <span class=\"token function\">npm</span> list <span class=\"token operator\">|</span> <span class=\"token function\">npm</span> <span class=\"token function\">ls</span>\n\n<span class=\"token comment\"># Install clean slate of the packages</span>\n$ <span class=\"token function\">npm</span> ci\n\n<span class=\"token comment\"># Symlink a package folder, to used it locally without publishing it </span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">link</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>The <code>package.json</code> file</h1>\n<ul>\n<li>The package.json file is a manifest for your project.</li>\n<li>It also defines alot of other things like, list all the dependencies you application needs &#x26; versions</li>\n<li>The easiest way to create one is <code>$ npm init -y</code></li>\n<li>The file structure might have these properties inside\n<ul>\n<li><code>version</code> indicates the current version</li>\n<li><code>name</code> sets the application/package name</li>\n<li><code>description</code> is a brief description of the app/package</li>\n<li><code>main</code> set the entry point for the application</li>\n<li><code>private</code> if set to true prevents the app/package to be accidentally published on npm</li>\n<li><code>scripts</code> defines a set of node scripts you can run</li>\n<li><code>dependencies</code> sets a list of npm packages installed as dependencies</li>\n<li><code>devDependencies</code> sets a list of npm packages installed as development dependencies</li>\n<li><code>engines</code> sets which versions of Node.js this package/app works on</li>\n<li><code>browserslist</code> is used to tell which browsers (and their versions) you want to support</li>\n</ul>\n</li>\n<li>In package.json you can set which versions you want to upgrade to (patch or minor), using the semver notation, for example:</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">exact package version               1.13.0 => 1.13.0\nupdate patch and minor releases     ~1.13.0 => 1.13.*\nexact version                       ^1.13.0 => 1.*.*\n</code></pre></div>\n<ul>\n<li>Don't commit your <code>node_modules</code> files because the <code>package.json</code> is used to fetch and manage the packaged used for the nodejs project</li>\n<li>You can enforce the nodejs version a repo can use with\n<ol>\n<li>Add in your <code>package.json</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"engines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\">=14.0.0 &#x3C;=15.0.0\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>Add in your <code>.npmrc</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">engine-strict=true\n</code></pre></div>\n</li>\n</ul>\n<h1>The <code>package-lock.json</code> file</h1>\n<ul>\n<li>In version 5, npm introduced the package-lock.json file.</li>\n<li>The goal of package-lock.json file is to keep track of the exact version of every package that is installed so that a product is 100% reproducible in the same way even if packages are updated by their maintainers.</li>\n<li>The package-lock.json sets your currently installed version of each package in stone, and npm will use those exact versions when running npm install.</li>\n<li>The <code>package-lock.json</code> file needs to be committed to your Git repository, so it can be fetched by other people, if the project is public or you have collaborators, or if you use Git as a source for deployments.</li>\n</ul>\n<h1>Node package managers</h1>\n<ul>\n<li>When you install <code>Node.js</code> <code>npm</code> (Node Package Manager) gets installed along with it</li>\n<li>NPM does 2 things:\n<ul>\n<li>It serves as an online platform registry where anyone can create/update/publish node packages</li>\n<li>It's a command-line tool, where you can download packages from the npm registry</li>\n</ul>\n</li>\n<li>Updating npm\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> i -g <span class=\"token function\">npm</span>\n</code></pre></div>\n</li>\n<li>Yarn (Yet Another Resource Negotiator) is a JavaScript package manager created by Facebook. It provides similar functionalities as NPM. It is an alternative to NPM when installing, uninstalling, and managing package dependencies from the NPM registry or GitHub repositories.</li>\n<li>Updating yarn\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> i -g <span class=\"token function\">yarn</span>\n</code></pre></div>\n</li>\n<li>Reasons for using yarn:\n<ul>\n<li>Enhanced security</li>\n<li>Better stability</li>\n<li>Faster</li>\n<li>Has offline mode, can install packages from local cache</li>\n<li>Resolved issues around <code>versioning</code> using <code>lock</code> files</li>\n<li>Reuses NPM json files and doesn't change its structure</li>\n<li>Imposes string guarantees around package installations</li>\n<li>Active user community</li>\n</ul>\n</li>\n<li>Not all roses\n<ul>\n<li>new package manager, sometimes more skepticism</li>\n<li>Smaller community than NPM</li>\n<li>Problems installing \"Native Modules\"</li>\n<li>Doesn't work with Nodejs version &#x3C; 5</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/79557260/138965939-58b9a4d5-2e38-4210-a471-b7f3d8d3ff5c.jpg\" alt=\"similar-npm-vs-yarn-commands\"></p>\n<h1>Creating a npm package</h1>\n<p>https://dev.to/joshaguilar/fully-automating-npm-package-releases-3k7ez</p>\n<ul>\n<li>sematic versioning\n<BREAKING>.<FEATURE>.<FIX>\n<MAJOR>.<MINOR>.<PATCH></li>\n</ul>\n<h2>For Every release</h2>\n<ol>\n<li>Run tests (if there are any)</li>\n<li>Update version in package.json according to Semver</li>\n<li>Create a git tag according to Semver\nMAJOR.MINOR.PATCH\n<code>$ git tag -a v#.#.# -m #.#.#</code></li>\n<li>Push the package to Github</li>\n<li>Push the package to npm</li>\n<li>Create release notes for every update</li>\n</ol>\n<h1>import/export files</h1>\n<ul>\n<li>\n<p>If you have a folder structure of and your <code>MyComponent</code> has a <code>default export</code>\n├── MyComponent.stories.jsx\n├── MyComponent.jsx\n├── MyComponent.module.css\n└── index.js</p>\n</li>\n<li>\n<p>Your <code>index.js</code> content</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// import MyComponent from './MyComponent'</span>\n<span class=\"token comment\">// export default MyComponent</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token exports\"><span class=\"token punctuation\">{</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./MyComponent'</span>\n</code></pre></div>\n</li>\n<li>\n<p>If you have a folder structure of and your <code>MyComponent</code> has a <code>named export</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// export { default as ComponentOne } from './MyComponent'</span>\n<span class=\"token comment\">// export { default as ComponentTwo } from './MyComponent'</span>\n<span class=\"token comment\">// export { default as ComponentThree } from './MyComponent'</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Controlling the node &#x26; npm version on a project with <code>.nvmrc</code> file</h1>\n<ul>\n<li>Having different versions of npm can messup the package-lock.json file</li>\n<li>You just need to make one file and update your package.json file\n<ol>\n<li>Add <code>.nvmrc</code> file with the version you want e.g. <code>v14.17.4</code> or <code>v14</code></li>\n<li>Add the <code>engines</code> object to your package.json file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"engines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"npm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"6.14.14\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"14.17.4\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Now you just need to run <code>$ nvm use</code> to set the exact node/npm version</li>\n</ol>\n</li>\n</ul>\n<h1>Using Docker to local development</h1>\n<ul>\n<li>\n<p>Initialize a nodejs</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i express\n$ <span class=\"token function\">npm</span> i -D nodemon\n$ <span class=\"token function\">mkdir</span> src\n</code></pre></div>\n</li>\n<li>\n<p>Update the <code>package.json</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"docker\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Example of working with Docker and Expressjs\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon ./src\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"express\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.17.1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"nodemon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^2.0.7\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"engines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\">= 14.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"npm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\">= 7.0.0\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create the <code>src/index.js</code> file</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Constants</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">HOST</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOST</span> <span class=\"token operator\">||</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// App</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!!!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">HOST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The magic is running on http://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">HOST</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a <code>.gitignore</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">node_modules\n</code></pre></div>\n</li>\n<li>\n<p>Create a <code>Dockerfile</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token keyword\">FROM</span> node<span class=\"token punctuation\">:</span>14\n<span class=\"token keyword\">WORKDIR</span> /usr/src/app\n<span class=\"token keyword\">COPY</span> package*.json ./\n<span class=\"token keyword\">RUN</span> npm install\n\n<span class=\"token keyword\">COPY</span> . .\n\n<span class=\"token keyword\">EXPOSE</span> 8080\n\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span> <span class=\"token punctuation\">]</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a <code>.dockerignore</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">node_modules\nnpm-debug.log\n</code></pre></div>\n</li>\n<li>\n<p>Create a docker image for your application to develop with</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ docker build <span class=\"token builtin class-name\">.</span> -t <span class=\"token operator\">&#x3C;</span>DOCKER_USERNAME<span class=\"token operator\">></span>/node-web-app\n$ docker run -it -p <span class=\"token number\">8080</span>:8080 -v <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>:/usr/src/app --name my_awesome_app -d <span class=\"token operator\">&#x3C;</span>DOCKER_USERNAME<span class=\"token operator\">></span>/node-web-app  <span class=\"token function\">sh</span> -c <span class=\"token string\">'npm run dev'</span> \n</code></pre></div>\n</li>\n<li>\n<p>The above allows you to develop inside the docker container via a volume</p>\n</li>\n<li>\n<p>When you are ready to publish you can create an image with a version</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ docker build <span class=\"token builtin class-name\">.</span> -t <span class=\"token operator\">&#x3C;</span>DOCKER_USERNAME<span class=\"token operator\">></span>/node-web-app:v0.1\n$ docker run -p <span class=\"token number\">8080</span>:8080 --name my_awesome_app_prod -d <span class=\"token operator\">&#x3C;</span>DOCKER_USERNAME<span class=\"token operator\">></span>/node-web-app:v0.1\n</code></pre></div>\n</li>\n<li>\n<p>Add TypeScript</p>\n<ul>\n<li>Install typescript\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D typescript ts-node @types/node @types/express\n</code></pre></div>\n</li>\n<li>Update your <code>package.json</code> file</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./dist/src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon ./src/index.ts\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>Create a <code>tsconfig.json</code> file\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Rename <code>src/index.js</code> to <code>src/index.ts</code></li>\n<li>Now you can use <code>import</code> instead of commonjs <code>require(&#x3C;package_name>)</code>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> express<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Request<span class=\"token punctuation\">,</span> Response<span class=\"token punctuation\">,</span> NextFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Constants</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Types</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">RootMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// App</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span>Request<span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> Response<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> message<span class=\"token operator\">:</span> RootMessage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>message<span class=\"token operator\">:</span><span class=\"token string\">'Hello World!!'</span><span class=\"token punctuation\">}</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The magic is running on PORT:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Installation</h1>\n<ul>\n<li>There are a few ways to install Nodejs on your machine</li>\n<li>There are 2 main versions to consider <code>LTS</code> and <code>Current</code></li>\n<li><code>LTS</code> is for Long Term Support which is the stable version as for the <code>Current</code> is the more cutting edge</li>\n<li>Nodejs even versions are stable and odd versions for the lastest versions</li>\n<li>More about release dates and versions <a href=\"https://nodejs.org/en/about/releases/\">go here</a></li>\n</ul>\n<ol>\n<li>Install from the <a href=\"https://nodejs.org/en/\">nodejs</a> homepage</li>\n<li>HomeBrew on your mac</li>\n<li><a href=\"https://github.com/nvm-sh/nvm\">NVM</a> (My prefered way cause you can switch node versions easily)</li>\n</ol>\n<h2>Installing nodejs via Homepage</h2>\n<ul>\n<li>Install the latest binaries <a href=\"https://nodejs.org/en/download/\">here</a></li>\n</ul>\n<h2>Installing nodejs via HomeBrew</h2>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ brew update\n$ brew upgrade node\n</code></pre></div>\n<h2>Install nodejs with nvm</h2>\n<ul>\n<li>\n<p>Install via homebrew</p>\n<ul>\n<li><a href=\"http://dev.topheman.com/install-nvm-with-homebrew-to-use-multiple-versions-of-node-and-iojs-easily/\">tut</a></li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ brew update\n$ brew <span class=\"token function\">install</span> nvm\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># NVM installed via homebrew</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -s <span class=\"token environment constant\">$HOME</span>/.nvm/nvm.sh <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token builtin class-name\">.</span> <span class=\"token environment constant\">$HOME</span>/.nvm/nvm.sh\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/.nvm\"</span>\n<span class=\"token builtin class-name\">source</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>brew --prefix nvm<span class=\"token variable\">)</span></span>/nvm.sh\n</code></pre></div>\n</li>\n<li>\n<p>Install via the <a href=\"https://github.com/nvm-sh/nvm\">ruby way</a></p>\n<ul>\n<li>Add this to your bash/zshrc:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># NVM</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.nvm\"</span>\n<span class=\"token punctuation\">[</span> -s <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/nvm.sh\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">\\</span>. <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/nvm.sh\"</span>  <span class=\"token comment\"># This loads nvm</span>\n<span class=\"token punctuation\">[</span> -s <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/bash_completion\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">\\</span>. <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/bash_completion\"</span>  <span class=\"token comment\"># This loads nvm bash_completion</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/opt/grep/libexec/gnubin:<span class=\"token environment constant\">$PATH</span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><em>note :</em> every time you switch node versions you'll have to install all your globals again as well as you will have to delete your projects <code>node_modules</code> because these dependencies are specfic to the exact node version &#x26; OS installed</p>\n</li>\n<li>\n<p>Upgrade <code>NVM</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ nvm <span class=\"token function\">install</span> stable --reinstall-packages-from<span class=\"token operator\">=</span>current\n</code></pre></div>\n</li>\n<li>\n<p>If your npm global packages point to a different nodejs version run this</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> list -g --depth<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n$ <span class=\"token function\">npm</span> config <span class=\"token function\">rm</span> prefix\n</code></pre></div>\n</li>\n<li>\n<p>NVM commands</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Check nodejs version</span>\n$ node -v <span class=\"token operator\">||</span> node --version\n\n<span class=\"token comment\"># List installed versions of node (via nvm)</span>\n$ nvm <span class=\"token function\">ls</span>\n\n<span class=\"token comment\"># Install specific version of node</span>\n$ nvm <span class=\"token function\">install</span> <span class=\"token number\">12.20</span>.1\n\n<span class=\"token comment\"># Set default version of node</span>\n$ nvm <span class=\"token builtin class-name\">alias</span> default <span class=\"token number\">12.20</span>.1\n\n<span class=\"token comment\"># Switch version of node</span>\n$ nvm use <span class=\"token number\">14.15</span>.4\n\n<span class=\"token comment\"># List latest available versions</span>\n$ nvm ls-remote <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -i <span class=\"token string\">'latest'</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Creating a CLI</h1>\n<ul>\n<li>There are 2 types of packages you can create: <code>global</code> &#x26; <code>local</code></li>\n<li>The <code>global</code> package can be installed an run like a bash command</li>\n<li>Start by creating a new package\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init -y\n</code></pre></div>\n</li>\n<li>Create a <code>bin/index.js</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">#<span class=\"token operator\">!</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>env node\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n</li>\n<li>In your <code>package.json</code> file add\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"your-module-name\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"bin\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"your-module-name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./bin/index.js\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Link this application on your machine so you can test it out\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">link</span>\n</code></pre></div>\n</li>\n<li>Now you can run your CLI\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ your-module-name\n</code></pre></div>\n</li>\n<li>You can publish it too</li>\n</ul>\n<h1>Spawn</h1>\n<ul>\n<li>Node.js runs in a single-thread mode, but it uses an event-driven paradigm to handle concurrency.</li>\n<li>It also facilitates creation of child processes to leverage parallel processing on multi-core CPU based systems.</li>\n<li>Node provides child_process module which has the following three major ways to create a child process.\n<ul>\n<li>\n<p><em>exec</em> − <code>child_process.exec</code> method runs a command in a shell/console and buffers the output.</p>\n</li>\n<li>\n<p><em>spawn</em> − <code>child_process.spawn</code> launches a new process with a given command.</p>\n</li>\n<li>\n<p><em>fork</em> − The <code>child_process.fork</code> method is a special case of the spawn() to create child processes.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Node tools</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Find out-of-day packages</span>\n$ npx npm-upgrade\n\n$ npx depcheck\n\n<span class=\"token comment\"># Find and delete `node_modules` on your machine</span>\n$ npx npkill\n</code></pre></div>\n<h1>Killing your local server that is going rogue</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Find:</span>\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">lsof</span> -i :3000\n\n<span class=\"token comment\"># Kill:</span>\n$ <span class=\"token function\">kill</span> -9 <span class=\"token operator\">&#x3C;</span>PID<span class=\"token operator\">></span>\n</code></pre></div>\n<h1>Git hooks</h1>\n<ul>\n<li>\n<p>Automation is always good, especially when it reduces congnitive load and optimization</p>\n</li>\n<li>\n<p>We can automate things before we create commits or push changes to a repo</p>\n</li>\n<li>\n<p>The <code>.git</code> ditectory allows you to do native hooks if you want to or you can use something like husky to do all the heavy lifting for you and you can stay in JS land :)</p>\n</li>\n<li>\n<p>Check out the <a href=\"https://typicode.github.io/husky/#/\">Husky docs here</a></p>\n</li>\n<li>\n<p>Husky works with all <a href=\"https://git-scm.com/docs/githooks\">githooks</a></p>\n</li>\n<li>\n<p>Intall husky with:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ npx husky-init <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> \n</code></pre></div>\n</li>\n<li>\n<p>This will automatically wireup all the git hooks and add a script <code>.husky/pre-commit</code> where you can add whatever command run before a commit</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/husky.sh\"</span>\n\n<span class=\"token function\">npm</span> run lint\n</code></pre></div>\n</li>\n<li>\n<p>It will setup husky, modify <code>package.json</code> and create a sample <code>pre-commit</code> hook that you can edit. - By default, it will run npm test when you commit.</p>\n</li>\n<li>\n<p>To add another hook use husky add.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ npx husky <span class=\"token function\">add</span> .husky/pre-push <span class=\"token string\">'npm run lint &#x26;&#x26; npm run test:ci'</span>\n</code></pre></div>\n</li>\n<li>\n<p>This will create <code>.husky/pre-push</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/husky.sh\"</span>\n\n<span class=\"token function\">npm</span> run lint <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">npm</span> run test:ci\n</code></pre></div>\n</li>\n</ul>\n<h1>JWT (JSON Web Tokens)</h1>\n<p>https://auth0.com/docs/tokens/json-web-tokens/json-web-token-claims#reserved-claims</p>\n<h1>JS Doc</h1>\n<ul>\n<li>There are alot of ways to document your code; README, tutorials, documentation file, etc</li>\n<li>The problem with the one above is they get out of date quickly, it's best to put your documentaion as close to the code so that you can update it as you up update the functionality.</li>\n<li>JSDoc is perfect for this kinda documentation layer, plus if you are using vscode it will give you intellesence!</li>\n</ul>\n<ol>\n<li>Start with a code block</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Takes in to numbers and will add them</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addItems</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item1<span class=\"token punctuation\">,</span> item2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> item1 <span class=\"token operator\">+</span> item2\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> addItems\n</code></pre></div>\n<ol start=\"2\">\n<li>Add a description of what it does</li>\n</ol>\n<ul>\n<li>The function name should give it away but it gives you a chance to descript it with words)\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Takes in to numbers and will add them</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addItems</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item1<span class=\"token punctuation\">,</span> item2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> item1 <span class=\"token operator\">+</span> item2\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> addItems\n</code></pre></div>\n</li>\n<li><img src=\"plublic/assets/blog/jsdoc-description-only.jpg\" alt=\"jsdoc-description-only\"></li>\n</ul>\n<ol start=\"2\">\n<li>Now describe the params and the return</li>\n</ol>\n<ul>\n<li>Here is what the format looks like\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**\n*\n* <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>param <span class=\"token keyword\">type</span><span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">param</span> name - description\n*\n*/</span>\n</code></pre></div>\n</li>\n<li>Now let's add those\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**\n * Takes in to numbers and will add them\n *\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">item1</span> - First number\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">item2</span> - Second number\n * <span class=\"token keyword\">@returns</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> Sum of the 2 numbers\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addItems</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item1<span class=\"token punctuation\">,</span> item2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> item1 <span class=\"token operator\">+</span> item2\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> addItems\n</code></pre></div>\n</li>\n<li><img src=\"plublic/assets/blog/jsdoc-complete.jpg\" alt=\"jsdoc-complete\"></li>\n</ul>\n<ol start=\"3\">\n<li>Use the function</li>\n</ol>\n<ul>\n<li>\n<p>As you start to type in the parameter it will tell you the data type</p>\n</li>\n<li>\n<p><img src=\"plublic/assets/blog/jsdoc-using.jpg\" alt=\"jsdoc-using\"></p>\n</li>\n<li>\n<p>Example of JSDoc</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**\n * Raises a number to exponent\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">value</span> - The base to raise\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">exponent</span> - The exponent\n * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> - The exponent power\n */</span>\n\n <span class=\"token doc-comment comment\">/**\n * A silly logger function\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>string<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">message</span>\n * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">}</span></span> Nothing\n */</span>\n\n\n <span class=\"token doc-comment comment\">/**\n * Generates a table head\n * <span class=\"token keyword\">@author</span> Valentino Gagliardi &#x3C;valentinoDOTvalentinog.com>\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>HTMLTableElement<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">table</span> - The target HTML table\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>Array<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">data</span> - The array of cell header names\n */</span>\n</code></pre></div>\n</li>\n<li>\n<p>Generate docs</p>\n<ul>\n<li>You can use the <code>jsdoc</code> to generate documentation for all your functions</li>\n<li><em>Note</em> if you use <code>export default function yourFunctionName()</code> it won't create it you have to define it with just <code>function yourFunctionName()</code> then export it on another line <code>export default yourFunctionName</code></li>\n<li>Add the <code>jsdoc</code> package to your repo\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">mkdir</span> docs\n$ <span class=\"token function\">npm</span> i -D jsdoc\n</code></pre></div>\n</li>\n<li>update your <code>package.json</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"make:docs\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"jsdoc -d documentation src/*.js \"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n</li>\n<li>now run the doc generator\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> run make:docs\n$ <span class=\"token builtin class-name\">cd</span> documentation\n$ npx live-server\n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Download images from the web</h1>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Axios</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">downloadImage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> filepath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Axios</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token punctuation\">,</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span>\n    responseType<span class=\"token operator\">:</span> <span class=\"token string\">\"stream\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createWriteStream</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"close\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"https://some-place.com\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span><span class=\"token known-class-name class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> pictureNum</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fileName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pictureNum <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> webUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">BASE_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fileName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> downloadFilename <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">../art/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fileName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">____</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">downloadImage</span><span class=\"token punctuation\">(</span>webUrl<span class=\"token punctuation\">,</span> downloadFilename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">log</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n","ogImage":{"url":"/assets/covers/nodejs.jpg"},"coverImage":"/assets/covers/nodejs.jpg"}},"__N_SSG":true}