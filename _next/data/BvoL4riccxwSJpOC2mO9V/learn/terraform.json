{"pageProps":{"post":{"title":"terraform","slug":"terraform","content":"<details>\n<summary>What is Terraform</summary>\n<ul>\n<li>\n<p>Terraform is <code>Infrasture as code</code></p>\n</li>\n<li>\n<p>Other \"infrasture-as-code\" are: chef, puppet, anisble, SaltStack, CloudFoundation</p>\n</li>\n<li>\n<p>The major building pieces to TF are:</p>\n<ul>\n<li>variable (variables)</li>\n<li>locals (variables with interpellation)</li>\n<li>provider (aws|azure|google)</li>\n<li>provisioners (execute scripts on a local or remote machine as part of the creation or destruction)</li>\n<li>data (get information on existing services)</li>\n<li>resource (create resource)</li>\n<li>module (isolate configuration)</li>\n</ul>\n</li>\n<li>\n<p>Links:</p>\n<ul>\n<li><a href=\"https://blog.gruntwork.io/an-introduction-to-terraform-f17df9c6d180\">intro</a></li>\n<li><a href=\"https://medium.com/@pavloosadchyi/terraform-patterns-and-tricks-i-use-every-day-117861531173\">medium post</a></li>\n</ul>\n</li>\n<li>\n<p>Terraform is <code>declarative</code>, it says \"I declare therefore i am\"</p>\n</li>\n<li>\n<p>non-Terraform services do not get auto-magicly added to your state, Terraform only tracks the things it makes</p>\n<ol>\n<li>configurations: i declare the intent</li>\n<li>State: current state</li>\n</ol>\n</li>\n<li>\n<p>dry run <code>$ terraform plan</code></p>\n</li>\n<li>\n<p><strong>NOTE</strong> Terraform ignores subfolders, in order to use subfolders you have to configure the subfolders to be a <code>terraform module</code>, then include those modules in your <code>main.tf</code> file</p>\n</li>\n</ul>\n</details>\n<details>\n<summary>Install</summary>\n<ul>\n<li>You can install TF with homebrew but it's better to install it with <code>tfswitch</code> with homebrew</li>\n<li><a href=\"https://warrensbox.github.io/terraform-switcher/\">Terraform version manager</a></li>\n<li>this will allow you to switch version very easily\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">$ brew install warrensbox/tap/tfswitch\n$ tfswitch 0.12.4\n$ terraform -v</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Save remote-state in S3</summary>\n<ul>\n<li>\n<p><a href=\"https://www.terraform.io/docs/backends/types/s3.html\">docs</a></p>\n</li>\n<li>\n<p>It is highly recommended that you enable Bucket Versioning on the S3 bucket to allow for state recovery in the case of accidental deletions and human error.</p>\n</li>\n<li>\n<p>Paths to the state file inside the bucket: <em><code>&#x3C;bucket>/&#x3C;workspace_key_prefix>/&#x3C;workspace_name>/&#x3C;key></code></em></p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">\"Amazon S3\"/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>BUCKET_NAME_FOR_TF_STATE</span><span class=\"token punctuation\">></span></span>/env:/dev/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>TF_STATE_KEY</span><span class=\"token punctuation\">></span></span>\n\"Amazon S3\"/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>BUCKET_NAME_FOR_TF_STATE</span><span class=\"token punctuation\">></span></span>/env:/staging/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>TF_STATE_KEY</span><span class=\"token punctuation\">></span></span>\n\"Amazon S3\"/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>BUCKET_NAME_FOR_TF_STATE</span><span class=\"token punctuation\">></span></span>/env:/prod/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>TF_STATE_KEY</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n</li>\n<li>\n<p>Here is the format for the terraform remote state code block</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"mybucket\"</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"path/to/my/key\"</span>     <span class=\"token comment\"># &#x3C;TF_STATE_KEY>, it can just be a single string</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Here is an example for the terraform remote state code block</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"someawesomesite\"</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 0.13.5\"</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~>3.4\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Key: the path to the state file inside the bucket. When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">data <span class=\"token type variable\">\"terraform_remote_state\"</span></span> <span class=\"token string\">\"network\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">backend</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"s3\"</span>\n  <span class=\"token property\">config</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform-state-prod\"</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"network/terraform.tfstate\"</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Or you can have a blank terraform.backend and configure it with bash command</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">state_key</span><span class=\"token operator\">=</span><span class=\"token string\">\"prod/some-app/<span class=\"token variable\">${ENVIRONMENT}</span>.tfstate\"</span>\nterraform init <span class=\"token punctuation\">\\</span>\n  -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-terraform-state-bucket\"</span> <span class=\"token punctuation\">\\</span>\n  -backend-config<span class=\"token operator\">=</span><span class=\"token string\">\"key=<span class=\"token variable\">${state_key}</span>\"</span> <span class=\"token punctuation\">\\</span>\n  -backend-config<span class=\"token operator\">=</span><span class=\"token string\">\"encrypt=true\"</span> <span class=\"token punctuation\">\\</span>\n  -backend-config<span class=\"token operator\">=</span><span class=\"token string\">\"region=us-west-2\"</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Terraform CLI</summary>\n<ul>\n<li>\n<p><a href=\"https://www.terraform.io/docs/commands/index.html\">Terraform CLI</a></p>\n</li>\n<li>\n<p><code>$ terraform workspace (list|select|new|delete|show)</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform init\n$ terraform validate\n$ terraform <span class=\"token function\">fmt</span>   <span class=\"token comment\"># format all terraform at the current folder level </span>\n$ terraform plan\n$ terraform apply\n$ terraform apply -auto-approve\n$ terraform output\n$ terraform workspace\n\n$ terraform <span class=\"token function\">import</span> aws_s3_bucket.bucket <span class=\"token operator\">&#x3C;</span>bucket-name<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p>The terraform output command is used to extract the value of an output variable from the state file.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform plan\n$ terraform output\n\n$ <span class=\"token builtin class-name\">cd</span> to-base-of-tf-directory\n$ terraform output\n\n$ terraform workspace <span class=\"token keyword\">select</span> prod <span class=\"token operator\">&#x26;&#x26;</span> terraform refresh\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Terraform Plugins</summary>\n<ul>\n<li>Terraform relies on plugins called \"providers\" to interact with remote systems</li>\n<li>Defining your providers:\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">mycloud</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"mycorp/mycloud\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 1.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>The <code>required_providers</code> block must be nested inside the top-level <code>terraform</code> block (which can also contain other settings).</li>\n<li><a href=\"https://registry.terraform.io/namespaces/hashicorp\">main providers</a>\n<ul>\n<li>Lifecycle management of AWS resources, including EC2, Lambda, EKS, ECS, VPC, S3, RDS, DynamoDB, and more. This provider is maintained internally by the HashiCorp AWS Provider team.</li>\n</ul>\n</li>\n</ul>\n</details>\n<details>\n<summary>Variable</summary>\n<ul>\n<li>\n<p>You can define variables and provide <code>type</code>, <code>default</code> value, <code>description</code></p>\n</li>\n<li>\n<p>Varaibles have to be hard-coded (you cannot interpolating values)</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"some_variable\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hello\"</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"This is an example of a variable that has a string type\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Basic variable types are: string/list/map:</p>\n</li>\n<li>\n<p>The basic structure of defining a variable is:</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"some_key\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&#x3C;string|list|map>\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&#x3C;SOME_DEFAULT_VALUE>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>All variables used have to be defined beforehand</p>\n</li>\n<li>\n<p>Example of the 3 basic types:</p>\n<ul>\n<li>String\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> some_string </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"string\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hello terraform string\"</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"this is a simple string\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Use into the resource</span>\n<span class=\"token property\">some-parameter</span> <span class=\"token punctuation\">=</span> \"$<span class=\"token punctuation\">{</span>var.some_string<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>List\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> some_list </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"list\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"subnet1\"</span>,\n    <span class=\"token string\">\"subnet2\"</span>,\n    <span class=\"token string\">\"subnet3\"</span>,\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"this is a list\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># Use into the resource</span>\n<span class=\"token property\">some-parameter</span> <span class=\"token punctuation\">=</span> \"$<span class=\"token punctuation\">{</span>var.some_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Map\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> some_map </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"map\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">subnet1</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"subnet1\"</span>,\n    <span class=\"token property\">subnet2</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"subnet2\"</span>,\n    <span class=\"token property\">subnet3</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"subnet3\"</span>,\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"this is a map\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Use into the resource</span>\n<span class=\"token property\">some-parameter</span> <span class=\"token punctuation\">=</span> \"$<span class=\"token punctuation\">{</span>var.some_map<span class=\"token punctuation\">[</span><span class=\"token string\">\"subnet1\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><code>null</code> value is a special value that has no type</p>\n<ul>\n<li>a value that represents absence or omission</li>\n<li>If you set an argument of a resource or module to null, Terraform behaves as though you had completely omitted it</li>\n</ul>\n</li>\n<li>\n<p>When you run terraform all the empty variables (ones without a default value) if not provided in the command will be asked before terraform does it magic.</p>\n</li>\n<li>\n<p>You can also override any variables by passing in them as a flag when you run a terraform command</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform apply -var <span class=\"token assign-left variable\">some_key</span><span class=\"token operator\">=</span><span class=\"token string\">\"this rocks\"</span>\n</code></pre></div>\n</li>\n<li>\n<p>Providing a <code>Variables File</code></p>\n<ul>\n<li>All <code>*.tfvars</code> will get picked up when you run terraform, sometimes you want to load specific variable files based on the environment you want to deploy so passing supply <code>-var-file=&#x3C;FILE_NAME>.tfvars</code> with variable values might a great way to deal with different variables for different environments</li>\n<li><code>tfvar</code> file\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token property\">domain_suffix</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"-dev\"</span>\n<span class=\"token property\">hosted_zone_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"someawesomesite.com\"</span>\n<span class=\"token property\">env_tag</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Development\"</span>\n</code></pre></div>\n</li>\n<li><code>main.tf</code> file\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> domain_suffix </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> hosted_zone_name </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> env_tag </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li><code>Plan</code> script\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># `plan.sh` script to run a plan</span>\n<span class=\"token assign-left variable\">WORKSPACE</span><span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span>\n<span class=\"token assign-left variable\">VAR_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"./env_configs/dev.tfvars\"</span>\n<span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#x3C;TERRAFORM_S3_STATE_BUCKET>\"</span>\n<span class=\"token function\">rm</span> -rf .terraform/\nterraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> terraform workspace <span class=\"token keyword\">select</span> <span class=\"token variable\">${WORKSPACE}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  terraform workspace new <span class=\"token variable\">${WORKSPACE}</span>\n<span class=\"token keyword\">fi</span>\nterraform plan -var-file<span class=\"token operator\">=</span><span class=\"token variable\">$VAR_FILE</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>You can provide variables via the terminal</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">terraform apply -auto-approve <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"SOME_VAR_NAME=SOME_VALUE\"</span> <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"SOME_OTHER_VAR_NAME=SOME_VALUE\"</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"SOME_VAR_NAME\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"SOME_OTHER_VAR_NAME\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Locals (Local Value Configuration)</summary>\n<ul>\n<li>\n<p>locals are like variables that you can pass in ${dynamic} values</p>\n</li>\n<li>\n<p>A local value assigns a name to an expression, so you can use it multiple times within a module without repeating it.</p>\n</li>\n<li>\n<p>DRY principles, allows you to preform logic to create a value where you don't have to write every time</p>\n</li>\n<li>\n<p>You can also reference the a local variable inside the locals code block</p>\n</li>\n<li>\n<p>eg of locals</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">app_namespace</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">terraform</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">workspace</span><span class=\"token punctuation\">}</span></span>-client\"</span>\n  <span class=\"token property\">domain_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">domain_name</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">domain_suffix</span><span class=\"token punctuation\">}</span></span>.<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">hosted_zone_name</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Ids for multiple sets of EC2 instances, merged together</span>\n<span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">instance_ids</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>aws_instance<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span><span class=\"token punctuation\">*</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> aws_instance<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">.</span><span class=\"token punctuation\">*</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># A computed default name prefix</span>\n<span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default_name_prefix</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">project_name</span><span class=\"token punctuation\">}</span></span>-web\"</span>\n  <span class=\"token property\">name_prefix</span>         <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">name_prefix</span> <span class=\"token punctuation\">!</span><span class=\"token punctuation\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">?</span> <span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">name_prefix</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">default_name_prefix</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Local values can be interpolated elsewhere using the \"local.\" prefix.</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"files\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">name_prefix</span><span class=\"token punctuation\">}</span></span>-files\"</span>\n  <span class=\"token comment\"># ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Provider</summary>\n<ul>\n<li>\n<p><a href=\"https://www.terraform.io/docs/providers/index.html\">providers</a></p>\n</li>\n<li>\n<p>Providers are basically cloud providers as a service</p>\n<ul>\n<li>IaaS (infrastruture as a Service) like AWS, Azure, GCP</li>\n<li>PaaS (Platform as a Service) like Heroku</li>\n<li>SaaS (Software as a Service) like DNSimple, CloudFlare</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.terraform.io/docs/providers/aws/index.html\">AWS</a></p>\n<ul>\n<li>you can pass in your access-key/secret-key via environment variables, or hardcoded (not recommended)</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://alimac.io/static-websites-with-s3-and-hugo-part-1/\">tut</a></p>\n</li>\n<li>\n<p>Different ways to define providers:</p>\n<ol>\n<li>aws creds</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># access_key = \"${var.aws_access_key}\"</span>\n  <span class=\"token comment\"># secret_key = \"${var.aws_secret_key}\"</span>\n  <span class=\"token property\">region</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-2\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>hard-coded:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token property\">access_key</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-access-key\"</span>\n  <span class=\"token property\">secret_key</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-secret-key\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>via Environment variables</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_ACCESS_KEY_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"anaccesskey\"</span>\n$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_SECRET_ACCESS_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"asecretkey\"</span>\n$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_DEFAULT_REGION</span><span class=\"token operator\">=</span><span class=\"token string\">\"us-west-2\"</span>\n$ terraform plan\n</code></pre></div>\n<ol start=\"4\">\n<li>shared credentials:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span>                  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token property\">shared_credentials_file</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/Users/tf_user/.aws/creds\"</span>\n  <span class=\"token property\">profile</span>                 <span class=\"token punctuation\">=</span> <span class=\"token string\">\"customprofile\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li><a href=\"https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-instances\">using multiple providers</a></li>\n</ul>\n</li>\n</ul>\n</details>\n<details>\n<summary>Data</summary>\n<ul>\n<li>Get information on an existing resource</li>\n<li>aws_route53_zone</li>\n<li>aws_caller_identity</li>\n<li>aws_acm_certificate</li>\n</ul>\n</details>\n<details>\n<summary>Resource</summary>\n<ul>\n<li>Create AWS resources:\n<ul>\n<li>aws_iam_policy_document</li>\n<li>aws_acm_certificate</li>\n<li>aws_acm_certificate_validation</li>\n<li>aws_route53_record</li>\n<li>aws_s3_bucket</li>\n<li>aws_cloudfront_distribution</li>\n<li>aws_cloudfront_origin_access_identity</li>\n</ul>\n</li>\n<li>*** you can make a resource optionally if you pass in a count***\n<ul>\n<li>if you want the resource to be created if var.env == prod\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token property\">count</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">env</span> <span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span> <span class=\"token string\">\"prod\"</span> <span class=\"token punctuation\">?</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</details>\n<details>\n<summary>Provisioners</summary>\n<ul>\n<li>used to execute scripts on a local or remote machine as part of the creation or destruction</li>\n<li>creation-time provisioners\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo <span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">private_ip</span><span class=\"token punctuation\">}</span></span> > file.txt\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>by default provisioners run when a resource is created, not during the updating or any other lifecycle</li>\n<li>it is meant for bootstrapping a system</li>\n<li>if a creation-time provisioner fails, the resource will be flagged as <em>tainted</em>, and will be planned for destruction upon the next <em>$ terraform apply</em></li>\n<li>destroy-time provisioner\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">when</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"destroy\"</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo 'Destroy-time provisioner'\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>multiple provisioners\n<ul>\n<li>you can add multiple provisioners and they will run in the order they are defined</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo first\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo second\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Outputs</summary>\n<ul>\n<li>\n<p>You can print out the values that terraform will generate, when you run it with with <code>$ terraform output</code> it will output all the variable that is provided from the tfstate file</p>\n</li>\n<li>\n<p>When you make a module you can define the <code>output</code> your module provides as getters</p>\n</li>\n<li>\n<p>You can create bash variables from terraform <code>output</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">output<span class=\"token type variable\"> \"bucket_name\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">s3_bucket_website_name</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">terraform apply -auto-approve\n<span class=\"token assign-left variable\">bucket_name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>terraform output bucket_name<span class=\"token variable\">)</span></span>\n<span class=\"token function\">npm</span> run build\naws s3 <span class=\"token function\">rm</span> s3://<span class=\"token variable\">$bucket_name</span>/  --recursive\naws s3 <span class=\"token function\">sync</span> build/ s3://<span class=\"token variable\">$bucket_name</span>/ --exclude <span class=\"token punctuation\">\\</span>\"*.DS_Store*<span class=\"token punctuation\">\\</span>\"\naws s3 <span class=\"token function\">cp</span> build/index.html s3://<span class=\"token variable\">$bucket_name</span>/ --cache-control max-age<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Workspace</summary>\n<ul>\n<li><a href=\"https://www.terraform.io/docs/state/workspaces.html\">docs</a></li>\n<li>if you don't define a workspace then you only worked on the \"default\" workspace</li>\n<li>defines how operations are executed</li>\n<li>where persistent data are stored (for example terraform-state file)</li>\n<li>Creating a new workspace:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"ngp-terraform-remote-config\"</span>\n$ terraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n\n$ <span class=\"token assign-left variable\">ENVIRONMENT</span><span class=\"token operator\">=</span>dev\n$ terraform workspace new <span class=\"token variable\">$ENVIRONMENT</span>\n</code></pre></div>\n</li>\n<li>Using an existing workspace:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"ngp-terraform-remote-config\"</span>\n$ terraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n\n$ <span class=\"token assign-left variable\">ENVIRONMENT</span><span class=\"token operator\">=</span>dev\n$ terraform workspace <span class=\"token keyword\">select</span> <span class=\"token variable\">$ENVIRONMENT</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Auto approve</summary>\n<h1>Terraform auto-approve apply</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform apply -auto-approve\n</code></pre></div>\n</details>\n<details>\n<summary>Modules</summary>\n<ul>\n<li>\n<p>Terraform ignores subfolders, in order to use subfolders you have to configure the subfolders to be a <code>terraform module</code>, then include those modules in your <code>main.tf</code> file.</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"custom_module\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"./modules/custom_module\"</span>\n\n  <span class=\"token property\">app_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"app-name\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Modules can be created locally or accessed at a url</p>\n</li>\n<li>\n<p>It's like a class for terraform, it encapsulate a piece of configuration</p>\n</li>\n<li>\n<p>A container for multiple resources that are used together.</p>\n</li>\n<li>\n<p>Modules structure:</p>\n<ol>\n<li><strong>Input variables</strong></li>\n</ol>\n<ul>\n<li>accept values from the calling modules</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Output values</strong></li>\n</ol>\n<ul>\n<li>returns values you can ues to populate arguments elsewhere</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Resources</strong></li>\n</ol>\n<ul>\n<li>define 1-or-more infrastructure objects that the module will manage.</li>\n</ul>\n</li>\n<li>\n<p>To define a module, create a new directory and place some <code>.tf</code> files inside of it</p>\n</li>\n<li>\n<p>Terraform can load modules either from local relative paths (prefix with <code>./</code>) or from remote repositories</p>\n<ul>\n<li><code>\"./\"</code> prefix indicates that the address is a relative filesystem path.</li>\n</ul>\n</li>\n<li>\n<p>minimal folder structure:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">.</span>\n├── README.md\n├── main.tf\n├── variables.tf\n├── outputs.tf\n</code></pre></div>\n</li>\n<li>\n<p>Standard structure with nested module</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">.</span>\n├── README.md\n├── main.tf\n├── variables.tf\n├── outputs.tf\n├── <span class=\"token punctuation\">..</span>.\n├── modules/\n│   ├── nestedA/\n│   │   ├── README.md\n│   │   ├── variables.tf\n│   │   ├── main.tf\n│   │   ├── outputs.tf\n│   ├── nestedB/\n</code></pre></div>\n</li>\n<li>\n<p>Accessing the module's outputs you need to reference the module's outputs inside the root tf files. Example <code>./main.tf</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">output<span class=\"token type variable\"> \"root_variable_output_val\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Hello from the root tf\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">output<span class=\"token type variable\"> \"module_variable_output_val\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> module.some_awesome_module\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Calling modules <code>module.&#x3C;MODULE_NAME>.&#x3C;OUPUT_VALUE></code></p>\n</li>\n<li>\n<p><a href=\"https://www.terraform.io/docs/modules/sources.html\">source modules</a></p>\n<ul>\n<li>module installer supports:\n<ul>\n<li>Local paths</li>\n<li>Terraform Registry</li>\n<li>GitHub</li>\n<li>BitbucketGeneric Git, Mercurial repositories</li>\n<li>HTTP URLs</li>\n<li>S3 buckets</li>\n<li>GCS buckets</li>\n</ul>\n</li>\n<li>Example of using modules source\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"./consul\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Example of using modules source\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"../module_at_parent_level\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Example of using modules source from Github\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"git::https://github.com/&#x3C;GITHUB_NAMESPACE>/&#x3C;REPO_NAME>.git\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"git::https://github.com/&#x3C;GITHUB_NAMESPACE>/&#x3C;REPO_NAME>.git?ref=1.2.3\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"git::https://github.com/&#x3C;GITHUB_NAMESPACE>/&#x3C;REPO_NAME>.git?ref=&#x3C;SOME_BRANCH_NAME>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/azavea/terraform-aws-acm-certificate\">terraform-aws-acm-certificate</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"certificates\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"dns\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_route53_zone\"</span></span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"azavea.com\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">module<span class=\"token type variable\"> \"cert\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"github.com/azavea/terraform-aws-acm-certificate?ref=1.1.0\"</span>\n\n  <span class=\"token property\">providers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws.acm_account</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"aws.certificates\"</span>\n    <span class=\"token property\">aws.route53_account</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"aws.dns\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">domain_name</span>                       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"azavea.com\"</span>\n  <span class=\"token property\">subject_alternative_names</span>         <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*.azavea.com\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token property\">hosted_zone_id</span>                    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_route53_zone<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span>zone_id<span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token property\">validation_record_ttl</span>             <span class=\"token punctuation\">=</span> <span class=\"token string\">\"60\"</span>\n  <span class=\"token property\">allow_validation_record_overwrite</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p><strong>NOTE:</strong> <em>If you want to conditionally use a module</em>, Terraform 0.13 allows you do add a count to a module. You might want to use this if you only want a module to run in a specific deployment environment</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> forProd </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"resource_type\"</span></span> <span class=\"token string\">\"resource_name\"</span> <span class=\"token punctuation\">{</span>\n <span class=\"token property\">count</span> <span class=\"token punctuation\">=</span> var.forProd ? <span class=\"token number\">1</span> : <span class=\"token number\">0</span>\n ... other resource properties \n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<h1>Terraform and Providers</h1>\n<details>\n<summary>New Relic - Dashboard</summary>\n<ul>\n<li>\n<p>Assign some variables to the new-relic account id &#x26; api-key</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> account_id </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> api_key </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>terraform block &#x26; newrelic provider</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 0.13.5\"</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">newrelic</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"newrelic/newrelic\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 2.21.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"newrelic\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">account_id</span> <span class=\"token punctuation\">=</span> var.account_id\n  <span class=\"token property\">api_key</span>    <span class=\"token punctuation\">=</span> var.api_key\n  <span class=\"token property\">region</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"US\"</span> <span class=\"token comment\"># Valid regions are US and EU</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a new relic one dashboard</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"newrelic_one_dashboard\"</span></span> <span class=\"token string\">\"nark_dashboard\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.dashboard_name\n\n  <span class=\"token keyword\">page</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.dashboard_name\n\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# A\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# B\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">9</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# C\"</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# D\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# E\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">6</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# F\"</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Pass in the newrelic account/api-key which running the terraform script</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token assign-left variable\">NR_ACCOUNT_NUMBER</span><span class=\"token operator\">=</span><span class=\"token string\">\"****\"</span>\n$ <span class=\"token assign-left variable\">NR_API_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"****\"</span>\n\n$ terraform plan <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"account_id=<span class=\"token variable\">$NR_ACCOUNT_NUMBER</span>\"</span> <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"api_key=<span class=\"token variable\">$NR_API_KEY</span>\"</span>\n\n$ terraform apply -auto-approve <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"account_id=<span class=\"token variable\">$NR_ACCOUNT_NUMBER</span>\"</span> <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"api_key=<span class=\"token variable\">$NR_API_KEY</span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>AWS - API Gateway</summary>\n<ol>\n<li>Create a lambda function, <code>src/index.js</code></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Event: '</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> responseMessage <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> responseMessage<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>Create a <code>.gitignore</code></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Local .terraform directories</span>\n**/.terraform/*\n\n<span class=\"token comment\"># .tfstate files</span>\n*.tfstate\n*.tfstate.*\n\n<span class=\"token comment\"># Crash log files</span>\ncrash.log\n\n<span class=\"token comment\"># Exclude all .tfvars files, which are likely to contain sentitive data, such as</span>\n<span class=\"token comment\"># password, private keys, and other secrets. These should not be part of version </span>\n<span class=\"token comment\"># control as they are data points which are potentially sensitive and subject </span>\n<span class=\"token comment\"># to change depending on the environment.</span>\n<span class=\"token comment\">#</span>\n*.tfvars\n\n<span class=\"token comment\"># Ignore override files as they are usually used to override resources locally and so</span>\n<span class=\"token comment\"># are not checked in</span>\noverride.tf\noverride.tf.json\n*_override.tf\n*_override.tf.json\n\n<span class=\"token comment\"># Include override files you do wish to add to version control using negated pattern</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># !example_override.tf</span>\n\n<span class=\"token comment\"># Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan</span>\n<span class=\"token comment\"># example: *tfplan*</span>\n\n<span class=\"token comment\"># Ignore CLI configuration files</span>\n.terraformrc\nterraform.rc\nhello-world.zip\nresponse.json\n\n<span class=\"token comment\"># node packages</span>\nnode_modules\n</code></pre></div>\n<ol start=\"3\">\n<li>Script for running the lambda file locally</li>\n</ol>\n<ul>\n<li>Create an <code>test/event.json</code> file to pass into your lambda\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"resource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/API/PATH\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/API/PATH\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"httpMethod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"headers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"multiValueHeaders\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"queryStringParameters\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"multiValueQueryStringParameters\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"pathParameters\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"stageVariables\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"requestContext\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"resourceId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xxxxx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"resourcePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/api/endpoint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"httpMethod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/env/api/endpoint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"HTTP/1.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"stage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"domainName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"url.us-east-1.amazonaws.com\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{\\n    \\\"city\\\": \\\"Test 1 City\\\",\\n    \\\"state\\\": \\\"NY\\\",\\n    \\\"zipCode\\\": \\\"11549\\\"\\n}\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"isBase64Encoded\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Add a script to run the lambda file locally\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lambda:envoke:local\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node -e \\\"console.log(require('./src/index.js').handler(require('./test/event.json')));\\\"\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Let's add some terraform files</li>\n</ol>\n<ul>\n<li>Create  <code>./terraform/main.tf</code> and let's add the AWS providers, define the remote config file key\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"api-gateway-example\"</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 4.0.0\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token property\">archive</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/archive\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 2.2.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 1.0\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> var.aws_region\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Create <code>./terraform/variables.tf</code>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"aws_region\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"AWS region for all resources.\"</span>\n\n  <span class=\"token property\">type</span>    <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"project_name\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Project name to be used throughout the application\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"example-tf-api-gateway\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"5\">\n<li>Manually create an S3 bucket for your terraform state files and call it <code>terraform-remote-config-&#x3C;AWS_ACCOUNT_NUMBER></code></li>\n<li>Let's run this</li>\n</ol>\n<ul>\n<li><strong>NOTE</strong> you want to make you have your AWS-CLI credential configured (<a href=\"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-quickstart.html\">more here</a>) so that Terraform can push to the right account.</li>\n<li>Create a <code>./deploy.sh</code> file\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">set</span> -e\n\n<span class=\"token comment\"># Environments</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token keyword\">in</span>\n  dev<span class=\"token punctuation\">)</span> \n    <span class=\"token assign-left variable\">WORKSPACE</span><span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  prod<span class=\"token punctuation\">)</span> \n    <span class=\"token assign-left variable\">WORKSPACE</span><span class=\"token operator\">=</span><span class=\"token string\">\"prod\"</span>\n    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n  *<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin class-name\">echo</span> $<span class=\"token string\">\"Usage: <span class=\"token variable\">$0</span> {dev|prod}\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">esac</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Running tf-deploy on <span class=\"token variable\">${WORKSPACE}</span>\"</span>\n\n<span class=\"token comment\"># Terraform state, bucket name</span>\n<span class=\"token assign-left variable\">AWS_ACCOUNT_ID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws sts get-caller-identity <span class=\"token operator\">|</span> jq -r <span class=\"token string\">'.Account'</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"terraform-remote-config-<span class=\"token variable\">$AWS_ACCOUNT_ID</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Using Terraform state bucket: <span class=\"token variable\">$terraform_state_bucket</span>\"</span>\n\n<span class=\"token function\">pushd</span> terraform\n\n<span class=\"token comment\"># Cleanup .terraform</span>\n<span class=\"token function\">rm</span> -rf .terraform/\n\n<span class=\"token comment\"># Deploy terraform</span>\nterraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n\n<span class=\"token comment\"># If the workspace does not exist, create it.</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> terraform workspace <span class=\"token keyword\">select</span> <span class=\"token variable\">${WORKSPACE}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  terraform workspace new <span class=\"token variable\">${WORKSPACE}</span>\n<span class=\"token keyword\">fi</span>\nterraform apply -auto-approve\n<span class=\"token function\">popd</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"DONE!\"</span>\n</code></pre></div>\n</li>\n<li>Run the script\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Allow the deploy script to be run </span>\n$ <span class=\"token function\">chmod</span> +x deploy.sh\n\n$ ./deploy.sh\n</code></pre></div>\n</li>\n<li>Now if you go to AWS console and look in your <code>terraform-remote-config-&#x3C;AWS_ACCOUNT_NUMBER></code> bucket yo should have <code>./env:/dev/api-gateway-example</code> file</li>\n<li>Sweet now we have terraform setup that will update the state file in AWS so others can work on this project instead of the state file only being on your machine,</li>\n</ul>\n<ol start=\"7\">\n<li>Create and upload Lambda function archive to S3</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"rest_api_source\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> var.project_name\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Name</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"My bucket for API Gateway source code\"</span>\n    <span class=\"token property\">Environment</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dev\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket_acl\"</span></span> <span class=\"token string\">\"example\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> aws_s3_bucket.rest_api_source.id\n  <span class=\"token property\">acl</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"private\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">data <span class=\"token type variable\">\"archive_file\"</span></span> <span class=\"token string\">\"rest_api_source\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"zip\"</span>\n\n  <span class=\"token property\">source_dir</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"../rest-api/<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">path</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">module</span><span class=\"token punctuation\">}</span></span>/src\"</span>\n  <span class=\"token property\">output_path</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"../rest-api/<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">path</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">module</span><span class=\"token punctuation\">}</span></span>/dist/rest-api-source.zip\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_object\"</span></span> <span class=\"token string\">\"rest_api_source\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> aws_s3_bucket.rest_api_source.id\n\n  <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"rest-api-source.zip\"</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> data.archive_file.rest_api_source.output_path\n\n  <span class=\"token property\">etag</span> <span class=\"token punctuation\">=</span> filemd5(data.archive_file.rest_api_source.output_path)\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"8\">\n<li>Create the lambda function from the S3 zipped file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_lambda_function\"</span></span> <span class=\"token string\">\"rest_api\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">function_name</span> <span class=\"token punctuation\">=</span> var.project_name\n\n  <span class=\"token property\">s3_bucket</span> <span class=\"token punctuation\">=</span> aws_s3_bucket.rest_api_source.id\n  <span class=\"token property\">s3_key</span>    <span class=\"token punctuation\">=</span> aws_s3_object.rest_api_source.key\n\n  <span class=\"token property\">runtime</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"nodejs12.x\"</span>\n  <span class=\"token property\">handler</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"index.handler\"</span>\n\n  <span class=\"token property\">source_code_hash</span> <span class=\"token punctuation\">=</span> data.archive_file.rest_api_source.output_base64sha256\n\n  <span class=\"token property\">role</span> <span class=\"token punctuation\">=</span> aws_iam_role.lambda_exec.arn\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_cloudwatch_log_group\"</span></span> <span class=\"token string\">\"rest_api\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/aws/lambda/<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_lambda_function<span class=\"token punctuation\">.</span>rest_api<span class=\"token punctuation\">.</span>function_name<span class=\"token punctuation\">}</span></span>\"</span>\n\n  <span class=\"token property\">retention_in_days</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">30</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_iam_role\"</span></span> <span class=\"token string\">\"lambda_exec\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"serverless_lambda\"</span>\n\n  <span class=\"token property\">assume_role_policy</span> <span class=\"token punctuation\">=</span> jsonencode(<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"2012-10-17\"</span>\n    <span class=\"token property\">Statement</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token property\">Action</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"sts:AssumeRole\"</span>\n      <span class=\"token property\">Effect</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Allow\"</span>\n      <span class=\"token property\">Sid</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"\"</span>\n      <span class=\"token property\">Principal</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">Service</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"lambda.amazonaws.com\"</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>)\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_iam_role_policy_attachment\"</span></span> <span class=\"token string\">\"lambda_policy\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">role</span>       <span class=\"token punctuation\">=</span> aws_iam_role.lambda_exec.name\n  <span class=\"token property\">policy_arn</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>Custom Authorizer needs to return IAM Policy, <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-lambda-authorizer-output.html\">learn more here</a>, for example:\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"principalId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yyyyyyyy\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// The principal user identification associated with the token sent by the client.</span>\n  <span class=\"token property\">\"policyDocument\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"execute-api:Invoke\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow|Deny\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arn:aws:execute-api:{regionId}:{accountId}:{apiId}/{stage}/{httpVerb}/[{resource}/[{child-resources}]]\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"context\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"stringKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"numberKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"booleanKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"usageIdentifierKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{api-key}\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>The <code>context</code> object is optional</li>\n<li><a href=\"https://awspolicygen.s3.amazonaws.com/policygen.html\">Policy Generator</a></li>\n</ul>\n</details>\n<details>\n<summary>AWS - Elastic Container Registry (ECR) </summary>\n<h1>ECR</h1>\n<ul>\n<li>ECR is your own Docker repository where you can push images up to your AWS account</li>\n<li>Lets create a simple registry and add a docker container\n<ol>\n<li>Create a Node.js application e.g. <code>$ yarn create nest</code></li>\n<li>Create a docker file, <code>./Dockerfile</code></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">FROM node:18-alpine\nWORKDIR /user/src/app\nCOPY <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span>\nRUN <span class=\"token function\">rm</span> -rf node_modules <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">yarn</span> <span class=\"token function\">install</span> --frozen-lockfile\nRUN <span class=\"token function\">yarn</span> build\n<span class=\"token environment constant\">USER</span> <span class=\"token function\">node</span>\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"npm\"</span>, <span class=\"token string\">\"run\"</span>, <span class=\"token string\">\"start:prod\"</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>Create the AWS ECR</li>\n</ol>\n<ul>\n<li><a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/getting-started-cli.html\">AWS Docs</a>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">REPO_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"meee/nestjs-api\"</span>\n<span class=\"token assign-left variable\">AWS_REGION</span><span class=\"token operator\">=</span><span class=\"token string\">\"us-west-2\"</span>\naws ecr create-repository <span class=\"token punctuation\">\\</span>\n    --repository-name <span class=\"token variable\">$REPO_NAME</span> <span class=\"token punctuation\">\\</span>\n    --image-scanning-configuration <span class=\"token assign-left variable\">scanOnPush</span><span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n    --region <span class=\"token variable\">$AWS_REGION</span>\n</code></pre></div>\n</li>\n<li>Or with Terraform\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 4.16\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 1.0.10\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"ecr_registry_name\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecr_repository\"</span></span> <span class=\"token string\">\"ecr_repo\"</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.ecr_registry_name\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Create a build/deploy script</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Variables</span>\n<span class=\"token assign-left variable\">IMAGE_TAG</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">node</span> -p -e <span class=\"token string\">\"require('./package.json').version\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">AWS_REGION</span><span class=\"token operator\">=</span><span class=\"token string\">\"us-west-2\"</span>\n<span class=\"token assign-left variable\">IMAGE_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"nike/nestjs-api\"</span>\n<span class=\"token assign-left variable\">ACCOUNT_ID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>aws sts get-caller-identity <span class=\"token operator\">|</span> jq -r <span class=\"token string\">\".Account\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">REPOSITORY_URI</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$ACCOUNT_ID</span>.dkr.ecr.us-west-2.amazonaws.com\"</span>\n<span class=\"token assign-left variable\">ECR_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"ecr_example_repo\"</span>\n\n<span class=\"token comment\"># Check to see if version already exist</span>\n<span class=\"token assign-left variable\">NODE_V</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>jq <span class=\"token string\">\".version\"</span> package.json<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">element</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>aws ecr list-images --repository-name $IMAGE_NAME <span class=\"token operator\">|</span> jq .imageIds<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>.imageTag<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$element</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"<span class=\"token variable\">$NODE_V</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> \n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[Error] Version <span class=\"token variable\"><span class=\"token variable\">`</span>$<span class=\"token punctuation\">{</span>element<span class=\"token punctuation\">}</span><span class=\"token variable\">`</span></span> Already exist in the remote registry, update your package.json version\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># Build your image</span>\n<span class=\"token function\">yarn</span> build\n<span class=\"token function\">docker</span> build -t <span class=\"token string\">\"<span class=\"token variable\">$IMAGE_NAME</span>:<span class=\"token variable\">$IMAGE_TAG</span>\"</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">docker</span> build -t <span class=\"token string\">\"<span class=\"token variable\">$REPOSITORY_URI</span>/<span class=\"token variable\">$IMAGE_NAME</span>:latest\"</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">docker</span> build -t <span class=\"token string\">\"<span class=\"token variable\">$REPOSITORY_URI</span>/<span class=\"token variable\">$IMAGE_NAME</span>:<span class=\"token variable\">$IMAGE_TAG</span>\"</span> <span class=\"token builtin class-name\">.</span>\n\n<span class=\"token comment\"># Create Infrastructure</span>\n<span class=\"token function\">pushd</span> pipelines/terraform\nterraform init\nterraform apply -auto-approve -var <span class=\"token assign-left variable\">ecr_registry_name</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$IMAGE_NAME</span>\"</span>\n<span class=\"token function\">popd</span>\n\n<span class=\"token comment\"># Authenticating to Docker</span>\naws ecr get-login-password --region <span class=\"token variable\">$AWS_REGION</span> <span class=\"token operator\">|</span> <span class=\"token function\">docker</span> login --username AWS --password-stdin <span class=\"token string\">\"<span class=\"token variable\">$ACCOUNT_ID</span>.dkr.ecr.<span class=\"token variable\">$AWS_REGION</span>.amazonaws.com\"</span>\n\n<span class=\"token comment\"># Push to the repository</span>\n<span class=\"token function\">docker</span> push <span class=\"token string\">\"<span class=\"token variable\">$ACCOUNT_ID</span>.dkr.ecr.us-west-2.amazonaws.com/<span class=\"token variable\">$IMAGE_NAME</span>:<span class=\"token variable\">$IMAGE_TAG</span>\"</span>\n<span class=\"token function\">docker</span> push <span class=\"token string\">\"<span class=\"token variable\">$ACCOUNT_ID</span>.dkr.ecr.us-west-2.amazonaws.com/<span class=\"token variable\">$IMAGE_NAME</span>:latest\"</span>\n</code></pre></div>\n</li>\n</ul>\n</details>\n<details>\n<summary>Elastic Container Service (ECS)</summary>\n<h1>ECS</h1>\n<ul>\n<li>ECS is a fully managed container orchestration service. AWS ECS is a fantastic service for running your containers.</li>\n<li>ECS Fargate, as this is a serverless compute service that allows you to run containers without provisioning servers.</li>\n</ul>\n<ol>\n<li>Create a cluster go <a href=\"https://us-west-2.console.aws.amazon.com/ecs/v2/clusters?region=us-west-2\">here</a> to see all your clusters</li>\n</ol>\n<ul>\n<li>Add this to your TF files and run\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecs_cluster\"</span></span> <span class=\"token string\">\"my_cluster\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.cluster_name\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>You should then see your new cluster in AWS</li>\n</ul>\n<ol start=\"2\">\n<li>Create a Task</li>\n</ol>\n<ul>\n<li>Notice how we specify the image by referencing the repository URL of our other terraform resource.</li>\n<li>Also notice how we provide the port mapping of 3000.</li>\n<li>We also create an IAM role so that tasks have the correct permissions to execute.</li>\n<li>If you click Task Definitions in AWS ECS, you should see your new task:</li>\n<li>Add the following code:\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Cluster</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecs_cluster\"</span></span> <span class=\"token string\">\"my_cluster\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.cluster_name\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"task_name\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"(optional) describe your variable\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-first-task\"</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\"># Task definition</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecs_task_definition\"</span></span> <span class=\"token string\">\"my_first_task\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">family</span>                   <span class=\"token punctuation\">=</span> var.task_name\n  <span class=\"token property\">container_definitions</span>    <span class=\"token punctuation\">=</span> <span class=\"token heredoc string\">&#x3C;&#x3C;DEFINITION</span>\n<span class=\"token heredoc string\">  [</span>\n<span class=\"token heredoc string\">    {</span>\n<span class=\"token heredoc string\">      \"name\": \"${var.task_name}\",</span>\n<span class=\"token heredoc string\">      \"image\": \"${aws_ecr_repository.ecr_repo.repository_url}\",</span>\n<span class=\"token heredoc string\">      \"essential\": true,</span>\n<span class=\"token heredoc string\">      \"portMappings\": [</span>\n<span class=\"token heredoc string\">        {</span>\n<span class=\"token heredoc string\">          \"containerPort\": 3000,</span>\n<span class=\"token heredoc string\">          \"hostPort\": 3000</span>\n<span class=\"token heredoc string\">        }</span>\n<span class=\"token heredoc string\">      ],</span>\n<span class=\"token heredoc string\">      \"memory\": 512,</span>\n<span class=\"token heredoc string\">      \"cpu\": 256</span>\n<span class=\"token heredoc string\">    }</span>\n<span class=\"token heredoc string\">  ]</span>\n<span class=\"token heredoc string\">  DEFINITION</span>\n  <span class=\"token property\">requires_compatibilities</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"FARGATE\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Stating that we are using ECS Fargate</span>\n  <span class=\"token property\">network_mode</span>             <span class=\"token punctuation\">=</span> <span class=\"token string\">\"awsvpc\"</span>    <span class=\"token comment\"># Using awsvpc as our network mode as this is required for Fargate</span>\n  <span class=\"token property\">memory</span>                   <span class=\"token punctuation\">=</span> <span class=\"token number\">512</span>         <span class=\"token comment\"># Specifying the memory our container requires</span>\n  <span class=\"token property\">cpu</span>                      <span class=\"token punctuation\">=</span> <span class=\"token number\">256</span>         <span class=\"token comment\"># Specifying the CPU our container requires</span>\n  <span class=\"token property\">execution_role_arn</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_iam_role<span class=\"token punctuation\">.</span>ecsTaskExecutionRole<span class=\"token punctuation\">.</span>arn<span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_iam_role\"</span></span> <span class=\"token string\">\"ecsTaskExecutionRole\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>               <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ecsTaskExecutionRole\"</span>\n  <span class=\"token property\">assume_role_policy</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">data</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">aws_iam_policy_document</span><span class=\"token punctuation\">.</span>assume_role_policy<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_iam_policy_document\"</span></span> <span class=\"token string\">\"assume_role_policy\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">statement</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">actions</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sts:AssumeRole\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">principals</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Service\"</span>\n      <span class=\"token property\">identifiers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ecs-tasks.amazonaws.com\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_iam_role_policy_attachment\"</span></span> <span class=\"token string\">\"ecsTaskExecutionRole_policy\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">role</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_iam_role<span class=\"token punctuation\">.</span>ecsTaskExecutionRole<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token property\">policy_arn</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Create VPC</li>\n</ol>\n<ul>\n<li>As we are using Fargate, our tasks need to specify that the network mode is awsvpc.</li>\n<li>As a result, we need to extend our service to include a network configuration.</li>\n<li>You may have not known it yet, but our cluster was automatically deployed into your account’s default VPC.</li>\n<li>However, for a service, this needs to be explicitly stated, even if we wish to continue using the default VPC and subnets.</li>\n<li>First, we need to create reference resources to the default VPC and subnets so that they can be referenced by our other resources:\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_default_vpc\"</span></span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Default VPC\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Providing a reference to our default VPC</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_default_vpc\"</span></span> <span class=\"token string\">\"default_vpc\"</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Providing a reference to our default subnets</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_default_subnet\"</span></span> <span class=\"token string\">\"default_subnet_a\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">availability_zone</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"eu-west-2a\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_default_subnet\"</span></span> <span class=\"token string\">\"default_subnet_b\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">availability_zone</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"eu-west-2b\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_default_subnet\"</span></span> <span class=\"token string\">\"default_subnet_c\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">availability_zone</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"eu-west-2c\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"3\">\n<li>Create a service</li>\n</ol>\n<ul>\n<li>time to create the service, notice that we are using the VPC define above\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Service</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecs_service\"</span></span> <span class=\"token string\">\"my_service\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>            <span class=\"token punctuation\">=</span> var.app_name                     <span class=\"token comment\"># Naming our first service</span>\n  <span class=\"token property\">cluster</span>         <span class=\"token punctuation\">=</span> aws_ecs_cluster.cluster.id       <span class=\"token comment\"># Referencing our created Cluster</span>\n  <span class=\"token property\">task_definition</span> <span class=\"token punctuation\">=</span> aws_ecs_task_definition.task.arn <span class=\"token comment\"># Referencing the task our service will spin up</span>\n  <span class=\"token property\">launch_type</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"FARGATE\"</span>\n  <span class=\"token property\">desired_count</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">2</span> <span class=\"token comment\"># Setting the number of containers we want deployed to 2</span>\n\n\n  <span class=\"token keyword\">network_configuration</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">subnets</span>          <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_subnet<span class=\"token punctuation\">.</span>default_subnet_a<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>, <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_subnet<span class=\"token punctuation\">.</span>default_subnet_b<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>, <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_subnet<span class=\"token punctuation\">.</span>default_subnet_c<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">assign_public_ip</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\"># Providing our containers with public IPs</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li></li>\n</ul>\n<ol start=\"4\">\n<li>Final step is to create a Load Balancer</li>\n</ol>\n<ul>\n<li>Add this code to your TF files\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_alb\"</span></span> <span class=\"token string\">\"application_load_balancer\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>               <span class=\"token punctuation\">=</span> var.app_name <span class=\"token comment\"># Naming our load balancer</span>\n  <span class=\"token property\">load_balancer_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"application\"</span>\n  <span class=\"token property\">subnets</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\"># Referencing the default subnets</span>\n    <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_subnet<span class=\"token punctuation\">.</span>default_subnet_a<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>,\n    <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_subnet<span class=\"token punctuation\">.</span>default_subnet_b<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>,\n    <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_subnet<span class=\"token punctuation\">.</span>default_subnet_c<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token comment\"># Referencing the security group</span>\n  <span class=\"token property\">security_groups</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_security_group<span class=\"token punctuation\">.</span>load_balancer_security_group<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Creating a security group for the load balancer:</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_security_group\"</span></span> <span class=\"token string\">\"load_balancer_security_group\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">ingress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span> <span class=\"token comment\"># Allowing traffic in from port 80</span>\n    <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>\n    <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"tcp\"</span>\n    <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Allowing traffic in from all sources</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">egress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># Allowing any incoming port</span>\n    <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># Allowing any outgoing port</span>\n    <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"-1\"</span> <span class=\"token comment\"># Allowing any outgoing protocol </span>\n    <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Allowing traffic out to all IP addresses</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>To direct traffic we need to create a target group and listener. Each target group is used to route requests to one or more registered targets (in our case, containers).</li>\n<li>Add this code to your TF files\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Target Group and listener</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_lb_target_group\"</span></span> <span class=\"token string\">\"target_group\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"target-group\"</span>\n  <span class=\"token property\">port</span>        <span class=\"token punctuation\">=</span> <span class=\"token number\">80</span>\n  <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"HTTP\"</span>\n  <span class=\"token property\">target_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ip\"</span>\n  <span class=\"token property\">vpc_id</span>      <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_default_vpc<span class=\"token punctuation\">.</span>default_vpc<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span> <span class=\"token comment\"># Referencing the default VPC</span>\n  <span class=\"token keyword\">health_check</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">matcher</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"200,301,302\"</span>\n    <span class=\"token property\">path</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_lb_listener\"</span></span> <span class=\"token string\">\"listener\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">load_balancer_arn</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_alb<span class=\"token punctuation\">.</span>application_load_balancer<span class=\"token punctuation\">.</span>arn<span class=\"token punctuation\">}</span></span>\"</span> <span class=\"token comment\"># Referencing our load balancer</span>\n  <span class=\"token property\">port</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"80\"</span>\n  <span class=\"token property\">protocol</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"HTTP\"</span>\n  <span class=\"token keyword\">default_action</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">type</span>             <span class=\"token punctuation\">=</span> <span class=\"token string\">\"forward\"</span>\n    <span class=\"token property\">target_group_arn</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_lb_target_group<span class=\"token punctuation\">.</span>target_group<span class=\"token punctuation\">.</span>arn<span class=\"token punctuation\">}</span></span>\"</span> <span class=\"token comment\"># Referencing our tagrte group</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Now if you go to EC2 then click on <code>Load Balancer</code></li>\n<li>If you view the Listeners tab of your load balancer, you should see a listener that forwards traffic to your target group:</li>\n<li>We now have to tell your <code>aws_ecs_service</code> about this load balancer\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecs_service\"</span></span> <span class=\"token string\">\"my_service\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>            <span class=\"token punctuation\">=</span> var.app_name                     <span class=\"token comment\"># Naming our first service</span>\n  <span class=\"token comment\"># ...</span>\n  \n  <span class=\"token keyword\">load_balancer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">target_group_arn</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_lb_target_group<span class=\"token punctuation\">.</span>target_group<span class=\"token punctuation\">.</span>arn<span class=\"token punctuation\">}</span></span>\"</span> <span class=\"token comment\"># Referencing our target group</span>\n    <span class=\"token property\">container_name</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_ecs_task_definition<span class=\"token punctuation\">.</span>my_first_task<span class=\"token punctuation\">.</span>family<span class=\"token punctuation\">}</span></span>\"</span>\n    <span class=\"token property\">container_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">3000</span> <span class=\"token comment\"># Specifying the container port</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>ECS service does not allow traffic in by default. We can change this by creating a security group for the ECS service that allows traffic only from the application load balancer security group:</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Service</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_ecs_service\"</span></span> <span class=\"token string\">\"service\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>            <span class=\"token punctuation\">=</span> var.app_name                     <span class=\"token comment\"># Naming our first service</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">network_configuration</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token property\">security_groups</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_security_group<span class=\"token punctuation\">.</span>service_security_group<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Setting the security group</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\"># Security Group</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_security_group\"</span></span> <span class=\"token string\">\"service_security_group\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">ingress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">from_port</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">to_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">protocol</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"-1\"</span>\n    <span class=\"token comment\"># Only allowing traffic in from the load balancer security group</span>\n    <span class=\"token property\">security_groups</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_security_group<span class=\"token punctuation\">.</span>load_balancer_security_group<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">egress</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">from_port</span>   <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># Allowing any incoming port</span>\n    <span class=\"token property\">to_port</span>     <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># Allowing any outgoing port</span>\n    <span class=\"token property\">protocol</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"-1\"</span> <span class=\"token comment\"># Allowing any outgoing protocol </span>\n    <span class=\"token property\">cidr_blocks</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"0.0.0.0/0\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Allowing traffic out to all IP addresses</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n</details>\n<h1>Terraform (Infrastructure as Code) to build out your services</h1>\n<ul>\n<li>Why?\n<ul>\n<li>To document all the services that are being used</li>\n<li>Repeatable &#x26; reusable solution</li>\n<li>Tare down all the services created with Terraform because TF creates an inventory of all the services in a state file</li>\n</ul>\n</li>\n</ul>\n<h1>Terraform for a client-side static web application</h1>\n<h2>The variable file</h2>\n<ul>\n<li>This file is the only <code>.tf</code> file where you need to update values the rest of the <code>.tf</code> files are totally project agnostic\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./varables.tf)</span>\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token comment\"># Required variables (values passed in via command)</span>\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> domain_name </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> hosted_zone_name </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> env_tags </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token comment\"># TF version &#x26; State file config</span>\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&#x3C;YOUR_PROJECT_NAME_HERE>\"</span> <span class=\"token comment\"># this will define the TF state file</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 0.13.5\"</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~>3.4\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token comment\"># Default region</span>\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"region\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> var.region\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token comment\"># Interpolated Values</span>\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">domain_name</span><span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token property\">domain_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">domain_name</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token comment\"># Data</span>\n<span class=\"token comment\">#-------------------------------------------</span>\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_caller_identity\"</span></span> <span class=\"token string\">\"current\"</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>S3</h2>\n<ul>\n<li>Use S3 to store the static web files and a second bucket for logging\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./s3.tf)</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"site\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> local.bucket_name\n  <span class=\"token property\">acl</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"private\"</span>\n  <span class=\"token property\">policy</span> <span class=\"token punctuation\">=</span> data.aws_iam_policy_document.website_s3_policy.json\n\n  <span class=\"token keyword\">website</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">index_document</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"index.html\"</span>\n    <span class=\"token property\">error_document</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"404.html\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Environment</span> <span class=\"token punctuation\">=</span> var.env_tags\n    <span class=\"token property\">Created_with</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Terraform\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"log_bucket\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">bucket_name</span><span class=\"token punctuation\">}</span></span>-logs\"</span>\n  <span class=\"token property\">acl</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"log-delivery-write\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Policies</h2>\n<ul>\n<li>This policie only allows access via CloudFront to serve the webcontent\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./policies.tf)</span>\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_iam_policy_document\"</span></span> <span class=\"token string\">\"website_s3_policy\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">statement</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">actions</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"s3:GetObject\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">resources</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"arn:aws:s3:::<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">bucket_name</span><span class=\"token punctuation\">}</span></span>/*\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">principals</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"AWS\"</span>\n      <span class=\"token property\">identifiers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_cloudfront_origin_access_identity<span class=\"token punctuation\">.</span>website_origin_access_identity<span class=\"token punctuation\">.</span>iam_arn<span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Route53</h2>\n<ul>\n<li>Make sure that you purchase your domain name beforehand because we will need the Hosted Zone Id</li>\n<li>We will use TF to create an <code>A</code> record to connect to the CloudFront instance\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./route53.tf)</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_route53_record\"</span></span> <span class=\"token string\">\"domain\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>    <span class=\"token punctuation\">=</span> local.domain_name\n  <span class=\"token property\">zone_id</span> <span class=\"token punctuation\">=</span> data.aws_route53_zone.base.zone_id\n  <span class=\"token property\">type</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"A\"</span>\n  <span class=\"token keyword\">alias</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>                   <span class=\"token punctuation\">=</span> aws_cloudfront_distribution.website_cdn.domain_name\n    <span class=\"token property\">zone_id</span>                <span class=\"token punctuation\">=</span> aws_cloudfront_distribution.website_cdn.hosted_zone_id\n    <span class=\"token property\">evaluate_target_health</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_route53_zone\"</span></span> <span class=\"token string\">\"base\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>         <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">hosted_zone_name</span><span class=\"token punctuation\">}</span></span>.\"</span>\n  <span class=\"token property\">private_zone</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>ACM for certs</h2>\n<ul>\n<li>ACM provides an elegant wayt to convert  a cumbersome multi-step process into a single step, however when combined with Terraform this process is a little more complex because some processes have to happen in senquential steps</li>\n<li>Some of the TF modules include:\n<ul>\n<li><code>aws_acm_certificate</code>: To request a certificate for example.com</li>\n<li><code>aws_route53_record</code>: To create a DNS record to validate the certificate request</li>\n<li><code>aws_certificate_validation</code>: To ensure that ACM validates our DNS record before certificate use</li>\n</ul>\n</li>\n<li>In an effort to reduce the timming steps, <a href=\"https://www.azavea.com/\">azavea's team</a> assembled a reusable <a href=\"https://github.com/azavea/terraform-aws-acm-certificate\">Terraform module</a> to encapsulate the ACM and Route 53 resources used. Using the output from the validation resource ensures that Terraform will wait for ACM to validate the certificate before resolving its ARN. Now, the process of creating, validating, and waiting for a valid certificate looks like this:\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./certs.tf)</span>\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_route53_zone\"</span></span> <span class=\"token string\">\"base\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>         <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">hosted_zone_name</span><span class=\"token punctuation\">}</span></span>.\"</span>\n  <span class=\"token property\">private_zone</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"certificates\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> var.region\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"dns\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">module<span class=\"token type variable\"> \"cert\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"github.com/azavea/terraform-aws-acm-certificate?ref=3.0.0\"</span>\n\n  <span class=\"token property\">providers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws.acm_account</span>     <span class=\"token punctuation\">=</span> aws.certificates\n    <span class=\"token property\">aws.route53_account</span> <span class=\"token punctuation\">=</span> aws.dns\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">domain_name</span>                       <span class=\"token punctuation\">=</span> local.domain_name\n  <span class=\"token property\">hosted_zone_id</span>                    <span class=\"token punctuation\">=</span> data.aws_route53_zone.base.zone_id\n  <span class=\"token property\">validation_record_ttl</span>             <span class=\"token punctuation\">=</span> <span class=\"token string\">\"60\"</span>\n  <span class=\"token property\">allow_validation_record_overwrite</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_route53_record\"</span></span> <span class=\"token string\">\"domain\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>    <span class=\"token punctuation\">=</span> local.domain_name\n  <span class=\"token property\">zone_id</span> <span class=\"token punctuation\">=</span> data.aws_route53_zone.base.zone_id\n  <span class=\"token property\">type</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"A\"</span>\n  <span class=\"token keyword\">alias</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>                   <span class=\"token punctuation\">=</span> aws_cloudfront_distribution.website_cdn.domain_name\n    <span class=\"token property\">zone_id</span>                <span class=\"token punctuation\">=</span> aws_cloudfront_distribution.website_cdn.hosted_zone_id\n    <span class=\"token property\">evaluate_target_health</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>CloudFront</h1>\n<ul>\n<li>CloudFront allows for global distribution of our web content with the ability to cache content at AWS edge locations</li>\n<li>The CloudFront configuration is kind of a beast\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./cloudfront.tf)</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_cloudfront_origin_access_identity\"</span></span> <span class=\"token string\">\"website_origin_access_identity\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">comment</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"site <span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">terraform</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">workspace</span><span class=\"token punctuation\">}</span></span> Access Identity\"</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_cloudfront_distribution\"</span></span> <span class=\"token string\">\"website_cdn\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">origin</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">domain_name</span> <span class=\"token punctuation\">=</span> aws_s3_bucket.site.bucket_regional_domain_name\n    <span class=\"token property\">origin_id</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"origin-bucket-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_s3_bucket<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n\n    <span class=\"token keyword\">s3_origin_config</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">origin_access_identity</span> <span class=\"token punctuation\">=</span> aws_cloudfront_origin_access_identity.website_origin_access_identity.cloudfront_access_identity_path\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">enabled</span>             <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token property\">is_ipv6_enabled</span>     <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token property\">default_root_object</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"index.html\"</span>\n\n  <span class=\"token keyword\">logging_config</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">include_cookies</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token property\">bucket</span>          <span class=\"token punctuation\">=</span> aws_s3_bucket.log_bucket.bucket_domain_name\n    <span class=\"token property\">prefix</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"cloudfront_logs\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">aliases</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>local.domain_name<span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">default_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">allowed_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"DELETE\"</span>, <span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span>, <span class=\"token string\">\"PATCH\"</span>, <span class=\"token string\">\"POST\"</span>, <span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">cached_methods</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"origin-bucket-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_s3_bucket<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n\n    <span class=\"token keyword\">forwarded_values</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">query_string</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"true\"</span>\n\n      <span class=\"token keyword\">cookies</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">forward</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token property\">viewer_protocol_policy</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"redirect-to-https\"</span>\n    <span class=\"token property\">compress</span>               <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token property\">min_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">default_ttl</span>            <span class=\"token punctuation\">=</span> <span class=\"token number\">300</span>\n    <span class=\"token property\">max_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">1200</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Cache behavior with precedence 0</span>\n  <span class=\"token keyword\">ordered_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">path_pattern</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/index.html\"</span>\n    <span class=\"token property\">allowed_methods</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"DELETE\"</span>, <span class=\"token string\">\"OPTIONS\"</span>, <span class=\"token string\">\"PATCH\"</span>, <span class=\"token string\">\"POST\"</span>, <span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">cached_methods</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"origin-bucket-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_s3_bucket<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\"</span>\n\n    <span class=\"token keyword\">forwarded_values</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">query_string</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"true\"</span>\n\n      <span class=\"token keyword\">cookies</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">forward</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token property\">min_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">default_ttl</span>            <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">max_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">compress</span>               <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token property\">viewer_protocol_policy</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"redirect-to-https\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">custom_error_response</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">error_code</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"404\"</span>\n    <span class=\"token property\">response_code</span>      <span class=\"token punctuation\">=</span> <span class=\"token string\">\"200\"</span>\n    <span class=\"token property\">response_page_path</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/index.html\"</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">custom_error_response</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">error_code</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"403\"</span>\n    <span class=\"token property\">response_code</span>      <span class=\"token punctuation\">=</span> <span class=\"token string\">\"200\"</span>\n    <span class=\"token property\">response_page_path</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/index.html\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">price_class</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"PriceClass_100\"</span> <span class=\"token comment\"># https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html</span>\n\n  <span class=\"token keyword\">restrictions</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">geo_restriction</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">restriction_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">viewer_certificate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">acm_certificate_arn</span>      <span class=\"token punctuation\">=</span> module.cert.arn\n    <span class=\"token property\">ssl_support_method</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"sni-only\"</span>\n    <span class=\"token property\">minimum_protocol_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"TLSv1\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">lifecycle</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">ignore_changes</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>tags<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Environment</span> <span class=\"token punctuation\">=</span> var.env_tags\n    <span class=\"token property\">Created_with</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Terraform\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Finally the <code>.tfvars</code> file</h2>\n<ul>\n<li>Creating a <code>.tfvar</code> file allows you to deploy this applications to multiple environments (dev|statging|prod)\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># (./env_configs/prod.tfvars)</span>\n<span class=\"token property\">domain_name</span>      <span class=\"token punctuation\">=</span> <span class=\"token string\">\"myawesomesite.com\"</span>\n<span class=\"token property\">hosted_zone_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"myawesomesite.com\"</span>\n<span class=\"token property\">env_tags</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Production\"</span>\n</code></pre></div>\n</li>\n<li>Now running this\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># *NOTE* run these commands in the terraform folder</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_PROFILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#x3C;YOUR_AWS_PROFILE_HERE>\"</span>\n<span class=\"token assign-left variable\">CLIENT_BUCKET_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#x3C;YOUR_AWS_S3_BUCKET_NAME>\"</span>\n<span class=\"token assign-left variable\">TERRAFORM_STATE_BUCKET_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#x3C;YOUR_TF_REMOTE_STATE_BUCKET_NAME>\"</span>\n\n<span class=\"token comment\"># Environment variables</span>\n<span class=\"token assign-left variable\">WORKSPACE</span><span class=\"token operator\">=</span><span class=\"token string\">\"prod\"</span>\n<span class=\"token assign-left variable\">VAR_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"./env/prod.tfvars\"</span>\n\n<span class=\"token comment\"># TF version</span>\n<span class=\"token assign-left variable\">tf_ver</span><span class=\"token operator\">=</span><span class=\"token string\">\"v0.13.5\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>Terraform --version<span class=\"token variable\">)</span></span> <span class=\"token operator\">=~</span> <span class=\"token string\">\"Terraform <span class=\"token variable\">$tf_ver</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Terraform <span class=\"token variable\">$tf_ver</span> is required\"</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Cleanup .terraform</span>\n<span class=\"token function\">rm</span> -rf .terraform/\n\n<span class=\"token comment\"># Deploy terraform</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[Running] terraform\"</span>\nterraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${TERRAFORM_STATE_BUCKET_NAME}</span>\"</span>\n\n<span class=\"token comment\"># If the workspace does not exist, create it.</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> terraform workspace <span class=\"token keyword\">select</span> <span class=\"token variable\">${WORKSPACE}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> terraform workspace new <span class=\"token variable\">${WORKSPACE}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\nterraform apply -auto-approve -var-file<span class=\"token operator\">=</span><span class=\"token variable\">$VAR_FILE</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span> <span class=\"token comment\"># where the package.json file exist</span>\n\n<span class=\"token comment\"># Build the static files</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[Build] production version of the website]\"</span>\n<span class=\"token function\">yarn</span>\n<span class=\"token function\">yarn</span> run build\n\n<span class=\"token comment\"># Upload the source code to AWS S3</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"[Upload] website content\"</span>\naws s3 <span class=\"token function\">rm</span> s3://<span class=\"token variable\">$CLIENT_BUCKET_NAME</span>/  --recursive\naws s3 <span class=\"token function\">sync</span> dist/ s3://<span class=\"token variable\">$CLIENT_BUCKET_NAME</span>/ --exclude <span class=\"token punctuation\">\\</span>\"*.DS_Store*<span class=\"token punctuation\">\\</span>\"\naws s3 <span class=\"token function\">cp</span> dist/index.html s3://<span class=\"token variable\">$CLIENT_BUCKET_NAME</span>/ --cache-control max-age<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>CloudFront add a secondary failover origin</h2>\n<ul>\n<li>Create a bucket and a CloudFront ditribution:\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\">variable <span class=\"token string\">\"primary_bucket_name\"</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-awesome-site\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"s3_origin_id\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"myS3Origin\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Primary Origin</span>\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_iam_policy_document\"</span></span> <span class=\"token string\">\"primary_origin_website_s3_policy\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">statement</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">sid</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"bucket_policy_for_primary\"</span>\n    <span class=\"token property\">actions</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"s3:GetObject\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">effect</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Allow\"</span>\n    <span class=\"token property\">resources</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"arn:aws:s3:::<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">primary_bucket_name</span><span class=\"token punctuation\">}</span></span>/*\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">principals</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"AWS\"</span>\n      <span class=\"token property\">identifiers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>aws_cloudfront_origin_access_identity.website_origin_access_identity.iam_arn<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"primary_origin\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> var.primary_bucket_name\n  <span class=\"token property\">acl</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"private\"</span>\n  <span class=\"token property\">policy</span> <span class=\"token punctuation\">=</span> data.aws_iam_policy_document.primary_origin_website_s3_policy.json\n\n  <span class=\"token keyword\">website</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">index_document</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"index.html\"</span>\n    <span class=\"token property\">error_document</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"404.html\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">force_destroy</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\"># CloudFront (With single origin)</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_cloudfront_origin_access_identity\"</span></span> <span class=\"token string\">\"website_origin_access_identity\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">comment</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"site <span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">terraform</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">workspace</span><span class=\"token punctuation\">}</span></span> Access Identity\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_cloudfront_distribution\"</span></span> <span class=\"token string\">\"s3_distribution\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">origin</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">domain_name</span> <span class=\"token punctuation\">=</span> aws_s3_bucket.primary_origin.bucket_regional_domain_name\n    <span class=\"token property\">origin_id</span>   <span class=\"token punctuation\">=</span> var.s3_origin_id\n\n    <span class=\"token keyword\">s3_origin_config</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">origin_access_identity</span> <span class=\"token punctuation\">=</span> aws_cloudfront_origin_access_identity.website_origin_access_identity.cloudfront_access_identity_path\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">enabled</span>             <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token property\">is_ipv6_enabled</span>     <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token property\">comment</span>             <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Some comment\"</span>\n  <span class=\"token property\">default_root_object</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"index.html\"</span>\n\n  <span class=\"token keyword\">logging_config</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">include_cookies</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token property\">bucket</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"mylogs.s3.amazonaws.com\"</span>\n    <span class=\"token property\">prefix</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"myprefix\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">aliases</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mysite.example.com\"</span>, <span class=\"token string\">\"yoursite.example.com\"</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">default_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">allowed_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"DELETE\"</span>, <span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span>, <span class=\"token string\">\"PATCH\"</span>, <span class=\"token string\">\"POST\"</span>, <span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">cached_methods</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> var.s3_origin_id\n\n    <span class=\"token keyword\">forwarded_values</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">query_string</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n      <span class=\"token keyword\">cookies</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">forward</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token property\">viewer_protocol_policy</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"allow-all\"</span>\n    <span class=\"token property\">min_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">default_ttl</span>            <span class=\"token punctuation\">=</span> <span class=\"token number\">3600</span>\n    <span class=\"token property\">max_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">86400</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Cache behavior with precedence 0</span>\n  <span class=\"token keyword\">ordered_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">path_pattern</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/index.html\"</span>\n    <span class=\"token property\">allowed_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">cached_methods</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> var.s3_origin_id\n\n    <span class=\"token keyword\">forwarded_values</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">query_string</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"true\"</span>\n      <span class=\"token keyword\">cookies</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">forward</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token property\">min_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token property\">default_ttl</span>            <span class=\"token punctuation\">=</span> <span class=\"token number\">86400</span>\n    <span class=\"token property\">max_ttl</span>                <span class=\"token punctuation\">=</span> <span class=\"token number\">31536000</span>\n    <span class=\"token property\">compress</span>               <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token property\">viewer_protocol_policy</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"redirect-to-https\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">price_class</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"PriceClass_200\"</span>\n\n  <span class=\"token keyword\">restrictions</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">geo_restriction</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">restriction_type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"none\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">Environment</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"production\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">viewer_certificate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">cloudfront_default_certificate</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Now add a second bucket in another region and update your CloudFront config block to allow for secondary origin\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Add a bucket in another region</span>\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"eu-west-1\"</span>\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"failover_region\"</span>\n<span class=\"token punctuation\">}</span>\n\nvariable <span class=\"token string\">\"secondary_bucket_name\"</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-awesome-site-failover\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Secondary Bucket</span>\n<span class=\"token keyword\">data <span class=\"token type variable\">\"aws_iam_policy_document\"</span></span> <span class=\"token string\">\"secondary_origin_website_s3_policy\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">provider</span> <span class=\"token punctuation\">=</span> aws.failover_region\n\n  <span class=\"token keyword\">statement</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">sid</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"bucket_policy_for_secondary\"</span>\n    <span class=\"token property\">actions</span>   <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"s3:GetObject\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">effect</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Allow\"</span>\n    <span class=\"token property\">resources</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"arn:aws:s3:::<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">secondary_bucket_name</span><span class=\"token punctuation\">}</span></span>/*\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">principals</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">type</span>        <span class=\"token punctuation\">=</span> <span class=\"token string\">\"AWS\"</span>\n      <span class=\"token property\">identifiers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>aws_cloudfront_origin_access_identity.website_origin_access_identity.iam_arn<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"secondary_origin\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">provider</span> <span class=\"token punctuation\">=</span> aws.failover_region\n\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> var.secondary_bucket_name\n  <span class=\"token property\">acl</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"private\"</span>\n  <span class=\"token property\">policy</span> <span class=\"token punctuation\">=</span> data.aws_iam_policy_document.secondary_origin_website_s3_policy.json\n\n  <span class=\"token keyword\">website</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">index_document</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"index.html\"</span>\n    <span class=\"token property\">error_document</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"404.html\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">tags</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">force_destroy</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\"># Update your cloudfront distribution</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_cloudfront_distribution\"</span></span> <span class=\"token string\">\"s3_distribution\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># Add an `origin group`</span>\n  <span class=\"token keyword\">origin_group</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"OriginWithFailover\"</span>\n\n    <span class=\"token keyword\">failover_criteria</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">status_codes</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">403</span>, <span class=\"token number\">404</span>, <span class=\"token number\">500</span>, <span class=\"token number\">502</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># *NOTE: this order matters! (first one will be the primary)</span>\n    <span class=\"token keyword\">member</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"primaryS3\"</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">member</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"failoverS3\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Add a second origin</span>\n  <span class=\"token keyword\">origin</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">domain_name</span> <span class=\"token punctuation\">=</span> aws_s3_bucket.secondary_origin.bucket_regional_domain_name\n    <span class=\"token property\">origin_id</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"failoverS3\"</span>\n\n    <span class=\"token keyword\">s3_origin_config</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">origin_access_identity</span> <span class=\"token punctuation\">=</span> aws_cloudfront_origin_access_identity.website_origin_access_identity.cloudfront_access_identity_path\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">default_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"OriginWithFailover\"</span>\n\n    <span class=\"token property\">allowed_methods</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">cached_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># *...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">ordered_cache_behavior</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">target_origin_id</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"OriginWithFailover\"</span>\n\n    <span class=\"token property\">allowed_methods</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span>, <span class=\"token string\">\"OPTIONS\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Note </span>\n    <span class=\"token property\">cached_methods</span>  <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span>, <span class=\"token string\">\"HEAD\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># *...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># *...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Now you can test it by uploading this below HTML to the bucket in the <code>eu-west-1</code> and leave the <code>us-west-2</code> empty for now\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>title</span><span class=\"token punctuation\">></span></span>eu-west-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h1</span><span class=\"token punctuation\">></span></span>eu-west-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n</li>\n<li>If you go to the CloudFront URL, you should see a site that says <code>eu-west-1</code></li>\n<li>Now Add the below html to the <code>us-west-2</code> bucket:\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>title</span><span class=\"token punctuation\">></span></span>us-west-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h1</span><span class=\"token punctuation\">></span></span>us-west-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n</li>\n<li>If you refresh your browser you should now see <code>us-west-2</code></li>\n</ul>\n","ogImage":{"url":"/assets/covers/terraform.jpg"},"coverImage":"/assets/covers/terraform.jpg"}},"__N_SSG":true}