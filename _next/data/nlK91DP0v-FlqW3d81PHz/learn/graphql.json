{"pageProps":{"post":{"title":"graphql","slug":"graphql","content":"<h1>What is GraphQL</h1>\n<h2>GraphQL data types</h2>\n<ul>\n<li>GraphQL comes with a set of default scalar types out of the box:\n<ul>\n<li><code>Int</code>: A signed 32‐bit integer.</li>\n<li><code>Float</code>: A signed double-precision floating-point value.</li>\n<li><code>String</code>: A UTF‐8 character sequence.</li>\n<li><code>Boolean</code>: true or false.</li>\n<li><code>ID</code>: The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable.</li>\n</ul>\n</li>\n</ul>\n<h1>Hello World for GraphQL client/server</h1>\n<h2>Setup JS server code</h2>\n<ul>\n<li>Initialize an app\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i --save-dev ts-node ts-node-dev typescript\n</code></pre></div>\n</li>\n<li>You clean this <code>tsconfig.json</code> file to something like this\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rootDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Create a ts file\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">mkdir</span> src\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"console.log('Hello typescript !')\"</span> <span class=\"token operator\">></span> src/index.ts\n</code></pre></div>\n</li>\n<li>Update your <code>package.json</code> file\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.d.ts\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node dist/index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ts-node-dev --respawn -- src/index.ts\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>GraphQL</h2>\n<ol>\n<li>Type Def</li>\n</ol>\n<ul>\n<li>Types: data types</li>\n<li>Queries: read data</li>\n<li>Mutations: update data</li>\n</ul>\n<ol start=\"2\">\n<li>Resolver</li>\n</ol>\n<ul>\n<li>Resolvers are the functions that</li>\n</ul>\n<h2>Express + apollo-server-express</h2>\n<ul>\n<li>\n<p><code>apollo-server-express</code> is a middleware to your express application</p>\n</li>\n<li>\n<p>Start developing</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">yarn</span> run dev\n$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> apollo-server-express express graphql\n</code></pre></div>\n</li>\n<li>\n<p>Update <code>src/index.ts</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> express<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Request<span class=\"token punctuation\">,</span> Response <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"express\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApolloServer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"apollo-server-express\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> typeDefs <span class=\"token keyword\">from</span> <span class=\"token string\">\"./schemas/type-defs\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> resolvers <span class=\"token keyword\">from</span> <span class=\"token string\">\"./schemas/resolvers\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// You can also do all REST API stuff with express!</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> Request<span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> Response<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> hello<span class=\"token operator\">:</span> <span class=\"token string\">\"rest example too!!\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> graphqlServer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> typeDefs<span class=\"token punctuation\">,</span> resolvers <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngraphqlServer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  graphqlServer<span class=\"token punctuation\">.</span><span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> app <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Now browse to http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>graphqlServer<span class=\"token punctuation\">.</span>graphqlPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Make some mock data with <a href=\"https://www.mockaroo.com/\">mockaroo</a> into <code>src/data/users.ts</code>. You could also make an example querying a database but will keep this example simple for now</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  gender<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  married<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> users<span class=\"token operator\">:</span> User<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">\"00001\"</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Max Powers\"</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> <span class=\"token string\">\"max@compuglobalhypermeganet.com\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n    gender<span class=\"token operator\">:</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span>\n    married<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create <code>src/schemas/type-defs.ts</code></p>\n<ul>\n<li>Here you will define your data types, queries, &#x26; mutations</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-server-express'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token graphql language-graphql\">\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">age</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Int</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">married</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Queries</span>\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">getAllUsers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">User</span><span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Mutations</span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create <code>src/schemas/resolvers.ts</code></p>\n<ul>\n<li>Resolvers are the contract of what the Queries/Mutations in the type-def file</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>users<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../data/users\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getAllUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> users\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n  <span class=\"token comment\">// Mutations:{}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Run the server and go to http://localhost:3000/graphql</p>\n<div class=\"remark-highlight\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span>  <span class=\"token punctuation\">{</span>\n  <span class=\"token object\">getAllUsers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">age</span>\n    <span class=\"token property\">gender</span>\n    <span class=\"token property\">married</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Update <code>src/schemas/type-defs.ts</code> to add the mutation</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-server-express'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token graphql language-graphql\">\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">age</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Int</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token attr-name\">married</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Queries</span>\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">getAllUsers</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">User</span><span class=\"token operator\">!</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\"># Mutations</span>\n  <span class=\"token keyword\">type</span> <span class=\"token class-name\">Mutation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">createUser</span><span class=\"token punctuation\">(</span> \n      <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span>\n      <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n      <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n      <span class=\"token attr-name\">age</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Int</span><span class=\"token operator\">!</span>\n      <span class=\"token attr-name\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n      <span class=\"token attr-name\">married</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">User</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">}</span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Update <code>src/schemas/resolvers.ts</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>users<span class=\"token punctuation\">,</span> User<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../data/users\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  Query<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getAllUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> users\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n  Mutation<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>parent<span class=\"token operator\">:</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">:</span>User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> newUser <span class=\"token operator\">=</span> args\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newUser<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> newUser\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Now call a mutation to the graphql server</p>\n<div class=\"remark-highlight\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">mutation</span>  <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query property-mutation\">createUser</span><span class=\"token punctuation\">(</span>\n    <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"6\"</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Heeel Wolrd\"</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hell@off.com\"</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attr-name\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attr-name\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"male\"</span><span class=\"token punctuation\">,</span> \n    <span class=\"token attr-name\">married</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">gender</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Client</h1>\n<ul>\n<li>\n<p>Setup the clientside application. <strong>Note:</strong> <em>make sure you run the serverside code so the application can hit it!</em></p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init vite\n$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @apollo/client graphql react-hook-form\n$ <span class=\"token function\">mkdir</span> src/graphql\n$ <span class=\"token function\">touch</span> src/graphql/queries.ts src/graphql/mutations.ts\n$ <span class=\"token function\">mkdir</span> src/components\n$ <span class=\"token function\">touch</span> src/components/UsersList.tsx src/components/Form.tsx \n</code></pre></div>\n</li>\n<li>\n<p>Add to <code>src/graphql/queries.ts</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@apollo/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">LOAD_USERS</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token graphql language-graphql\">\n  <span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">getAllUsers</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">id</span>\n      <span class=\"token property\">name</span>\n      <span class=\"token property\">email</span>\n      <span class=\"token property\">age</span>\n      <span class=\"token property\">gender</span>\n      <span class=\"token property\">married</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Add to <code>src/graphql/mutations.ts</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@apollo/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">CREATE_USER_MUTATION</span> <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token graphql language-graphql\">\n  <span class=\"token keyword\">mutation</span> <span class=\"token definition-mutation function\">createUser</span><span class=\"token punctuation\">(</span>\n    <span class=\"token variable variable-input\">$id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span> \n    <span class=\"token variable variable-input\">$name</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token variable variable-input\">$email</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token variable variable-input\">$age</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Int</span><span class=\"token operator\">!</span>\n    <span class=\"token variable variable-input\">$gender</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n    <span class=\"token variable variable-input\">$married</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property-query property-mutation\">createUser</span><span class=\"token punctuation\">(</span>\n      <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$id</span>\n      <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$name</span>\n      <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$email</span>\n      <span class=\"token attr-name\">age</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$age</span>\n      <span class=\"token attr-name\">gender</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$gender</span>\n      <span class=\"token attr-name\">married</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$married</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">id</span>\n      <span class=\"token property\">name</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a simple component to fetch data from GraphQL, <code>src/components/UsersList.tsx</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useQuery <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@apollo/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../types/users\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">LOAD_USERS</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../graphql/queries\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./UsersList.module.css'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">UsersList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useQuery</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOAD_USERS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">,</span> setUsers<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token function\">setUsers</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>getAllUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span>error loading users<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loading<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span><span class=\"token operator\">...</span>loading<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>wrapper<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span>h1<span class=\"token operator\">></span>Users<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&#x3C;</span>p key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a simple form element to create a new user in GraphQL with a mutation, <code>src/components/Form.tsx</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useForm <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-hook-form'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">CREATE_USER_MUTATION</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../graphql/mutations\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useMutation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@apollo/client\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../types/users'</span>\n<span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./Form.module.css'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>createUser<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> loading<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useMutation</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CREATE_USER_MUTATION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    register<span class=\"token punctuation\">,</span>\n    handleSubmit<span class=\"token punctuation\">,</span>\n    formState<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> errors <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    reset\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useForm</span><span class=\"token generic class-name\"><span class=\"token operator\">&#x3C;</span>User<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>formData<span class=\"token operator\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Form Errors</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[form errors]'</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Type cast</span>\n    formData<span class=\"token punctuation\">.</span>married <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>formData<span class=\"token punctuation\">.</span>married <span class=\"token comment\">// make into boolean</span>\n    formData<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>formData<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// make into number</span>\n    \n    <span class=\"token comment\">// Post to the GraphQL server</span>\n    <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>variables<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>formData<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// GraphQL Errors</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Reset the form</span>\n    <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&#x3C;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>wrapper<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">handleSubmit</span><span class=\"token punctuation\">(</span>onSubmit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>input placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"string\"</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>errors<span class=\"token punctuation\">.</span>id <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>p<span class=\"token operator\">></span>id <span class=\"token keyword\">is</span> required<span class=\"token punctuation\">.</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>input placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>errors<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>p<span class=\"token operator\">></span>name <span class=\"token keyword\">is</span> required<span class=\"token punctuation\">.</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>input placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"email\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>errors<span class=\"token punctuation\">.</span>email <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>p<span class=\"token operator\">></span>email <span class=\"token keyword\">is</span> required<span class=\"token punctuation\">.</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>errors<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>p<span class=\"token operator\">></span>age <span class=\"token keyword\">is</span> required<span class=\"token punctuation\">.</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span>select <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">></span><span class=\"token operator\">--</span>Gender<span class=\"token operator\">--</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"male\"</span><span class=\"token operator\">></span>Male<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"female\"</span><span class=\"token operator\">></span>Female<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>errors<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>p<span class=\"token operator\">></span>gender <span class=\"token keyword\">is</span> required<span class=\"token punctuation\">.</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token operator\">&#x3C;</span>select <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'married'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">></span><span class=\"token operator\">--</span>Married<span class=\"token operator\">-</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span>True<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span><span class=\"token operator\">></span>False<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>errors<span class=\"token punctuation\">.</span>married <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>p<span class=\"token operator\">></span>married <span class=\"token keyword\">is</span> required<span class=\"token punctuation\">.</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token operator\">&#x3C;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">{</span>loading <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span><span class=\"token operator\">...</span>loading<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Now wire up GraphQL for you application, update the <code>src/App.tsx</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  ApolloClient<span class=\"token punctuation\">,</span>\n  InMemoryCache<span class=\"token punctuation\">,</span>\n  ApolloProvider<span class=\"token punctuation\">,</span>\n  HttpLink<span class=\"token punctuation\">,</span>\n  from<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@apollo/client\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onError <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@apollo/client/link/error\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> UsersList <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/UsersList\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Form <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/Form\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./App.css'</span>\n\n<span class=\"token keyword\">const</span> errorLink <span class=\"token operator\">=</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> graphqlErrors<span class=\"token punctuation\">,</span> networkError <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>graphqlErrors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    graphqlErrors<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">,</span> path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Graphql error </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> <span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  errorLink<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> uri<span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:3000/graphql\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  cache<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InMemoryCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  link<span class=\"token operator\">:</span> link<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span>ApolloProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span>UsersList <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span>Form <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>ApolloProvider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>AWS Lamdba</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g serverless\n\n$ <span class=\"token function\">yarn</span> init -y\n$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D ts-node ts-node-dev typescript  \n$ <span class=\"token function\">touch</span> tsconfig.json  \n$ <span class=\"token function\">mkdir</span> src  \n$ <span class=\"token function\">touch</span> src/index.ts \n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"console.log('Hello typescript, graphql, apollo, &#x26; Lambda!')\"</span> <span class=\"token operator\">></span> src/index.ts\n$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> apollo-server-lambda graphql\n</code></pre></div>\n<ul>\n<li>Set up the schema's type definitions and resolvers, and pass them to the ApolloServer constructor like normal.</li>\n</ul>\n","ogImage":{"url":"/assets/covers/graphql.jpg"},"coverImage":"/assets/covers/graphql.jpg"}},"__N_SSG":true}