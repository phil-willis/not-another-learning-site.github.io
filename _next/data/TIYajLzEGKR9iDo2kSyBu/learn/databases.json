{"pageProps":{"post":{"title":"Databases","slug":"databases","content":"<h1>Databases</h1>\n<ul>\n<li>[x] MySQL + baked in spatial functions</li>\n<li>[x] PostgreSQL + PostGIS</li>\n<li>[x] Firebase</li>\n<li>[ ] DynamoDB</li>\n<li>[ ] SQLite + SpatiaLite</li>\n<li>[ ] MongoDB</li>\n<li>[ ] CouchDB</li>\n</ul>\n<h1>MySQL</h1>\n<ul>\n<li>Basic Docker stuff\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># show all running containers</span>\n$ <span class=\"token function\">docker</span> <span class=\"token function\">ps</span>\n\n<span class=\"token comment\"># Show all stoped containers</span>\n$ <span class=\"token function\">docker</span> <span class=\"token function\">ps</span> -a\n\n<span class=\"token comment\"># Pull the latest image</span>\n$ <span class=\"token function\">docker</span> pull mysql/mysql-server:latest\n\n<span class=\"token comment\"># Create &#x26; run a container</span>\n$ <span class=\"token function\">docker</span> run --name some-mysql -p <span class=\"token number\">3306</span>:3306  -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">123456789</span> -d mysql\n\n<span class=\"token comment\"># stop/start</span>\n$ <span class=\"token function\">docker</span> stop some-mysql\n$ <span class=\"token function\">docker</span> start some-mysql\n\n\n<span class=\"token comment\"># Docker cleanups</span>\n$ <span class=\"token function\">docker</span> system prune\n$ <span class=\"token function\">docker</span> image prune\n\n<span class=\"token comment\"># Create a database dump</span>\n$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> some-mysql <span class=\"token function\">sh</span> -c <span class=\"token string\">'exec mysqldump --all-databases -uroot -p\"$MYSQL_ROOT_PASSWORD\"'</span> <span class=\"token operator\">></span> /some/path/on/your/host/all-databases.sql\n\n<span class=\"token comment\"># Restoring data from a dump file</span>\n$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -i some-mysql <span class=\"token function\">sh</span> -c <span class=\"token string\">'exec mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\"'</span> <span class=\"token operator\">&#x3C;</span> /some/path/on/your/host/all-databases.sql\n</code></pre></div>\n</li>\n</ul>\n<h2>Connecting to your Database (MySQL v8)</h2>\n<ul>\n<li>\n<p>First spin up a docker container</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Pull the latest image</span>\n$ <span class=\"token function\">docker</span> pull mysql/mysql-server:latest\n\n<span class=\"token comment\"># Create &#x26; run a container</span>\n$ <span class=\"token function\">docker</span> run --name some-mysql -p <span class=\"token number\">3306</span>:3306 -p <span class=\"token number\">33060</span>:33060  -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">123456789</span> -d mysql\n$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -it some-mysql mysql -uroot -p\nmysql<span class=\"token operator\">></span> CREATE DATABASE letsgetspatial<span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Connecting to the <code>MySQL v8</code> Database with <a href=\"https://marketplace.visualstudio.com/items?itemName=mtxr.sqltools\"><code>SQLTools</code> extension</a>. You will also have to download the Extensions drivers: MySQL</p>\n<ul>\n<li><em>NOTE</em> we had to make a database <code>letsgetspatial</code> manually above\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"mysqlOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"authProtocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"xprotocol\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"previewLimit\"</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">33060</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"driver\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MySQL\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MySQL_v8\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"letsgetspatial\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"123456789\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"connectionTimeout\"</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Click the <code>Test Connection</code> (it kinda appears like a white rectanglar button)</li>\n<li>Under the <code>Connection</code> section in the side panel click this <code>some-mysql</code> connection and it will open up a sql window where you can write queries</li>\n<li>Use <code>--</code> to write comments &#x26; <code>-- @block</code> to write blocks that you can execute only the block</li>\n</ul>\n</li>\n<li>\n<p>Backing up data</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Create a database dump</span>\n$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> some-mysql <span class=\"token function\">sh</span> -c <span class=\"token string\">'exec mysqldump --all-databases -uroot -p\"$MYSQL_ROOT_PASSWORD\"'</span> <span class=\"token operator\">></span> /some/path/on/your/host/all-databases.sql\n\n<span class=\"token comment\"># Restoring data from a dump file</span>\n$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -i some-mysql <span class=\"token function\">sh</span> -c <span class=\"token string\">'exec mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\"'</span> <span class=\"token operator\">&#x3C;</span> /some/path/on/your/host/all-databases.sql\n</code></pre></div>\n</li>\n</ul>\n<h2>Docker Compose way</h2>\n<ul>\n<li>Where gonna use <code>docker-compose</code> to make our lives easier\n<ul>\n<li>Create a <code>docker-compose.yml</code> files with:\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.3'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span>latest\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'letsgetspatial'</span>\n      <span class=\"token comment\"># So you don't have to use root, but you can if you like</span>\n      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'user'</span>\n      <span class=\"token comment\"># You can use whatever password you like</span>\n      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'password'</span>\n      <span class=\"token comment\"># Password for root access</span>\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'password'</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># &#x3C;Port exposed> : &#x3C; MySQL Port running inside container></span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'3306:3306'</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'33060:33060'</span>\n    <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># Opens port 3306 on the container</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'3306'</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">'33060'</span>\n      <span class=\"token comment\"># Where our data will be persisted</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> my<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">:</span>/var/lib/mysql\n      \n  <span class=\"token comment\"># http://localhost:8080/ to log into your DB</span>\n  <span class=\"token key atrule\">adminer</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> adminer\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>\n      \n<span class=\"token comment\"># Names our volume</span>\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  my<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">:</span>\n</code></pre></div>\n</li>\n<li>Now we can run one command to get it all running:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># build/run contains</span>\n$ <span class=\"token function\">docker-compose</span> up\n\n<span class=\"token comment\"># stop all containers (for ctl+c twice)</span>\n$ <span class=\"token function\">docker-compose</span> down\n\n<span class=\"token comment\"># Clean up everything</span>\n$ <span class=\"token function\">docker-compose</span> down -v --rmi all --remove-orphans\n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2>MySQL SQL Statements</h2>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Users<span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  email  <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\n  bio <span class=\"token keyword\">TEXT</span><span class=\"token punctuation\">,</span>\n  country <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Users<span class=\"token punctuation\">(</span>\n  email<span class=\"token punctuation\">,</span>\n  bio<span class=\"token punctuation\">,</span>\n  country\n<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'hello@world.com'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'I love strangers'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'US'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Users<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Bookings<span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  guest_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  room_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  start_date <span class=\"token keyword\">datetime</span><span class=\"token punctuation\">,</span>\n  end_date <span class=\"token keyword\">datetime</span><span class=\"token punctuation\">,</span>\n  price <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n  total <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n  created_at <span class=\"token keyword\">datetime</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Rooms<span class=\"token punctuation\">(</span>\n  owner_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  price <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  hot_tub <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">,</span>\n  home_type <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n  room_type <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n  total_occupancy <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  total_bedrooms <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  total_bathrooms <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n  summary <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  created_at <span class=\"token keyword\">datetime</span><span class=\"token punctuation\">,</span>\n  updated_at <span class=\"token keyword\">datetime</span><span class=\"token punctuation\">,</span>\n  latitude <span class=\"token keyword\">FLOAT</span><span class=\"token punctuation\">,</span>\n  longitude <span class=\"token keyword\">FLOAT</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2>MySQL with Spatial Data</h2>\n<ul>\n<li>\n<p><strong>MySQL <code>POINT(lng,lat)</code>, just like PostGIS maintains (lng,lat), however... the <code>ST_GeomFromText</code> like <code>ST_GeomFromText('POINT(45.5051 -122.6750)', 4326)</code> DOES <code>LAT/LNG</code>??</strong></p>\n</li>\n<li>\n<p>There is HUGE difference from MySQL v5.7 to v8.0</p>\n</li>\n<li>\n<p>Prior to v8 spatial data there wasn't multiple spatial reference systems and geographic computations all computations were Catesian</p>\n</li>\n<li>\n<p>So what is the least you need to know about??</p>\n<ul>\n<li>GIS libraries use <a href=\"https://epsg.io/\">EPSG</a> (EPSG actually stands for <code>European Petroleum Survey Group</code>) codes as Spatial Reference System Identifiers (SRIDs)</li>\n<li>All you need to know when working with spatial data on the web is most maps use the Spatial Reference System of <code>4326</code> which is <code>WGS 84 (Google Earth is in a Geographic coordinate system)</code></li>\n<li>Geospatial data is should be stored in internal geometry format either <code>Well-Known Text (WKT)</code> or <code>Well-Known Binary (WKB)</code> format.</li>\n</ul>\n</li>\n<li>\n<p><code>Point(X,Y)</code> is a constructor for numbers with precision and does not require converting first to text making it faster.</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Slower</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SOME_DB <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> coordinates<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Portland\"</span><span class=\"token punctuation\">,</span> ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POINT(45.5051 -122.6750)'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- Faster</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SOME_DB <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> coordinates<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Portland\"</span><span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">122.6750</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.5051</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Let's define some points instead of 2 columns lat/long</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>places<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unsigned</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token identifier\"><span class=\"token punctuation\">`</span>coordinates<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">POINT</span> SRID <span class=\"token number\">4326</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Let's create an idex</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> pt_idx <span class=\"token keyword\">ON</span> places<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Now let's add some points</p>\n<ul>\n<li><strong>NOTE</strong> the <code>POINT(LNG, LAT)</code> format</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>places<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>coordinates<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Portland\"</span><span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">122.6795</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.52054</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>places<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>coordinates<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Vancouver\"</span><span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">123.1207</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49.2827</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>places<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>coordinates<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Seattle\"</span><span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">122.33551</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47.604311</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>places<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>coordinates<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"San Francisco\"</span><span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">122.416534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37.771800273</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>places<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>coordinates<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Ottawa\"</span><span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">75.697174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.42062</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Select Data</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>  id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> ST_AsText<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> places<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span>  id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> ST_AsGeoJSON<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> places<span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Calculate distances</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Distance from the montreal</span>\n<span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span>\nST_Distance_Sphere<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">73.6049652</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.503459</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> places<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Distance less that 500Km (500000m) from the montreal </span>\n<span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> places\n<span class=\"token keyword\">WHERE</span> ST_Distance_Sphere<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">,</span> ST_SRID<span class=\"token punctuation\">(</span><span class=\"token keyword\">POINT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">73.6049652</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.503459</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">500000</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Selects all points in a polygon</p>\n</li>\n<li>\n<p>If you look closer, you’ll notice that the last point is the same as the first one and we have 5 points. This is because we need to “close” the polygon.</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> <span class=\"token variable\">@polygon</span> <span class=\"token operator\">=</span> ST_SRID<span class=\"token punctuation\">(</span>\n  ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POLYGON(( -125.903320 44.668, -119.22 44.668, -119.22 50.2612, -125.903320 50.2612, -125.903320 44.668))'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4326</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span>  <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> ST_AsText<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">FROM</span> places <span class=\"token keyword\">WHERE</span> ST_CONTAINS<span class=\"token punctuation\">(</span><span class=\"token variable\">@polygon</span><span class=\"token punctuation\">,</span> coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Get the result as GeoJson</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> <span class=\"token variable\">@polygon</span> <span class=\"token operator\">=</span> ST_SRID<span class=\"token punctuation\">(</span>\n  ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POLYGON(( </span>\n<span class=\"token string\">    -129.24316 43.16512263,</span>\n<span class=\"token string\">    -116.455078125 43.16512263,</span>\n<span class=\"token string\">    -116.455078125 52.24125614,</span>\n<span class=\"token string\">    -129.24316 52.24125614,</span>\n<span class=\"token string\">    -129.24316 43.165</span>\n<span class=\"token string\">  ))'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4326</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> json_merge<span class=\"token punctuation\">(</span>\n  json_object<span class=\"token punctuation\">(</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"FeatureCollection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  json_object<span class=\"token punctuation\">(</span> <span class=\"token string\">\"features\"</span><span class=\"token punctuation\">,</span> \n    json_arrayagg<span class=\"token punctuation\">(</span>\n      json_merge<span class=\"token punctuation\">(</span>\n        json_object<span class=\"token punctuation\">(</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Feature\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        json_object<span class=\"token punctuation\">(</span> <span class=\"token string\">\"properties\"</span><span class=\"token punctuation\">,</span>  \n          json_merge<span class=\"token punctuation\">(</span>\n            json_object<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            json_object<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        json_object<span class=\"token punctuation\">(</span><span class=\"token string\">'geometry'</span><span class=\"token punctuation\">,</span> ST_AsGeoJSON<span class=\"token punctuation\">(</span>coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> places <span class=\"token keyword\">WHERE</span> ST_CONTAINS<span class=\"token punctuation\">(</span><span class=\"token variable\">@polygon</span><span class=\"token punctuation\">,</span> coordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Postgres &#x26; PostGIS</h1>\n<ul>\n<li>The <code>postgis/postgis</code> image will have the following extensions installed:\n<ul>\n<li>postgis</li>\n<li>postgis_topology</li>\n<li>fuzzystrmatch</li>\n<li>postgis_tiger_geocoder</li>\n</ul>\n</li>\n</ul>\n<h2>Docker stuff</h2>\n<ul>\n<li>Create a <code>docker-compose.yml</code> file\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.4\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">pgAdmin</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> dpage/pgadmin4\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8000:80\"</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">PGADMIN_DEFAULT_EMAIL</span><span class=\"token punctuation\">:</span> 1234@admin.com\n      <span class=\"token key atrule\">PGADMIN_DEFAULT_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> pgadmin<span class=\"token punctuation\">:</span>/var/lib/pgadmin\n  <span class=\"token key atrule\">postgis</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> postgis/postgis\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"postgis_container\"</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"5432:5432\"</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">POSTGRES_USER</span><span class=\"token punctuation\">:</span> me\n      <span class=\"token key atrule\">POSTGRES_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span>\n      <span class=\"token key atrule\">POSTGRES_DB</span><span class=\"token punctuation\">:</span> letsgetspatial\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> pgvol<span class=\"token punctuation\">:</span>/var/lib/postgresql/data\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">pgvol</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">pgadmin</span><span class=\"token punctuation\">:</span> \n</code></pre></div>\n</li>\n<li><code>docker-compose</code> commands:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Stop these services</span>\n$ <span class=\"token function\">docker-compose</span> stop\n\n<span class=\"token comment\"># Start these services</span>\n$ <span class=\"token function\">docker-compose</span> start\n\n<span class=\"token comment\"># Delete these services</span>\n$ <span class=\"token function\">docker-compose</span> down\n\n<span class=\"token comment\"># Delete all docker volumes</span>\n$ <span class=\"token function\">docker</span> volume prune\n</code></pre></div>\n</li>\n</ul>\n<h2>There are 2 ways to connect to the postgresdatabase server</h2>\n<ol>\n<li>PSQL</li>\n</ol>\n<ul>\n<li>The above <code>docker-compose</code> command spins up a container that has postgres/postgis/psql installed in the container\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Connect into the container</span>\n$ <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -it postgis_container <span class=\"token function\">bash</span>\n\n<span class=\"token comment\"># Connect into postgres inside your container</span>\n$ psql -d letsgetspatial -U me\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"2\">\n<li>PG Admin4</li>\n</ol>\n<ul>\n<li>The <code>docker-compose</code> command also spins up a container for <code>pgadmin4</code></li>\n<li>To go to <code>pgadmin4</code> go to <code>http://localhost:8000/</code></li>\n<li>User name that has been defined in the <code>docker-compose</code> is: <code>1234@admin.com</code>, and the password is <code>1234</code></li>\n<li>Here you want to <code>Add new server</code> Take the below JSON data to fill in the GUI\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  generalTab<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"letsgetspatial-server\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  connectionTab<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"postgis\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5432\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"me\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"maintenaceDatabase\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"letsgetspatial\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>You talbles will live in <code>letsgetspatial-server</code> > <code>Databases</code> > <code>letsgetspatial</code> > <code>Schemas</code> > <code>public</code> > <code>Tables</code></li>\n</ul>\n<h2>Postgres commands</h2>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># List databases</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span>#  <span class=\"token punctuation\">\\</span>l\n\n<span class=\"token comment\"># Use or switch Databases</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span># <span class=\"token punctuation\">\\</span>c sales\n\n<span class=\"token comment\"># List tables</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token punctuation\">\\</span># <span class=\"token punctuation\">\\</span>dt\n</code></pre></div>\n<h2>Postgres/PostGIS Spatial Table</h2>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> EXTENSION postgis<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> PostGIS_version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Create a table then add the spatial column</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> places <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span> GENERATED <span class=\"token keyword\">BY</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">IDENTITY</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n  name <span class=\"token keyword\">text</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> AddGeometryColumn<span class=\"token punctuation\">(</span><span class=\"token string\">'places'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'geom'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4326'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'POINT'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Add a spatial index (to drop the index ...`DROP INDEX places_geom_idx;`)</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">INDEX</span> places_geom_idx <span class=\"token keyword\">ON</span> places <span class=\"token keyword\">USING</span> GIST <span class=\"token punctuation\">(</span>geom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- Insert some data</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> places<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Portland'</span><span class=\"token punctuation\">,</span>  ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POINT(-122.6795 45.52054)'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4326</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> places<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vancouver'</span><span class=\"token punctuation\">,</span> ST_SetSRID<span class=\"token punctuation\">(</span>ST_MakePoint<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">123.1207</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49.2827</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4326</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> places<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Seattle'</span><span class=\"token punctuation\">,</span> ST_SetSRID<span class=\"token punctuation\">(</span>ST_MakePoint<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">122.33551</span><span class=\"token punctuation\">,</span> <span class=\"token number\">47.604311</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> places<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">,</span> ST_SetSRID<span class=\"token punctuation\">(</span>ST_MakePoint<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">122.416534</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37.771800273</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> places<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Ottawa'</span><span class=\"token punctuation\">,</span> ST_SetSRID<span class=\"token punctuation\">(</span>ST_MakePoint<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">75.697174</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.42062</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- Get data </span>\n<span class=\"token keyword\">SELECT</span>  id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> ST_AsText<span class=\"token punctuation\">(</span>geom<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> places<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span>  id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> ST_AsGeoJSON<span class=\"token punctuation\">(</span>geom<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> places<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- Distances</span>\n<span class=\"token keyword\">SELECT</span> name<span class=\"token punctuation\">,</span>\nST_DistanceSpheroid<span class=\"token punctuation\">(</span>\n  geom<span class=\"token punctuation\">,</span> \n  ST_SetSRID<span class=\"token punctuation\">(</span>ST_MakePoint<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">73.6049652</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.503459</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'SPHEROID[\"WGS84\",6378137,298.257223563]'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> places<span class=\"token punctuation\">;</span>   \n\n<span class=\"token keyword\">SELECT</span> name <span class=\"token keyword\">FROM</span> places\n<span class=\"token keyword\">WHERE</span> ST_DistanceSpheroid<span class=\"token punctuation\">(</span>\n  geom<span class=\"token punctuation\">,</span> \n  ST_SetSRID<span class=\"token punctuation\">(</span>ST_MakePoint<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">73.6049652</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45.503459</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- montreal</span>\n  <span class=\"token string\">'SPHEROID[\"WGS84\",6378137,298.257223563]'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">500000</span><span class=\"token punctuation\">;</span>   \n\n\n<span class=\"token comment\">-- Tansform projections</span>\nST_Transform<span class=\"token punctuation\">(</span>ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POINT(120.08 30.96)'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4326</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2163</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">-- Points in polygon</span>\n<span class=\"token keyword\">SELECT</span>  <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> ST_AsText<span class=\"token punctuation\">(</span>geom<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">FROM</span> places <span class=\"token keyword\">WHERE</span> ST_CONTAINS<span class=\"token punctuation\">(</span>\n  ST_SetSRID<span class=\"token punctuation\">(</span>\n    ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POLYGON(( -125.903320 44.668, -119.22 44.668, -119.22 50.2612, -125.903320 50.2612, -125.903320 44.668))'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">4326</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  geom\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h1>Firebase's Firestore</h1>\n<ul>\n<li>\n<p>Firebase has 2 flavor of NoSQL Database <code>Realtime Database</code> &#x26; <code>Firestore Database</code></p>\n</li>\n<li>\n<p>The <code>Realtime Database</code> as the original database before Google aquired Firebase and the <code>Firestore Database</code> is if the Realtime database &#x26; Google had a baby.</p>\n</li>\n<li>\n<p>In most cases it's probably best to user <code>Firestore</code>, plus <code>Firestore</code> allow geo points</p>\n</li>\n<li>\n<p>A great feature of Firebase is that you can use the <code>Emulator</code> to test out all the Firebase services locally</p>\n</li>\n<li>\n<p>Resources</p>\n<ul>\n<li><a href=\"https://firebase.google.com/docs/emulator-suite\">Firebase Emulator</a></li>\n<li><a href=\"https://firebase.google.com/docs/firestore/query-data/get-data\">Add/Get data from a DB</a></li>\n<li><a href=\"https://firebase.google.com/docs/reference/js/v8\">Firebase Reference Docs</a></li>\n</ul>\n</li>\n<li>\n<p>Initialize the Firebase application</p>\n<ol>\n<li>Go to the <a href=\"https://console.firebase.google.com/\">Firebase Console</a></li>\n</ol>\n<ul>\n<li>Create or select a project</li>\n<li>Go to the <code>Firestore</code> tab in the sidebase and click <code>Create Database</code></li>\n</ul>\n<ol start=\"2\">\n<li>Initialize your application in your terminal</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># just need to install the `firebase-tools` globally once</span>\n$ <span class=\"token function\">npm</span> i -g firebase-tools\n\n$ firebase init\n<span class=\"token comment\"># Select firestore &#x26; the emulator (you can alway add/remove later)</span>\n<span class=\"token comment\"># You should have a `firebase.json` &#x26; `.firebaserc` file</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Install some stuff</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i firebase-admin\n$ <span class=\"token function\">npm</span> i nodemon -D\n</code></pre></div>\n<ol start=\"4\">\n<li>Update your <code>package.json</code></li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon src\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"local:firebase\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"firebase emulators:start --import=firebase/backup --export-on-exit=firebase/backup\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>So Firebase uses configs and a <code>firebase.json</code> &#x26; <code>.firebaserc</code> file to connect your code to the project. The <code>firebase.json</code> file is absolutly fine to add you your source control because all the controls are done in the <code>firestore.rules</code> file</p>\n</li>\n<li>\n<p>Example of a <code>firebase.json</code>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"firestore\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"firebase/firestore.rules\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"indexes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"firebase/firestore.indexes.json\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"emulators\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"auth\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">9099</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"firestore\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">8088</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ui\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Example of a <code>.firebaserc</code>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"projects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"default\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&#x3C;YOUR_PROJECT_NAME>\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>When you use the <code>firebase emulators:start</code> when you close the process the data do not persist in order to persist the data you have to tell it to import/export the data add <code>--import=firebase/backup --export-on-exit=firebase/backup</code></p>\n</li>\n<li>\n<p>Make sure you have a <code>firebase/firestore.rules</code>, these current rules anyone to read/write to the database to don't publish this</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write;\n    }\n  }\n}\n</code></pre></div>\n</li>\n<li>\n<p>Almost time to add data... Go to your Firebase project in the Console and click the gear icon in the navbar, <code>Project settings</code> > <code>Service account</code> > <code>Generate new private key</code> copy this key to your source code <strong>MAKE SURE YOU GITIGNORE THIS FILE</strong>, this file provides admin access to your application</p>\n</li>\n</ul>\n<h2>Admin verses Firestore/app</h2>\n<ul>\n<li>If you are using firebase on the client use the <code>firebase/app</code> package, if you are using Fiebase on the server where you can control your Firebase credentials use <code>firebase-admin</code></li>\n<li>Exmaple of initializing a Firebase connection on the client:\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">firebase</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/app'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'firebase/firestore'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">config</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'../config'</span>\n\n<span class=\"token comment\">// Only initialize the firebase app once</span>\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>firebase<span class=\"token operator\">?.</span>apps<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span> firebase<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">firebase</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n</li>\n<li>Exmaple of initializing a Firebase connection on the server:\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> admin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"firebase-admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> serviceAccount <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./serviceAccountKey.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nadmin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">credential</span><span class=\"token operator\">:</span> admin<span class=\"token punctuation\">.</span><span class=\"token property-access\">credential</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cert</span><span class=\"token punctuation\">(</span>serviceAccount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> admin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>CRUD the Firestore Database</h2>\n<ul>\n<li><a href=\"https://firebase.google.com/docs/firestore/query-data/get-data\">Docs</a></li>\n</ul>\n<h3>Add</h3>\n<ul>\n<li>When adding a document to a collection you can provide the id or you can let firebase create it for you</li>\n<li>Here's an example of you create the document id:\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Defining the document id explicityly</span>\n<span class=\"token keyword\">const</span> youRef <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"you-define-ids\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nyouRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some-document-id-001\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nyouRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some-document-id-002\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Let firebase define the document id</span>\n<span class=\"token keyword\">const</span> fbRed <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"firebase-define-ids\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfbRed<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capital</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfbRed<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capital</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfbRed<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capital</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfbRed<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capital</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfbRed<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capital</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfbRed<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capital</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>Read</h3>\n<ul>\n<li>Get a specific document base of the document ID\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> docRef <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"you-define-ids\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some-document-id-001\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocRef\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">doc</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    doc<span class=\"token punctuation\">.</span><span class=\"token property-access\">exists</span> <span class=\"token operator\">?</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document data:\"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No such document!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error getting document:\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>Query where a value equals something\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"firebase-define-ids\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"capital\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"==\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">querySnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    querySnapshot<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">doc</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// doc.data() is never undefined for query doc snapshots</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" => \"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error getting documents: \"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>\n</code></pre></div>\n</li>\n<li>Other queries like <code>orderBy()</code>, <code>.orderBy(&#x3C;key>, \"desc\")</code>, <code>limit()</code></li>\n<li>If you want to query all the times a user is tagged you an array value in the document\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"users\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Query the following users\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> usersRef <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">following</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">following</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">following</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">following</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">following</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusersRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">following</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user3\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nusersRef\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"following\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"array-contains-any\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">querySnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    querySnapshot<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">doc</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" => \"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error getting documents: \"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Let's make it spatial!</h2>\n<ul>\n<li>You can do geospatial stuff with <code>firestore</code> because of geohashing</li>\n<li>A geohash is a convenient way of expressing a location (anywhere in the world) using a short alphanumeric string, with greater precision obtained with longer strings.</li>\n<li>A geohash actually identifies a rectangular cell: at each level, each extra character identifies one of 32 sub-cells.</li>\n<li><img src=\"/assets/blog/geo/geohash.jpg\" alt=\"geohash\"></li>\n<li><a href=\"https://www.movable-type.co.uk/scripts/geohash.html\">Read more on geohashes</a></li>\n<li>Vancouver, BC has coordinates of 49.2827° N, 123.1207° W and the geohash would be <a href=\"http://geohash.org/c2b2q7dhx\"><code>c2b2q7dhx</code></a></li>\n</ul>\n<h3>Using <code>geofirestore</code></h3>\n<ul>\n<li>\n<p><a href=\"https://geofirestore.com/\">geofirestore docs</a></p>\n</li>\n<li>\n<p>As of 09-2021 <code>geofirestore</code> only supports up to <code>firebase</code> v8</p>\n</li>\n<li>\n<p>When using <code>geofirestore</code> all you need to provide in the document is a <code>coordinates: new firebase.firestore.GeoPoint(&#x3C;lat>, &#x3C;lng>)</code> property. Geofirestore will take this GeoPoint and create a geohash from it</p>\n</li>\n<li>\n<p><strong>NOTE</strong> you can still query your collection with the regular Friebase querys however you now have the option to do some limited spatial queries</p>\n</li>\n<li>\n<p>Setup</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Firebase v8</span>\n<span class=\"token comment\">/*</span>\n<span class=\"token comment\">import firebase from 'firebase/app';</span>\n<span class=\"token comment\">import 'firebase/firestore';</span>\n<span class=\"token comment\">import * as geofirestore from 'geofirestore';</span>\n<span class=\"token comment\">*/</span>\n\n<span class=\"token comment\">// *NOTE: Firebase v9 ( Currently geofirebase library only works with the Firebase Compat library. Support for the Firebase Modular library is coming down the road.)</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">firebase</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/compat/app'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'firebase/compat/firestore'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> geofirestore</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'geofirestore'</span>\n\n<span class=\"token comment\">// Initialize the Firebase SDK</span>\nfirebase<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a Firestore reference</span>\n<span class=\"token keyword\">const</span> firestore <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a GeoFirestore reference</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">GeoFirestore</span> <span class=\"token operator\">=</span> geofirestore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span>firestore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a GeoCollection reference</span>\n<span class=\"token keyword\">const</span> geocollection <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">GeoFirestore</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'restaurants'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Add a point to the collection</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Add a document to the collection containing `coordinates` key</span>\n<span class=\"token keyword\">const</span> uuid <span class=\"token operator\">=</span> <span class=\"token function\">uuidv4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngeocollection<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">coordinates</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firestore<span class=\"token punctuation\">.</span>firestore<span class=\"token punctuation\">.</span>GeoPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">42.3547255</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">71.0549425</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// YOU NEED THIS LINE</span>\n  <span class=\"token literal-property property\">geojson</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Feature\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">geometry</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">coordinates</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">71.0549425</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42.3547255</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      uuid<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">uid</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user1_000\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// This allows you to filter by multiple users</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Starbucks\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">\"211 Congress St,Boston, MA 02210\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">rating</span><span class=\"token operator\">:</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">image</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://s3-media4.fl.yelpcdn.com/bphoto/AVDfFF1OaqiNDqeg-Z2xEQ/o.jpg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Query the collection</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">findNearest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">point<span class=\"token punctuation\">,</span> radiusInKm<span class=\"token punctuation\">,</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">100</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create a GeoQuery based on a location</span>\n  <span class=\"token keyword\">const</span> center <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firestore<span class=\"token punctuation\">.</span>firestore<span class=\"token punctuation\">.</span>GeoPoint</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span><span class=\"token property-access\">lat</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">.</span><span class=\"token property-access\">lng</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// perform the query</span>\n  <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> geocollection\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">near</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> center<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">radius</span><span class=\"token operator\">:</span> radiusInKm <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"geojson.properties.uid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"array-contains-any\"</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">limit</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> query<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Cleanup the data</span>\n  <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token property-access\">docs</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> geojson<span class=\"token punctuation\">,</span> g <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span>geojson<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span>geojson<span class=\"token punctuation\">.</span><span class=\"token property-access\">properties</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">geohash</span><span class=\"token operator\">:</span> g<span class=\"token punctuation\">.</span><span class=\"token property-access\">geohash</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[length]\"</span><span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> results<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">findNearest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">lat</span><span class=\"token operator\">:</span> <span class=\"token number\">42.3461</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lng</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">71.0974</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"user3_000\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user1_000\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Query nearest &#x26; property value</p>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> geocollection<span class=\"token operator\">:</span> GeoCollectionReference <span class=\"token operator\">=</span> geofirestore<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> centerCoords <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> lat<span class=\"token operator\">:</span> <span class=\"token number\">42.3461</span><span class=\"token punctuation\">,</span> lng<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">71.0974</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> geoQuery <span class=\"token operator\">=</span> geocollection<span class=\"token punctuation\">.</span><span class=\"token function\">near</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    center<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firebase</span><span class=\"token punctuation\">.</span>firestore<span class=\"token punctuation\">.</span><span class=\"token function\">GeoPoint</span><span class=\"token punctuation\">(</span>centerCoords<span class=\"token punctuation\">.</span>lat<span class=\"token punctuation\">,</span>centerCoords<span class=\"token punctuation\">.</span>lng<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    radius<span class=\"token operator\">:</span> <span class=\"token number\">10.5</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'=='</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'coffee'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h1>DynamoDB</h1>\n","ogImage":{"url":"/assets/covers/database.jpg"},"coverImage":"/assets/covers/database.jpg"}},"__N_SSG":true}