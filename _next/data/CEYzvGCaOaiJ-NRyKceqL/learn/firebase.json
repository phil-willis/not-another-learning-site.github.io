{"pageProps":{"post":{"title":"firebase","slug":"firebase","content":"<h1>Overview of firebase</h1>\n<ul>\n<li><a href=\"https://firebase.google.com/docs/build\">firebase docs</a>\n<ul>\n<li>Firebase allows you to:</li>\n<li>authenticate users</li>\n<li>Database</li>\n<li>Server-side code via Functions</li>\n<li>Security</li>\n<li>Analytics</li>\n<li>Scale</li>\n</ul>\n</li>\n<li>A huge thing is you pay $0 until you app builds a decent user base</li>\n<li>Opt in features DB, Storage, Serverless Functions,</li>\n<li><code>Backend as a Service</code></li>\n<li>Firebase is just an extension of Google Cloud Platform, at it's core Firebase is an SDK that makes it easy for your frontend app to back google cloud infrastructure</li>\n<li>The console sidebar is divided into sections: <em>Build</em>, <em>Release &#x26; Monitor</em>, <em>Analytics</em>, &#x26; <em>Engage</em></li>\n<li>Firebase is <code>opt-in</code></li>\n<li>Firebase also has extenstions</li>\n</ul>\n<h1>Get Started</h1>\n<ol>\n<li>Go to <a href=\"https://console.firebase.google.com/\">Firebase console</a> and log in with your gmail account</li>\n<li>Create a Project</li>\n<li>Install the node global packages</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g firebase-tools\n</code></pre></div>\n<ol start=\"4\">\n<li>You can initialize multiple firenase services or each seperatly (you can always add/remove very easily)</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ firebase login\n<span class=\"token comment\"># this will open up your browser &#x26; ask you to authenticate</span>\n$ firebase init\n<span class=\"token comment\"># ◉ Firestore: Configure security rules and indexes files for Firestore</span>\n<span class=\"token comment\"># ◉ Functions: Configure a Cloud Functions directory and its files</span>\n<span class=\"token comment\"># ◉ Hosting: Configure files for Firebase Hosting and (optionally) set up GitHub Action deploys</span>\n<span class=\"token comment\"># ◉ Hosting: Set up GitHub Action deploys</span>\n<span class=\"token comment\"># ◉ Storage: Configure a security rules file for Cloud Storage</span>\n<span class=\"token comment\"># ◉ Emulators: Set up local emulators for Firebase products</span>\n</code></pre></div>\n<ul>\n<li>Firebase files\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">├── .firebaserc\n├── firebase.json\n├── firebase/\n│   └── firestore.indexes.json\n│   └── firestore.rules\n│   └── storage.rules\n</code></pre></div>\n</li>\n</ul>\n<ol start=\"5\">\n<li>If you are using VSCode you might want to install the <a href=\"https://marketplace.visualstudio.com/items?itemName=jsayol.firebase-explorer\">Firebase Explorer extension</a></li>\n</ol>\n<h1>Web hosting</h1>\n<ul>\n<li>\n<p>Hosting is where you web application will ultimately be deployed, it's a storage bucket that's available on the internet and served over a CDN make your web app really fast around the world</p>\n</li>\n<li>\n<p>Pricing is based on the GB stored on your account + GB transfered out to your users (it's VERY generous)</p>\n</li>\n<li>\n<p>Setup web hosting:</p>\n<ol>\n<li>Enable hoisting for you web application in the firebase console</li>\n</ol>\n<ul>\n<li>Click the <code>Project Settings</code> gear icon in the side nav, under the <code>Your apps</code> click the <code>&#x3C;/></code> button to initiate a web application</li>\n<li>Register an App</li>\n<li>Check the <code>Also setup Firebase Hosting for this app</code></li>\n<li>Copy the code snippet (This snippet is ok to be public, cause firebase does other stuff to secure it)\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> firebaseConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">apiKey</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wertyuiop\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">authDomain</span><span class=\"token operator\">:</span> <span class=\"token string\">\"some-awesome-app.firebaseapp.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">projectId</span><span class=\"token operator\">:</span> <span class=\"token string\">\"some-awesome-app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">storageBucket</span><span class=\"token operator\">:</span> <span class=\"token string\">\"some-awesome-app.appspot.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">messagingSenderId</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1234567890\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">appId</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1:12345678:web:12345678\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">measurementId</span><span class=\"token operator\">:</span> <span class=\"token string\">\"G-QWERTYUIOP\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>Security in Firebase is done on the database side</li>\n</ul>\n<ol start=\"2\">\n<li>Initiallize hosting with firebase-tools</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ firebase init hosting\n</code></pre></div>\n<ol start=\"3\">\n<li>Add emulator config</li>\n</ol>\n<ul>\n<li>The above command will create a <code>firebase.json</code> &#x26; <code>.firebaserc</code> (resource config file just contains a project identifier for our project in the cloud), you want to add some configuration to the <code>firebase.json</code> to tell the firebase emulator what port to emulate the web hosting</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n<span class=\"token property\">\"emulators\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"hosting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5000</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"4\">\n<li>Run the emulator</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ firebase emulators:start \n</code></pre></div>\n</li>\n<li>\n<p>The <code>firebase.json</code> provides some information aout all the firebase services, in this case we are looking at <code>hosting</code></p>\n</li>\n<li>\n<p>The <code>public</code> key points you your build version of the web application</p>\n</li>\n<li>\n<p>The <code>rewrites</code> is what you want to add if you are planning on hosting a Single Page Application (aka web app with client side routing)</p>\n</li>\n<li>\n<p>When a browser attempts to open a URL path that matches the specified source or regex URL pattern, the browser will be given the contents of the file at the destination URL instead. Specify URL rewrites by creating a rewrites attribute that contains an array of objects (called \"rewrite rules\").</p>\n</li>\n<li>\n<p>The <code>emulator</code> key is for emulating firebase services, in this case we provide a port that we want to emulate what the <code>hosting.public</code> folder show. This is great cause you can test how firebase web hosting will look like for the production version locally. (don't have to deploy multiple times to the actual service to test a behavior)</p>\n</li>\n<li>\n<p>Example of a <code>firebase.json</code> file:</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"hosting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"public\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the only required attribute for Hosting</span>\n    <span class=\"token property\">\"ignore\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n       <span class=\"token string\">\"firebase.json\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// the Firebase configuration file (the file described on this page)</span>\n      <span class=\"token string\">\"**/.*\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// files with a leading period should be hidden from the system</span>\n      <span class=\"token string\">\"**/node_modules/**\"</span>  <span class=\"token comment\">// contains dependencies used to create your site but not run it</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rewrites\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"**\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"destination\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/index.html\"</span> <span class=\"token comment\">// For SPA web app (clientside routing)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"emulators\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"hosting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"port\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5000</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>You can also use the <code>rewrite rules</code> to trigger a firebase function</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"hosting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token comment\">// Directs all requests from the page `/bigben` to execute the `bigben` function</span>\n  <span class=\"token property\">\"rewrites\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/trigger-some-function\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"function\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"someAwesomeFunction\"</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Learn more about <a href=\"https://firebase.google.com/docs/hosting/full-config\">configuring rewrites here</a></p>\n</li>\n<li>\n<p>Example of a <code>.firebaserc</code>, the <code>project.default</code> name should match the one you made in the Firebase Console</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"projects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"default\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&#x3C;YOUR_PROJECT_NAME>\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Now you can run the hoisting emulator</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">$ firebase emulators:start --only hosting</code></pre></div>\n</li>\n<li>\n<p>You can deploy your app:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ firebase deploy --only hosting\n</code></pre></div>\n</li>\n<li>\n<p>You can also deploy your app with <a href=\"https://firebase.google.com/docs/hosting/github-integration\">Github Actions</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ firebase init hosting\n$ firebase init hosting:github\n<span class=\"token comment\"># Follow the CLI prompts, and the command will automatically take care of setting up the GitHub Action:</span>\n</code></pre></div>\n<ul>\n<li>Example of a Github Actions files <code>.github/workflows/firebase-hosting-merge.yml</code>\n<div class=\"remark-highlight\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to Firebase Hosting on merge\n<span class=\"token key atrule\">'on'</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build_and_deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci <span class=\"token important\">&#x26;&#x26;</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> FirebaseExtended/action<span class=\"token punctuation\">-</span>hosting<span class=\"token punctuation\">-</span>deploy@v0\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">repoToken</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'${{ secrets.GITHUB_TOKEN }}'</span>\n          <span class=\"token key atrule\">firebaseServiceAccount</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'${{ secrets.FIREBASE_SERVICE_ACCOUNT_PIN_THAT_EXAMPLE }}'</span>\n          <span class=\"token key atrule\">channelId</span><span class=\"token punctuation\">:</span> live\n          <span class=\"token key atrule\">projectId</span><span class=\"token punctuation\">:</span> pin<span class=\"token punctuation\">-</span>that<span class=\"token punctuation\">-</span>example\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>In the Firebase Console, under the hosting tab you can also add a custom domain to your web app</p>\n</li>\n</ul>\n<h1>Auth</h1>\n<ul>\n<li>\n<p>The <code>Authentication</code> is kinda like a <em>read-only</em> database for your users</p>\n</li>\n<li>\n<p>You can add users manually &#x26; every user has a <code>User UID</code> is how you connect custome user data in your database</p>\n</li>\n<li>\n<p>When it comes to authentication there are multiple types that can be wired up quite easily</p>\n</li>\n<li>\n<p>Available options:</p>\n<ul>\n<li>email/password</li>\n<li>Google</li>\n<li>Apple</li>\n<li>Facebook</li>\n<li>Twitter</li>\n<li>Github</li>\n</ul>\n</li>\n<li>\n<p>You can also have anonymous auth</p>\n</li>\n<li>\n<p>Click the <code>Auth</code> tab, click the <code>enable</code> button &#x26; select the <code>sign-in providers</code></p>\n</li>\n<li>\n<p><a href=\"https://firebase.google.com/docs/auth/web/password-auth\">Sign in with Email &#x26; Password</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> initializeApp <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/app'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getAuth<span class=\"token punctuation\">,</span> signInWithEmailAndPassword<span class=\"token punctuation\">,</span> onAuthStateChanged<span class=\"token punctuation\">,</span> connectAuthEmulator <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/auth'</span>\n\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">config</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/config'</span>\n\n<span class=\"token keyword\">const</span> firebaseApp <span class=\"token operator\">=</span> <span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">firebase</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> auth <span class=\"token operator\">=</span> <span class=\"token function\">getAuth</span><span class=\"token punctuation\">(</span>firebaseApp<span class=\"token punctuation\">)</span>\n</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://firebase.google.com/docs/auth/web/google-signin\">Sign in with Google</a>:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getAuth<span class=\"token punctuation\">,</span> signInWithPopup<span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">GoogleAuthProvider</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"firebase/auth\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> auth <span class=\"token operator\">=</span> <span class=\"token function\">getAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">signInWithPopup</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// This gives you a Google Access Token. You can use it to access the Google API.</span>\n    <span class=\"token keyword\">const</span> credential <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">GoogleAuthProvider</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">credentialFromResult</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> credential<span class=\"token punctuation\">.</span><span class=\"token property-access\">accessToken</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The signed-in user info.</span>\n    <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Handle Errors here.</span>\n    <span class=\"token keyword\">const</span> errorCode <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span><span class=\"token property-access\">code</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> errorMessage <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The email of the user's account used.</span>\n    <span class=\"token keyword\">const</span> email <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The AuthCredential type that was used.</span>\n    <span class=\"token keyword\">const</span> credential <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">GoogleAuthProvider</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">credentialFromError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>If you are using React you can create a <code>Provider</code> to deal with the user state</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useContext<span class=\"token punctuation\">,</span> useEffect<span class=\"token punctuation\">,</span> createContext <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">config</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/config'</span>\n\n<span class=\"token keyword\">const</span> firebaseApp <span class=\"token operator\">=</span> <span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">firebase</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> auth <span class=\"token operator\">=</span> <span class=\"token function\">getAuth</span><span class=\"token punctuation\">(</span>firebaseApp<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isAuthenticated<span class=\"token punctuation\">,</span> setAuthentication<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AuthContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Things you should know: auth.onAuthStateChanged follows the observer pattern needs</span>\n    <span class=\"token comment\">// to be unsubscribe on every run. The useEffect hook will check authentication state</span>\n    <span class=\"token comment\">// after rerender. That means everytime the value from AuthContext is updated.</span>\n    <span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> auth<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onAuthStateChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      user <span class=\"token operator\">?</span> <span class=\"token function\">setAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">setAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  \n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">AuthContext</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Provider</span></span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>isAuthenticated<span class=\"token punctuation\">,</span> setAuthentication<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&#x3C;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>auth<span class=\"token operator\">?.</span>currentUser<span class=\"token operator\">?.</span>email<span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">AuthContext</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Provider</span></span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>FireStore</h1>\n<ul>\n<li>\n<p>You need to <code>Enable Cloud Firestore</code> before using it</p>\n<ul>\n<li>Click the <code>Firestore</code> tab, click the <code>create database</code></li>\n<li>Select the <code>Start in production mode</code></li>\n</ul>\n</li>\n<li>\n<p>Production mode</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">rules_version <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\nservice cloud<span class=\"token punctuation\">.</span><span class=\"token property-access\">firestore</span> <span class=\"token punctuation\">{</span>\n  match <span class=\"token operator\">/</span>databases<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>documents <span class=\"token punctuation\">{</span>\n    match <span class=\"token operator\">/</span><span class=\"token punctuation\">{</span><span class=\"token dom variable\">document</span><span class=\"token operator\">=</span><span class=\"token operator\">**</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">write</span><span class=\"token operator\">:</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Testing mode</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">rules_version <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\nservice cloud<span class=\"token punctuation\">.</span><span class=\"token property-access\">firestore</span> <span class=\"token punctuation\">{</span>\n  match <span class=\"token operator\">/</span>databases<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>documents <span class=\"token punctuation\">{</span>\n    match <span class=\"token operator\">/</span><span class=\"token punctuation\">{</span><span class=\"token dom variable\">document</span><span class=\"token operator\">=</span><span class=\"token operator\">**</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">write</span><span class=\"token operator\">:</span> <span class=\"token keyword control-flow\">if</span>\n          request<span class=\"token punctuation\">.</span><span class=\"token property-access\">time</span> <span class=\"token operator\">&#x3C;</span> timestamp<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>The DB is a NoSQL database, where each key has a UID (you can create your own if you want or have firebase automatically generate one for you)</p>\n</li>\n<li>\n<p>Each document is a set of key/value</p>\n</li>\n<li>\n<p>When working with the emulator you can update the rules that you have referenced in your <code>firebase.json</code> file and it will update it in automatically</p>\n</li>\n<li>\n<p>Exmaple of adding a record to the DB</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> initializeApp <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/app'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getAuth<span class=\"token punctuation\">,</span> signInWithEmailAndPassword<span class=\"token punctuation\">,</span> onAuthStateChanged<span class=\"token punctuation\">,</span> connectAuthEmulator <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/auth'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> getFirestore<span class=\"token punctuation\">,</span> collection<span class=\"token punctuation\">,</span> getDocs<span class=\"token punctuation\">,</span> addDoc<span class=\"token punctuation\">,</span> connectFirestoreEmulator <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/firestore'</span>\n\n<span class=\"token keyword\">const</span> firebaseApp <span class=\"token operator\">=</span> <span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">firebase</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> auth <span class=\"token operator\">=</span> <span class=\"token function\">getAuth</span><span class=\"token punctuation\">(</span>firebaseApp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token function\">getFirestore</span><span class=\"token punctuation\">(</span>firebaseApp<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token dom variable\">location</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">hostname</span> <span class=\"token operator\">===</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">connectAuthEmulator</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:9099'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">connectFirestoreEmulator</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8088</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> userCollection <span class=\"token operator\">=</span> <span class=\"token function\">collection</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> docRef <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">addDoc</span><span class=\"token punctuation\">(</span>userCollection<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">first</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ada'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">last</span><span class=\"token operator\">:</span> <span class=\"token string\">'Lovelace'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">born</span><span class=\"token operator\">:</span> <span class=\"token number\">1815</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Document written with ID: '</span><span class=\"token punctuation\">,</span> docRef<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error adding document: '</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getAllUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> userCollection <span class=\"token operator\">=</span> <span class=\"token function\">collection</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> querySnapshot <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">getDocs</span><span class=\"token punctuation\">(</span>userCollection<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">listData</span><span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  querySnapshot<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">doc</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> listData<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">' [List] '</span><span class=\"token punctuation\">,</span> listData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">queryUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> userCollection <span class=\"token operator\">=</span> <span class=\"token function\">collection</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> q <span class=\"token operator\">=</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span>userCollection<span class=\"token punctuation\">,</span> <span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'=='</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'luis'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> querySnapshot <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">getDocs</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">listData</span><span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  querySnapshot<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">doc</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> listData<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">' [List] '</span><span class=\"token punctuation\">,</span> listData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">queryUserRealtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> userCollection <span class=\"token operator\">=</span> <span class=\"token function\">collection</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> q <span class=\"token operator\">=</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span>userCollection<span class=\"token punctuation\">,</span> <span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'=='</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'phil'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// MAKE SURE YOU UNSUBSCRIBE! (this will run anytime the data changes)</span>\n  <span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> <span class=\"token function\">onSnapshot</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">querySnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token literal-property property\">cities</span><span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    querySnapshot<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">doc</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      cities<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">username</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username: '</span><span class=\"token punctuation\">,</span> cities<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">', '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Using a <code>batch</code> allows you to preform multiple functions on the DB and have them fail/success together</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Get a new write batch</span>\n<span class=\"token keyword\">var</span> batch <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">batch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Set the value of 'NYC'</span>\n<span class=\"token keyword\">var</span> nycRef <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cities\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NYC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbatch<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span>nycRef<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"New York City\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Update the population of 'SF'</span>\n<span class=\"token keyword\">var</span> sfRef <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cities\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbatch<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">update</span><span class=\"token punctuation\">(</span>sfRef<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"population\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Delete the city 'LA'</span>\n<span class=\"token keyword\">var</span> laRef <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cities\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">doc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbatch<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">delete</span><span class=\"token punctuation\">(</span>laRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Commit the batch</span>\nbatch<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>You can view your current DB rules <a href=\"http://localhost:8088/emulator/v1/projects/%3Cdatabase_name%3E:ruleCoverage.html\">here</a></p>\n</li>\n<li>\n<p>Make sure that when you create a <strong>timestamp</strong> that you use thee <code>serverTimestamp()</code> provided by firebase <code>import { serverTimestamp } from 'firebase/firestore'</code> to make sure the timestamp is consistent along all client devices</p>\n</li>\n<li>\n<p><a href=\"https://firebase.google.com/docs/firestore/query-data/queries\">Docs on preforming simple &#x26; compound queries</a></p>\n</li>\n<li>\n<p>Firebase will warn you if you need to create a <code>composite index</code>, but you just need to click on the link and it will create it for you</p>\n</li>\n<li>\n<p>Now Security Rules</p>\n<ul>\n<li>Start by making the entire DB locked down\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">rules_version <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\nservice cloud<span class=\"token punctuation\">.</span><span class=\"token property-access\">firestore</span> <span class=\"token punctuation\">{</span>\n\n  match <span class=\"token operator\">/</span>databases<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>documents <span class=\"token punctuation\">{</span>\n    match <span class=\"token operator\">/</span><span class=\"token punctuation\">{</span><span class=\"token dom variable\">document</span><span class=\"token operator\">=</span><span class=\"token operator\">**</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">write</span><span class=\"token operator\">:</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Now add in rights selectively</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">rules_version <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\n service cloud<span class=\"token punctuation\">.</span><span class=\"token property-access\">firestore</span> <span class=\"token punctuation\">{</span>\n\n   match <span class=\"token operator\">/</span>databases<span class=\"token operator\">/</span><span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>documents <span class=\"token punctuation\">{</span>\n     match <span class=\"token operator\">/</span><span class=\"token punctuation\">{</span><span class=\"token dom variable\">document</span><span class=\"token operator\">=</span><span class=\"token operator\">**</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n       allow read<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">write</span><span class=\"token operator\">:</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\n \n <span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Adding Geospatial to your DB</h2>\n<ul>\n<li>You can do geospatial stuff with <code>firestore</code> because of geohashing</li>\n<li>A geohash is a convenient way of expressing a location (anywhere in the world) using a short alphanumeric string, with greater precision obtained with longer strings.</li>\n<li>A geohash actually identifies a rectangular cell: at each level, each extra character identifies one of 32 sub-cells.</li>\n<li><img src=\"/assets/blog/geo/geohash.jpg\" alt=\"geohash\"></li>\n<li><a href=\"https://www.movable-type.co.uk/scripts/geohash.html\">Read more on geohashes</a></li>\n<li>Vancouver, BC has coordinates of 49.2827° N, 123.1207° W and the geohash would be <a href=\"http://geohash.org/c2b2q7dhx\"><code>c2b2q7dhx</code></a></li>\n</ul>\n<h3>Using <code>geofirestore</code></h3>\n<ul>\n<li><a href=\"https://geofirestore.com/\">geofirestore docs</a></li>\n<li>As of 09-2021 <code>geofirestore</code> only supports up to <code>firebase</code> v8</li>\n<li>Exmaple\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">firebase</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'firebase/app'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'firebase/firestore'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> geofirestore</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'geofirestore'</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// Initialize the Firebase SDK</span>\nfirebase<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a Firestore reference</span>\n<span class=\"token keyword\">const</span> firestore <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a GeoFirestore reference</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">GeoFirestore</span> <span class=\"token operator\">=</span> geofirestore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span>firestore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a GeoCollection reference</span>\n<span class=\"token keyword\">const</span> geocollection <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">GeoFirestore</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'restaurants'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add a GeoDocument to a GeoCollection</span>\ngeocollection<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Geofirestore'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">score</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// The coordinates field must be a GeoPoint!</span>\n  <span class=\"token literal-property property\">coordinates</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firebase<span class=\"token punctuation\">.</span>firestore<span class=\"token punctuation\">.</span>GeoPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">40.7589</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">73.9851</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Create a GeoQuery based on a location</span>\n<span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> geocollection<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">near</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">center</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firebase<span class=\"token punctuation\">.</span>firestore<span class=\"token punctuation\">.</span>GeoPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">40.7589</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">73.9851</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">radius</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Get query (as Promise)</span>\nquery<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// All GeoDocument returned by GeoQuery, like the GeoDocument added above</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token property-access\">docs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<h3>Addig geospatial functionality with <code>geofirex</code></h3>\n<ul>\n<li>\n<p>Unfortunately <code>geofirex</code> has a peer dependency of <code>\"firebase\": \"^7.2.0\"</code> and firebase is at v9 as of 2021 so this may not be the best option</p>\n</li>\n<li>\n<p>Start by adding some npm packages</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> init -y\n<span class=\"token function\">npm</span> i firebase-admin geofirex\n</code></pre></div>\n</li>\n<li>\n<p>Create a file to seed the database</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> admin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"firebase-admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> serviceAccount <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./firebase-creds.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nadmin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">credential</span><span class=\"token operator\">:</span> admin<span class=\"token punctuation\">.</span><span class=\"token property-access\">credential</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cert</span><span class=\"token punctuation\">(</span>serviceAccount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">databaseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://&#x3C;FIREBASE_PROJECT_NAME>.firebaseio.com\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init GeoFireX</span>\n<span class=\"token keyword\">const</span> geofirex <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"geofirex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> geo <span class=\"token operator\">=</span> geofirex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">init</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pinsRef <span class=\"token operator\">=</span> admin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pins\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add some markers</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Phoenix\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">119</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Portland\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">45.52054</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">122.6795</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vancouver\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">49.2827</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">123.1207</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Seattle\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">47.604311</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">122.33551</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"San Francisco\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">37.771800273</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">122.416534</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ottawa\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">45.42062</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">75.697174</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npinsRef<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Victoria\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">48.426922</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">123.36341</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Now you can make queries against your table</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> admin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"firebase-admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> serviceAccount <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./firebase-creds.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nadmin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">initializeApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">credential</span><span class=\"token operator\">:</span> admin<span class=\"token punctuation\">.</span><span class=\"token property-access\">credential</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cert</span><span class=\"token punctuation\">(</span>serviceAccount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">databaseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://&#x3C;FIREBASE_PROJECT_NAME>.firebaseio.com\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init GeoFireX</span>\n<span class=\"token keyword\">const</span> geofirex <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"geofirex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> geo <span class=\"token operator\">=</span> geofirex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">init</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pinsRef <span class=\"token operator\">=</span> admin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pins\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Query wthin</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPointsWithin</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> center<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> field <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">query</span><span class=\"token punctuation\">(</span>pinsRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">within</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">log</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> obs <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pipe</span><span class=\"token punctuation\">(</span>geofirex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toGeoJSON</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"position\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> geojson <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> geofirex<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>obs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> geojson<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">getPointsWithin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">center</span><span class=\"token operator\">:</span> geo<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">radius</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//km</span>\n  <span class=\"token literal-property property\">field</span><span class=\"token operator\">:</span> <span class=\"token string\">\"position\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Firebase Storage</h1>\n<ul>\n<li>When working with an Application with user's it's best to make a folder in your storage with the uid of that user</li>\n<li>When you add files to the <em>Firebase Storage</em> it will create a storage location URL for that file</li>\n</ul>\n","ogImage":{"url":"/assets/covers/firebase.jpg"},"coverImage":"/assets/covers/firebase.jpg"}},"__N_SSG":true}