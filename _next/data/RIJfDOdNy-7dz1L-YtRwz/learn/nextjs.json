{"pageProps":{"post":{"title":"Nextjs","slug":"nextjs","content":"<h1>Nextjs</h1>\n<ul>\n<li>Next.js gives you the best developer experience with all the features you need for production: hybrid static &#x26; server rendering, TypeScript support, smart bundling, route pre-fetching, and more. No config needed.</li>\n<li>A traditional React app is rendered clienside, where the browser starts with a shell of an HTML file lacking any rendered content. From there the browser fetches the JS files containing the react code to render content to the page and make it interactive</li>\n<li>A drawback of this is that your website is note reliably indexed by search engines or read by social media link bots</li>\n<li>Another drawback is that it can take longer to reach the first contentful paint when the user first lands on the site</li>\n<li><strong>Nextjs</strong> is a framework that allows you to build a react app but render the content in advance during build phase to the first thing your user/search bot sees is the fully render HTML. After receiving this initial page the client-side rendering takes over and it works just like a traditional react app</li>\n<li>So Nextjs is a little opinionated on the folder structure</li>\n<li>The file structure in the <code>pages</code> folder mirrors the actual urls in the application</li>\n<li>Next can preform multiple server rendering strategies from a single project (SSG, SSR, ISR)</li>\n<li>Nextjs will make <em>static generation</em> (or pre-rendering) renders all pages at build time</li>\n<li>The site can be build and served by a CDN</li>\n<li>Getting data for a REST API you can use <code>getStaticProps</code></li>\n<li>You can also implement server-sde rendering ehivh build the HTML each time it's requested <code>getServerSideProps</code></li>\n<li>Nextjs supports css modules out of the box with <code>&#x3C;Name>.module.css</code> for a specific page or component and in the <code>styles/global.css</code> you can write styles for the entire application</li>\n</ul>\n<h2>Get started</h2>\n<ul>\n<li>Initialize your app\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># jsx version</span>\n$ npx create-next-app <span class=\"token operator\">&#x3C;</span>PROJECT_NAME<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># OR with typescript</span>\n$ npx create-next-app@latest --typescript <span class=\"token operator\">&#x3C;</span>PROJECT_NAME<span class=\"token operator\">></span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> i -D serve\n</code></pre></div>\n</li>\n<li>Update the <em>npm scripts</em>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next dev -p 3000\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build &#x26;&#x26; next export\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &#x26;&#x26; serve out\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Adding <strong>file alias</strong> all you need to do is provide a <code>jsconfig.json</code> | <code>tsconfig.json</code> with:\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"@/components/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"components/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@/libs/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"libs/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@/pages/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"pages/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"@/models/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"models/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Add Linting</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> i -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-plugin-jest prettier eslint-config-prettier eslint-plugin-prettier\n$ <span class=\"token function\">mkdir</span> .vscode\n$ <span class=\"token function\">touch</span> .prettierrc .eslintrc .vscode/settings.json\n$ <span class=\"token function\">mkdir</span> components hooks utils\n</code></pre></div>\n<ul>\n<li><code>.eslintrc</code>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"next/core-web-vitals\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:jest/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:prettier/recommended\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jest\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"browser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"es6\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jest\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"globals\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Atomics\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"readonly\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"SharedArrayBuffer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"readonly\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"ecmaFeatures\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"project\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./tsconfig.json\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li><code>.prettierrc</code>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li><code>.vscode/settings.json</code>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Set prettier to be the default formatter</span>\n  <span class=\"token property\">\"editor.defaultFormatter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esbenp.prettier-vscode\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Don't format any files by default</span>\n  <span class=\"token property\">\"editor.formatOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  \n  <span class=\"token comment\">// Define the file types to do the autoformatting</span>\n  <span class=\"token property\">\"[javascript]\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"editor.defaultFormatter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esbenp.prettier-vscode\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.formatOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"[typescript]\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"editor.defaultFormatter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esbenp.prettier-vscode\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.formatOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"[typescriptreact]\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"editor.defaultFormatter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esbenp.prettier-vscode\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.formatOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"[json]\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"editor.defaultFormatter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esbenp.prettier-vscode\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.formatOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-package\"><code class=\"language-package\">{\n  &#x26;quot;scripts&#x26;quot;: {\n     &#x26;quot;lint&#x26;quot;: &#x26;quot;prettier --write {components,hooks,pages}/**/*.tsx {components,hooks,pages}/*.tsx utils/**/*.ts&#x26;quot;\n  }\n}</code></pre></div>\n<h1>Adding Jest &#x26; React-Testing-Library</h1>\n<ul>\n<li>Add testing\n<ul>\n<li>\n<p>Add some packages:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> i -D jest ts-jest @testing-library/react @testing-library/jest-dom @testing-library/react-hooks\n$ <span class=\"token function\">npm</span> i -D identity-obj-proxy\n$ <span class=\"token function\">touch</span> jest.config.js jest.setup.ts tsconfig.jest.json\n</code></pre></div>\n</li>\n<li>\n<p>Create a <code>jest.config.js</code> file</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">testEnvironment</span><span class=\"token operator\">:</span> <span class=\"token string\">'jsdom'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">setupFilesAfterEnv</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&#x3C;rootDir>/jest.setup.ts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">roots</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'&#x3C;rootDir>/components'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'&#x3C;rootDir>/hooks'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'&#x3C;rootDir>/utils'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'&#x3C;rootDir>/pages'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'^.+\\\\.tsx$'</span><span class=\"token operator\">:</span> <span class=\"token string\">'ts-jest'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'^.+\\\\.ts$'</span><span class=\"token operator\">:</span> <span class=\"token string\">'ts-jest'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">testRegex</span><span class=\"token operator\">:</span>\n    <span class=\"token string\">'(/(components?|hooks?|utils?|pages?)/.*.(test|spec)).(jsx?|tsx?)$'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">moduleFileExtensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tsx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jsx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'node'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">collectCoverage</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">collectCoverageFrom</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'&#x3C;rootDir>/{components,hooks,utils,pages}/**/*.{ts,tsx}'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">coverageDirectory</span><span class=\"token operator\">:</span> <span class=\"token string\">'&#x3C;rootDir>/coverage/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">coveragePathIgnorePatterns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'(tests/.*.mock).(jsx?|tsx?)$'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'(.*).d.ts$'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">moduleNameMapper</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'.+\\\\.(css|styl|less|sass|scss|png|jpg|ttf|woff|woff2|svg)$'</span><span class=\"token operator\">:</span>\n      <span class=\"token string\">'identity-obj-proxy'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">verbose</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">globals</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'ts-jest'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">tsconfig</span><span class=\"token operator\">:</span> <span class=\"token string\">'tsconfig.jest.json'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a <code>jest.setup.ts</code> file</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token string\">'@testing-library/jest-dom'</span>\n<span class=\"token comment\">// import 'whatwg-fetch' // If you are using browser's native `fetch` API</span>\n</code></pre></div>\n</li>\n<li>\n<p>Update your npm scripts:</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest --watchAll --collectCoverage=false\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:once\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest --colors\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pretest:coverage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest --colors --collectCoverage=true\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:coverage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx http-server coverage/lcov-report\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Make a tsconfig just for Jest. Next.js needs <code>\"jsx\": \"preserve\"</code> but we want <code>\"jsx\": \"react-jsx\"</code> for jest [docs] (https://www.typescriptlang.org/docs/handbook/jsx.html#basic-usage)</p>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./tsconfig.json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react-jsx\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Make a test file</p>\n<div class=\"remark-highlight\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> screen <span class=\"token punctuation\">}</span></span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'App'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should have welcome message'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> welcomeElement <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Hello Vite</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>welcomeElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li><em>Optional</em> If you are having ESLint issues with the build add this to your <code>next.config.js</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">eslint</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Warning: This allows production builds to successfully complete even if</span>\n    <span class=\"token comment\">// your project has ESLint errors.</span>\n    <span class=\"token literal-property property\">ignoreDuringBuilds</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Add tailwindcss</h1>\n<ul>\n<li>\n<p>Install some packages:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -D tailwindcss postcss autoprefixer\n$ npx tailwindcss init -p\n$ <span class=\"token function\">touch</span> tailwind.config.js\n</code></pre></div>\n</li>\n<li>\n<p>Update the <code>tailwind.config.js</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"./pages/**/*.{js,ts,jsx,tsx}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"./components/**/*.{js,ts,jsx,tsx}\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">extend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Update the <code>styles/globals.css</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> base<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> components<span class=\"token punctuation\">;</span></span>\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> utilities<span class=\"token punctuation\">;</span></span>\n</code></pre></div>\n</li>\n<li>\n<p>Using CSS Modules with your components, Nextjs is prewired to use css-modules all you have to do is add <code>.modules.css</code> to your css files</p>\n<div class=\"remark-highlight\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token imports\">styles</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./hello.module.css'</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Props</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">wrapper</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.wrapper</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@apply</span> bg-gray-100 border border-gray-200 <span class=\"token property\">dark</span><span class=\"token punctuation\">:</span>border-gray-700 rounded-md <span class=\"token property\">dark</span><span class=\"token punctuation\">:</span>bg-gray-900 text-sm text-cyan-200 p-4<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>You can start using the <strong>Tailwindcss</strong> classes</p>\n<div class=\"remark-highlight\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Props</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  wrapper<span class=\"token operator\">:</span>\n    <span class=\"token string\">'bg-gray-100 border border-gray-200 dark:border-gray-700 rounded-md dark:bg-gray-900 text-sm text-red-600 p-4'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">wrapper</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Using CSS Modules with your components, Nextjs is prewired to use css-modules all you have to do is add <code>.modules.css</code> to your css files</p>\n<div class=\"remark-highlight\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token imports\">styles</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./hello.module.css'</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Props</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> \n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">wrapper</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.wrapper</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@apply</span> bg-gray-100 border border-gray-200 <span class=\"token property\">dark</span><span class=\"token punctuation\">:</span>border-gray-700 rounded-md <span class=\"token property\">dark</span><span class=\"token punctuation\">:</span>bg-gray-900 text-sm text-cyan-200 p-4<span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Adding Storybook</h1>\n<ul>\n<li>Add some packages:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ npx -y sb init --builder webpack5\n$ <span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D @storybook/addon-postcss\n</code></pre></div>\n</li>\n<li>Update your <code>package.json</code>\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"resolutions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^5\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Update the <code>.storybook/main.js</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">stories</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'../stories/**/*.stories.mdx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'../stories/**/*.stories.@(js|jsx|ts|tsx)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'../components/**/*.stories.mdx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'../components/**/*.stories.@(js|jsx|ts|tsx)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">staticDirs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'../public'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">addons</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'@storybook/addon-links'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'@storybook/addon-essentials'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token doc-comment comment\">/**\n      * NOTE: fix Storybook issue with PostCSS@8\n      * <span class=\"token keyword\">@see</span> https://github.com/storybookjs/storybook/issues/12668#issuecomment-773958085\n      */</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'@storybook/addon-postcss'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">postcssLoaderOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">implementation</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">core</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">builder</span><span class=\"token operator\">:</span> <span class=\"token string\">'webpack5'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">webpackFinal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n    * Add support for alias-imports\n    * <span class=\"token keyword\">@see</span> https://github.com/storybookjs/storybook/issues/11989#issuecomment-715524391\n    */</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token property-access\">resolve</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">alias</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token spread operator\">...</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">resolve</span><span class=\"token operator\">?.</span>alias<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'@'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../stories/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'@/components'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../components/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'@/pages'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../pages/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n    * Fixes font import with /\n    * <span class=\"token keyword\">@see</span> https://github.com/storybookjs/storybook/issues/12844#issuecomment-867544160\n    */</span>\n    config<span class=\"token punctuation\">.</span><span class=\"token property-access\">resolve</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">roots</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'node_modules'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword control-flow\">return</span> config\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Update the <code>.storybook/preview.js</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token string\">'../styles/globals.css'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">NextImage</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'next/image'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">OriginalNextImage</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">NextImage</span><span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">NextImage</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">OriginalNextImage</span> <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>props<span class=\"token punctuation\">}</span> unoptimized <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> parameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">argTypesRegex</span><span class=\"token operator\">:</span> <span class=\"token string\">'^on[A-Z].*'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">controls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">matchers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(</span>background<span class=\"token alternation keyword\">|</span>color<span class=\"token group punctuation\">)</span><span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Date<span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">previewTabs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'storybook/docs/panel'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">index</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Create a React component\n<div class=\"remark-highlight\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token imports\">styles</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./hello.module.css'</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Props</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n  textColor<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> message<span class=\"token punctuation\">,</span> textColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">wrapper</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>span</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> textColor <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Create a Storybook file in your <code>./components/</code> directory\n<div class=\"remark-highlight\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ComponentStory</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">ComponentMeta</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@storybook/react'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Hello</span></span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./hello'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'Components/Hello'</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Hello</span><span class=\"token punctuation\">,</span>\n  argTypes<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    textColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> control<span class=\"token operator\">:</span> <span class=\"token string\">'color'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token maybe-class-name\">ComponentMeta</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">typeof</span> <span class=\"token maybe-class-name\">Hello</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Template</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ComponentStory</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">typeof</span> <span class=\"token maybe-class-name\">Hello</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Hello</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>args<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Primary</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Template</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// More on args: https://storybook.js.org/docs/react/writing-stories/args</span>\n<span class=\"token maybe-class-name\">Primary</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">args</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> <span class=\"token string\">'hello hello hello'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<!-- https://theodorusclarence.com/blog/nextjs-storybook-tailwind -->\n<h1>Add Playwright</h1>\n<ul>\n<li>Install the packages\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i -D @playwright/test\n<span class=\"token comment\"># install supported browsers</span>\nnpx playwright <span class=\"token function\">install</span>\n</code></pre></div>\n</li>\n<li>Update your <code>package.json</code> file\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test:e2e\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"playwright test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:e2e:debug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"PWDEBUG=1 playwright test --project=chromium\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test:e2e:headed\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"playwright test --headed\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Create a <code>playwright.config.ts</code> file\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PlaywrightTestConfig<span class=\"token punctuation\">,</span> devices <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@playwright/test'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config<span class=\"token operator\">:</span> PlaywrightTestConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  forbidOnly<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CI</span><span class=\"token punctuation\">,</span>\n  retries<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CI</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    trace<span class=\"token operator\">:</span> <span class=\"token string\">'on-first-retry'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  projects<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'chromium'</span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>devices<span class=\"token punctuation\">[</span><span class=\"token string\">'Desktop Chrome'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'firefox'</span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>devices<span class=\"token punctuation\">[</span><span class=\"token string\">'Desktop Firefox'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'webkit'</span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>devices<span class=\"token punctuation\">[</span><span class=\"token string\">'Desktop Safari'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> config<span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>Add some test <code>./e2e/index.spec.ts</code></li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> test<span class=\"token punctuation\">,</span> expect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@playwright/test'</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'basic test'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://playwright.dev/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">locator</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.navbar__inner .navbar__title'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Playwright'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h1>Start Developing</h1>\n<ul>\n<li>Run the app local\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> run dev\n</code></pre></div>\n</li>\n<li>The <code>./api</code>\n<ul>\n<li>This directory is a special par of Nextjs for setting up routes that will only apply to the server</li>\n<li>This could be userful cause the code you write here won't increase the client-side JS bundle that will be sent over the network</li>\n<li>It's a useful feature if you have some work that needs to be done on the backend OR if you want to expose an API for your end users</li>\n</ul>\n</li>\n<li>The <code>./pages/</code>\n<ul>\n<li>Routing for a Nextjs app is based of the files in the <code>./pages/</code> directory</li>\n</ul>\n</li>\n<li>The <code>./pages/_app.js</code>\n<ul>\n<li>This is a is a wrapper around your entire applications, this is a good place to add navbars, headers, footers, and expecially authentification for your app</li>\n</ul>\n</li>\n<li>Nextjs used hybrid rendering\n<ul>\n<li>If you have a site that is completely static (doesn't rely on any external REST API), all you have to do to build the application is run <code>$ next build</code> or <code>$ next build &#x26;&#x26; next export</code></li>\n<li>If you have pages that relay on external data there are 4 way you can accomplish this\n<ol>\n<li>Server-Side Rendering (SSR) with <code>getServerSideProps()</code> run-time you app will get fresh data every time</li>\n<li>Static Site Generation (SSG) using <code>getStaticProps()</code> at build-time it will make those fetch and hard code them in the application (drawback is the data is hard-code at build-time and you app will be stale if the REST service updates)</li>\n<li><strong>Incremental Static Regeneration</strong> (ISR) allows you to statically generate a page and then regenerate it when new data comes in on an interval you decide</li>\n<li>You could just fetch the data inside your react components with <code>fetch</code></li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Fetching data from REST Service</h2>\n<ul>\n<li>\n<p>Use <code>getStaticProps</code> if you want to make the request at build time &#x26; <code>getServerSideProps</code> if you want to make the request each time at runtime</p>\n</li>\n<li>\n<p>The nice thing about Nextjs is that we can use both of these paradims throughout the application we are not limited to one or the other</p>\n</li>\n<li>\n<p>If you know in advance how many <em>dynamic</em> routes you have you want to use the <code>getStaticProps</code>. The <code>getStaticPaths</code> function tell next which dynamic pages to render</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.spacexdata.com/v4/launches/latest\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> launches <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> launches <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticPaths</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">paths</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fallback</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> launches <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span>\n      <span class=\"token maybe-class-name\">SpaceX</span> next launch details<span class=\"token operator\">:</span> <span class=\"token operator\">&#x3C;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>launches<span class=\"token punctuation\">.</span><span class=\"token property-access\">details</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>If you want the data to be fetch every time the page loads you want to use <code>getServerSideProps</code> the code you have in the <code>getStaticProps</code> is the exact same thing <strong>HOWEVER</strong> does it on every request instead of at build time</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getServerSideProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> req <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.spacexdata.com/v4/launches/latest\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> launches <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> req<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> launches <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> launches <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span>\n      <span class=\"token maybe-class-name\">SpaceX</span> next launch details<span class=\"token operator\">:</span> <span class=\"token operator\">&#x3C;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>launches<span class=\"token punctuation\">.</span><span class=\"token property-access\">details</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Routing</h2>\n<ul>\n<li>The file structure in the <code>pages</code> folder mirrors the actual urls in the application</li>\n<li>The <em>pages</em> folder structure is also the routing for you applications\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">pages\n├── _app.js\n├── api\n│   └── hello.js\n└── index.js\n</code></pre></div>\n</li>\n<li>The <em>pages</em> folder structure is also the routing for you applications\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">pages\n├── _app.js\n├── api\n│   └── hello.js\n├── search.js\n├── profile.js\n└── user\n  └── <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>.js\n└── index.js\n</code></pre></div>\n<ul>\n<li>These would map to <em>http://localhost:3000</em>, <em>http://localhost:3000/search</em>, <em>http://localhost:3000/profile</em>, etc</li>\n</ul>\n</li>\n<li>If you want a dynamic route make a file with the <code>[]</code> for the name for example: <code>./user/[param].js</code> and the route would be <em>http://localhost:3000/user/:id</em></li>\n<li>Getting the dynamic route parameter</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// http://localhost:3000/user/:username</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Layout</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"@/components/Layout\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"next/router\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> username <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> router<span class=\"token punctuation\">.</span><span class=\"token property-access\">query</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// TODO: make a call the the DB for user profile</span>\n\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span>\n      <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>Static routes have priority over dynamic ones</li>\n<li>If you are using the <code>&#x3C;a href=\"\">...&#x3C;/a></code> you should use the <code>import Link from 'next/link'</code>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Link</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'next/link'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Link</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"/thisrocks\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>a<span class=\"token operator\">></span><span class=\"token maybe-class-name\">Awesome</span> page<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n  <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">Link</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Server Rendering</h2>\n<ul>\n<li><em>Static-Side Generation</em> (SSG) or <em>Server-Side Rendering</em> (SSR)</li>\n<li><em>SSG</em> or Static generation is pre-rendering, you generate all the html pages at build time. You can easily upload all the generated HTML files to storage bucket or static host and they can be delivered with very high performance over a CDN</li>\n<li>If you site has a large scale of pages that changes this might not be the best case</li>\n<li><em>SSR</em></li>\n</ul>\n<h2>Data Fetching</h2>\n<ul>\n<li>Next can preform multiple server rendering strategies from a single project</li>\n<li>SSG ()</li>\n<li>SSR</li>\n<li>ISR</li>\n</ul>\n<h2>Nextjs - why?</h2>\n<ol>\n<li>Lambda (serverless) functions</li>\n</ol>\n<ul>\n<li>These are functions that reside under the /api route of a Next.js app</li>\n<li>server-side rendered React applications</li>\n<li>These are routes that require fetching initial props from somewhere (using <code>getInitialProps</code> or <code>getServerSideProps</code>)</li>\n</ul>\n<ol start=\"2\">\n<li>Static HTML</li>\n</ol>\n<ul>\n<li>no dynamic content and the data is always the same</li>\n</ul>\n<ol start=\"3\">\n<li>Static Site Generation (SSG)</li>\n</ol>\n<ul>\n<li>Allow static site generation as one of the build options</li>\n<li>These pages use the <code>getStaticProps</code> method to fetch the data that will be used to generate static HTML files, as well as <code>getStaticPaths</code> to get a list of all the subroutes that need to be generated as HTML files</li>\n</ul>\n<ol start=\"4\">\n<li>Incremental Static Regeneration (ISR)</li>\n</ol>\n<ul>\n<li>It combines the benefits of server-side rendered pages and SSG by generating static HTML files on runtime.</li>\n</ul>\n<h2>Nextjs Tips</h2>\n<ul>\n<li>Change the port dev works by updating the <code>dev</code> script in your package.json\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next dev -p 8080\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next start\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Creating and Deploying a Static Site to GitHub Pages</h2>\n<ol>\n<li>Create a static build</li>\n</ol>\n<ul>\n<li>Add the build script to your package.json file\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build &#x26;&#x26; next export\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Build the static site:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> run build\n</code></pre></div>\n</li>\n<li>This will create a directory called out which contains a fully static version of your website.</li>\n</ul>\n<ol start=\"2\">\n<li>Create a new repo and push your code up</li>\n</ol>\n<ul>\n<li><strong>Create a Github repo that contains your Github username and .github.io.</strong></li>\n<li>For example my GitHub username is <code>phil-willis</code> and my repo name is <code>phil-willis.github.io</code></li>\n</ul>\n<ol start=\"3\">\n<li>Create a personal access token</li>\n</ol>\n<ul>\n<li>Click the avatar > profile > <code>Developer setttings</code> > <code>Personal access token</code> or <a href=\"https://github.com/settings/tokens\">click here</a>\n<img src=\"/assets/blog/github/gh-profile-settings.png\" alt=\"gh-profile-settings\">\n<img src=\"/assets/blog/github/gh-personal-access-token.png\" alt=\"gh-personal-access-token\">\n<img src=\"/assets/blog/github/gh-personal-access-token-scopes.png\" alt=\"gh-personal-access-token-scopes\"></li>\n<li>note: <code>&#x3C;repo_name> for github actions</code></li>\n<li>check the <code>repo</code> section</li>\n<li><strong>DON'T FORGET TO COPY THE TOKEN</strong></li>\n</ul>\n<ol start=\"4\">\n<li>\n<p>In your repo's settings paste the <code>ACCESS_TOKEN</code>\n<img src=\"/assets/blog/github/gh-secrets.png\" alt=\"gh-secrets\"></p>\n</li>\n<li>\n<p>Create a Github workflow file</p>\n</li>\n</ol>\n<ul>\n<li>Create a directory called .github/workflows and inside that directory, create a YAML file with the following contents:</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build-and-deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout 🛎️\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2.3.1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">persist-credentials</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache 💾\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> github.workspace <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>/.next/cache\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> runner.os <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">-</span>nextjs<span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> hashFiles('<span class=\"token important\">**/package-lock.json')</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install and Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run export\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">CI</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> touch out/.nojekyll\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy 🚀\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> JamesIves/github<span class=\"token punctuation\">-</span>pages<span class=\"token punctuation\">-</span>deploy<span class=\"token punctuation\">-</span>action@3.7.1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ACCESS_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ACCESS_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">BRANCH</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages \n          <span class=\"token key atrule\">FOLDER</span><span class=\"token punctuation\">:</span> out\n          <span class=\"token key atrule\">CLEAN</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n</code></pre></div>\n<ul>\n<li>Now every push to the <code>main</code> branch will build a static version of our site using the <code>$ npm run build</code> script.</li>\n<li>Using an action called Deploy to GitHub Actions, it will use your token to create and push a clean commit to the <code>gh-pages</code> repo from the <code>./out</code> directory that got generated. If the branch doesn't exist, it will create it.</li>\n<li>GitHub Pages uses Jekyll under the hood to host and render static sites. However, Jekyll ignores every directory that starts with an underscore character.</li>\n<li>This will be a problem because Next.js generates the static assets (CSS and JavaScript) inside of a directory called _next and there's no way to changes</li>\n<li>To get around this issue, you need to create an empty file called <code>.nojekyll</code> inside of your <code>gh-pages</code> branch.</li>\n</ul>\n<ol start=\"6\">\n<li>Make a commit and push to github!</li>\n</ol>\n","ogImage":{"url":"/assets/covers/nextjs.jpg"},"coverImage":"/assets/covers/nextjs.jpg"}},"__N_SSG":true}