{"pageProps":{"post":{"title":"terraform","slug":"terraform","content":"<h2>What is Terraform</h2>\n<ul>\n<li>\n<p>Terraform is <code>Infrasture as code</code></p>\n</li>\n<li>\n<p>Other \"infrasture-as-code\" are: chef, puppet, anisble, SaltStack, CloudFoundation</p>\n</li>\n<li>\n<p>The major building pieces to TF are:</p>\n<ul>\n<li>variable (variables)</li>\n<li>locals (variables with interpellation)</li>\n<li>provider (aws|azure|google)</li>\n<li>provisioners (execute scripts on a local or remote machine as part of the creation or destruction)</li>\n<li>data (get information on existing services)</li>\n<li>resource (create resource)</li>\n<li>module (isolate configuration)</li>\n</ul>\n</li>\n<li>\n<p>Links:</p>\n<ul>\n<li><a href=\"https://blog.gruntwork.io/an-introduction-to-terraform-f17df9c6d180\">intro</a></li>\n<li><a href=\"https://medium.com/@pavloosadchyi/terraform-patterns-and-tricks-i-use-every-day-117861531173\">medium post</a></li>\n</ul>\n</li>\n<li>\n<p>Terraform is <code>declarative</code>, it says \"I declare therefore i am\"</p>\n</li>\n<li>\n<p>non-Terraform services do not get auto-magicly added to your state, Terraform only tracks the things it makes</p>\n<ol>\n<li>configurations: i declare the intent</li>\n<li>State: current state</li>\n</ol>\n</li>\n<li>\n<p>dry run <code>$ terraform plan</code></p>\n</li>\n<li>\n<p><strong>NOTE</strong> Terraform ignores subfolders, in order to use subfolders you have to configure the subfolders to be a <code>terraform module</code>, then include those modules in your <code>main.tf</code> file</p>\n</li>\n</ul>\n<h2>Install</h2>\n<ul>\n<li>You can install TF with homebrew but it's better to install it with <code>tfswitch</code> with homebrew</li>\n<li><a href=\"https://warrensbox.github.io/terraform-switcher/\">Terraform version manager</a></li>\n<li>this will allow you to switch version very easily\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">$ brew install warrensbox/tap/tfswitch\n$ tfswitch 0.12.4\n$ terraform -v</code></pre></div>\n</li>\n</ul>\n<h2>Save remote-state in S3</h2>\n<ul>\n<li>\n<p><a href=\"https://www.terraform.io/docs/backends/types/s3.html\">docs</a></p>\n</li>\n<li>\n<p>It is highly recommended that you enable Bucket Versioning on the S3 bucket to allow for state recovery in the case of accidental deletions and human error.</p>\n</li>\n<li>\n<p>Paths to the state file inside the bucket: <em><code>&#x3C;bucket>/&#x3C;workspace_key_prefix>/&#x3C;workspace_name>/&#x3C;key></code></em></p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">\"Amazon S3\"/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>BUCKET_NAME_FOR_TF_STATE</span><span class=\"token punctuation\">></span></span>/env:/dev/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>TF_STATE_KEY</span><span class=\"token punctuation\">></span></span>\n\"Amazon S3\"/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>BUCKET_NAME_FOR_TF_STATE</span><span class=\"token punctuation\">></span></span>/env:/staging/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>TF_STATE_KEY</span><span class=\"token punctuation\">></span></span>\n\"Amazon S3\"/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>BUCKET_NAME_FOR_TF_STATE</span><span class=\"token punctuation\">></span></span>/env:/prod/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>TF_STATE_KEY</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n</li>\n<li>\n<p>Here is the format for the terraform remote state code block</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"mybucket\"</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"path/to/my/key\"</span>     <span class=\"token comment\"># &#x3C;TF_STATE_KEY>, it can just be a single string</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Here is an example for the terraform remote state code block</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"someawesomesite\"</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 0.13.5\"</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hashicorp/aws\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~>3.4\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">undefined</code></pre></div>\n</li>\n<li>\n<p>Key: the path to the state file inside the bucket. When using a non-default workspace, the state path will be /workspace_key_prefix/workspace_name/key</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">data <span class=\"token type variable\">\"terraform_remote_state\"</span></span> <span class=\"token string\">\"network\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">backend</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"s3\"</span>\n  <span class=\"token property\">config</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"terraform-state-prod\"</span>\n    <span class=\"token property\">key</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"network/terraform.tfstate\"</span>\n    <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Or you can have a blank terraform.backend and configure it with bash command</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">state_key</span><span class=\"token operator\">=</span><span class=\"token string\">\"prod/some-app/<span class=\"token variable\">${ENVIRONMENT}</span>.tfstate\"</span>\nterraform init <span class=\"token punctuation\">\\</span>\n  -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"my-terraform-state-bucket\"</span> <span class=\"token punctuation\">\\</span>\n  -backend-config<span class=\"token operator\">=</span><span class=\"token string\">\"key=<span class=\"token variable\">${state_key}</span>\"</span> <span class=\"token punctuation\">\\</span>\n  -backend-config<span class=\"token operator\">=</span><span class=\"token string\">\"encrypt=true\"</span> <span class=\"token punctuation\">\\</span>\n  -backend-config<span class=\"token operator\">=</span><span class=\"token string\">\"region=us-west-2\"</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">backend<span class=\"token type variable\"> \"s3\" </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Terraform CLI</h2>\n<ul>\n<li>\n<p><a href=\"https://www.terraform.io/docs/commands/index.html\">Terraform CLI</a></p>\n</li>\n<li>\n<p><code>$ terraform workspace (list|select|new|delete|show)</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform init\n$ terraform validate\n$ terraform <span class=\"token function\">fmt</span>   <span class=\"token comment\"># format all terraform at the current folder level </span>\n$ terraform plan\n$ terraform apply\n$ terraform apply -auto-approve\n$ terraform output\n$ terraform workspace\n\n$ terraform <span class=\"token function\">import</span> aws_s3_bucket.bucket <span class=\"token operator\">&#x3C;</span>bucket-name<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p>The terraform output command is used to extract the value of an output variable from the state file.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform plan\n$ terraform output\n\n$ <span class=\"token builtin class-name\">cd</span> to-base-of-tf-directory\n$ terraform output\n\n$ terraform workspace <span class=\"token keyword\">select</span> prod <span class=\"token operator\">&#x26;&#x26;</span> terraform refresh\n</code></pre></div>\n</li>\n</ul>\n<h1>Terraform Plugins</h1>\n<ul>\n<li>Terraform relies on plugins called \"providers\" to interact with remote systems</li>\n<li>Defining your providers:\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">mycloud</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"mycorp/mycloud\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 1.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>The <code>required_providers</code> block must be nested inside the top-level <code>terraform</code> block (which can also contain other settings).</li>\n<li><a href=\"https://registry.terraform.io/namespaces/hashicorp\">main providers</a>\n<ul>\n<li>Lifecycle management of AWS resources, including EC2, Lambda, EKS, ECS, VPC, S3, RDS, DynamoDB, and more. This provider is maintained internally by the HashiCorp AWS Provider team.</li>\n</ul>\n</li>\n</ul>\n<h2>Variable</h2>\n<ul>\n<li>\n<p>You can define variables and provide <code>type</code>, <code>default</code> value, <code>description</code></p>\n</li>\n<li>\n<p>Varaibles have to be hard-coded (you cannot interpolating values)</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"some_variable\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hello\"</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"This is an example of a variable that has a string type\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Basic variable types are: string/list/map:</p>\n</li>\n<li>\n<p>The basic structure of defining a variable is:</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"some_key\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&#x3C;string|list|map>\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&#x3C;SOME_DEFAULT_VALUE>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>All variables used have to be defined beforehand</p>\n</li>\n<li>\n<p>Example of the 3 basic types:</p>\n<ul>\n<li>String\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> some_string </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"string\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"hello terraform string\"</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"this is a simple string\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Use into the resource</span>\n<span class=\"token property\">some-parameter</span> <span class=\"token punctuation\">=</span> \"$<span class=\"token punctuation\">{</span>var.some_string<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>List\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> some_list </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"list\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"subnet1\"</span>,\n    <span class=\"token string\">\"subnet2\"</span>,\n    <span class=\"token string\">\"subnet3\"</span>,\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"this is a list\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># Use into the resource</span>\n<span class=\"token property\">some-parameter</span> <span class=\"token punctuation\">=</span> \"$<span class=\"token punctuation\">{</span>var.some_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Map\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> some_map </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"map\"</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">subnet1</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"subnet1\"</span>,\n    <span class=\"token property\">subnet2</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"subnet2\"</span>,\n    <span class=\"token property\">subnet3</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"subnet3\"</span>,\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"this is a map\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Use into the resource</span>\n<span class=\"token property\">some-parameter</span> <span class=\"token punctuation\">=</span> \"$<span class=\"token punctuation\">{</span>var.some_map<span class=\"token punctuation\">[</span><span class=\"token string\">\"subnet1\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><code>null</code> value is a special value that has no type</p>\n<ul>\n<li>a value that represents absence or omission</li>\n<li>If you set an argument of a resource or module to null, Terraform behaves as though you had completely omitted it</li>\n</ul>\n</li>\n<li>\n<p>When you run terraform all the empty variables (ones without a default value) if not provided in the command will be asked before terraform does it magic.</p>\n</li>\n<li>\n<p>You can also override any variables by passing in them as a flag when you run a terraform command</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform apply -var <span class=\"token assign-left variable\">some_key</span><span class=\"token operator\">=</span><span class=\"token string\">\"this rocks\"</span>\n</code></pre></div>\n</li>\n<li>\n<p>Providing a <code>Variables File</code></p>\n<ul>\n<li>All <code>*.tfvars</code> will get picked up when you run terraform, sometimes you want to load specific variable files based on the environment you want to deploy so passing supply <code>-var-file=&#x3C;FILE_NAME>.tfvars</code> with variable values might a great way to deal with different variables for different environments</li>\n<li><code>tfvar</code> file\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token property\">domain_suffix</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"-dev\"</span>\n<span class=\"token property\">hosted_zone_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"someawesomesite.com\"</span>\n<span class=\"token property\">env_tag</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Development\"</span>\n</code></pre></div>\n</li>\n<li><code>main.tf</code> file\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> domain_suffix </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> hosted_zone_name </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> env_tag </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li><code>Plan</code> script\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># `plan.sh` script to run a plan</span>\n<span class=\"token assign-left variable\">WORKSPACE</span><span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span>\n<span class=\"token assign-left variable\">VAR_FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"./env_configs/dev.tfvars\"</span>\n<span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"&#x3C;TERRAFORM_S3_STATE_BUCKET>\"</span>\n<span class=\"token function\">rm</span> -rf .terraform/\nterraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> terraform workspace <span class=\"token keyword\">select</span> <span class=\"token variable\">${WORKSPACE}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  terraform workspace new <span class=\"token variable\">${WORKSPACE}</span>\n<span class=\"token keyword\">fi</span>\nterraform plan -var-file<span class=\"token operator\">=</span><span class=\"token variable\">$VAR_FILE</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>You can provide variables via the terminal</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">terraform apply -auto-approve <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"SOME_VAR_NAME=SOME_VALUE\"</span> <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"SOME_OTHER_VAR_NAME=SOME_VALUE\"</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"SOME_VAR_NAME\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"SOME_OTHER_VAR_NAME\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">type</span> <span class=\"token punctuation\">=</span> string\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Locals (Local Value Configuration)</h2>\n<ul>\n<li>\n<p>locals are like variables that you can pass in ${dynamic} values</p>\n</li>\n<li>\n<p>A local value assigns a name to an expression, so you can use it multiple times within a module without repeating it.</p>\n</li>\n<li>\n<p>DRY principles, allows you to preform logic to create a value where you don't have to write every time</p>\n</li>\n<li>\n<p>You can also reference the a local variable inside the locals code block</p>\n</li>\n<li>\n<p>eg of locals</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">app_namespace</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>-<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">terraform</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">workspace</span><span class=\"token punctuation\">}</span></span>-client\"</span>\n  <span class=\"token property\">domain_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">domain_name</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">domain_suffix</span><span class=\"token punctuation\">}</span></span>.<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">hosted_zone_name</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token comment\"># Ids for multiple sets of EC2 instances, merged together</span>\n<span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">instance_ids</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>aws_instance<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span><span class=\"token punctuation\">*</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> aws_instance<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">.</span><span class=\"token punctuation\">*</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># A computed default name prefix</span>\n<span class=\"token keyword\">locals</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default_name_prefix</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">project_name</span><span class=\"token punctuation\">}</span></span>-web\"</span>\n  <span class=\"token property\">name_prefix</span>         <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">name_prefix</span> <span class=\"token punctuation\">!</span><span class=\"token punctuation\">=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">?</span> <span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">name_prefix</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">default_name_prefix</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Local values can be interpolated elsewhere using the \"local.\" prefix.</span>\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_s3_bucket\"</span></span> <span class=\"token string\">\"files\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bucket</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">name_prefix</span><span class=\"token punctuation\">}</span></span>-files\"</span>\n  <span class=\"token comment\"># ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Provider</h2>\n<ul>\n<li>\n<p><a href=\"https://www.terraform.io/docs/providers/index.html\">providers</a></p>\n</li>\n<li>\n<p>Providers are basically cloud providers as a service</p>\n<ul>\n<li>IaaS (infrastruture as a Service) like AWS, Azure, GCP</li>\n<li>PaaS (Platform as a Service) like Heroku</li>\n<li>SaaS (Software as a Service) like DNSimple, CloudFlare</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.terraform.io/docs/providers/aws/index.html\">AWS</a></p>\n<ul>\n<li>you can pass in your access-key/secret-key via environment variables, or hardcoded (not recommended)</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://alimac.io/static-websites-with-s3-and-hugo-part-1/\">tut</a></p>\n</li>\n<li>\n<p>Different ways to define providers:</p>\n<ol>\n<li>aws creds</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># access_key = \"${var.aws_access_key}\"</span>\n  <span class=\"token comment\"># secret_key = \"${var.aws_secret_key}\"</span>\n  <span class=\"token property\">region</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-2\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>hard-coded:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token property\">access_key</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-access-key\"</span>\n  <span class=\"token property\">secret_key</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-secret-key\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>via Environment variables</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_ACCESS_KEY_ID</span><span class=\"token operator\">=</span><span class=\"token string\">\"anaccesskey\"</span>\n$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_SECRET_ACCESS_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"asecretkey\"</span>\n$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">AWS_DEFAULT_REGION</span><span class=\"token operator\">=</span><span class=\"token string\">\"us-west-2\"</span>\n$ terraform plan\n</code></pre></div>\n<ol start=\"4\">\n<li>shared credentials:</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span>                  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token property\">shared_credentials_file</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"/Users/tf_user/.aws/creds\"</span>\n  <span class=\"token property\">profile</span>                 <span class=\"token punctuation\">=</span> <span class=\"token string\">\"customprofile\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li><a href=\"https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-instances\">using multiple providers</a></li>\n</ul>\n</li>\n</ul>\n<h2>Data</h2>\n<ul>\n<li>Get information on an existing resource</li>\n<li>aws_route53_zone</li>\n<li>aws_caller_identity</li>\n<li>aws_acm_certificate</li>\n</ul>\n<h2>Resource</h2>\n<ul>\n<li>Create AWS resources:\n<ul>\n<li>aws_iam_policy_document</li>\n<li>aws_acm_certificate</li>\n<li>aws_acm_certificate_validation</li>\n<li>aws_route53_record</li>\n<li>aws_s3_bucket</li>\n<li>aws_cloudfront_distribution</li>\n<li>aws_cloudfront_origin_access_identity</li>\n</ul>\n</li>\n<li>*** you can make a resource optionally if you pass in a count***\n<ul>\n<li>if you want the resource to be created if var.env == prod\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token property\">count</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">env</span> <span class=\"token punctuation\">=</span><span class=\"token punctuation\">=</span> <span class=\"token string\">\"prod\"</span> <span class=\"token punctuation\">?</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Provisioners</h2>\n<ul>\n<li>used to execute scripts on a local or remote machine as part of the creation or destruction</li>\n<li>creation-time provisioners\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo <span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">private_ip</span><span class=\"token punctuation\">}</span></span> > file.txt\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>by default provisioners run when a resource is created, not during the updating or any other lifecycle</li>\n<li>it is meant for bootstrapping a system</li>\n<li>if a creation-time provisioner fails, the resource will be flagged as <em>tainted</em>, and will be planned for destruction upon the next <em>$ terraform apply</em></li>\n<li>destroy-time provisioner\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">when</span>    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"destroy\"</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo 'Destroy-time provisioner'\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>multiple provisioners\n<ul>\n<li>you can add multiple provisioners and they will run in the order they are defined</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_instance\"</span></span> <span class=\"token string\">\"web\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo first\"</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">provisioner<span class=\"token type variable\"> \"local-exec\" </span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">command</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"echo second\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h2>Outputs</h2>\n<ul>\n<li>\n<p>You can print out the values that terraform will generate, when you run it with with <code>$ terraform output</code> it will output all the variable that is provided from the tfstate file</p>\n</li>\n<li>\n<p>When you make a module you can define the <code>output</code> your module provides as getters</p>\n</li>\n<li>\n<p>You can create bash variables from terraform <code>output</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">output<span class=\"token type variable\"> \"bucket_name\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">local</span><span class=\"token punctuation\">.</span><span class=\"token type variable\">s3_bucket_website_name</span><span class=\"token punctuation\">}</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">terraform apply -auto-approve\n<span class=\"token assign-left variable\">bucket_name</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>terraform output bucket_name<span class=\"token variable\">)</span></span>\n<span class=\"token function\">npm</span> run build\naws s3 <span class=\"token function\">rm</span> s3://<span class=\"token variable\">$bucket_name</span>/  --recursive\naws s3 <span class=\"token function\">sync</span> build/ s3://<span class=\"token variable\">$bucket_name</span>/ --exclude <span class=\"token punctuation\">\\</span>\"*.DS_Store*<span class=\"token punctuation\">\\</span>\"\naws s3 <span class=\"token function\">cp</span> build/index.html s3://<span class=\"token variable\">$bucket_name</span>/ --cache-control max-age<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>workspace</h1>\n<ul>\n<li><a href=\"https://www.terraform.io/docs/state/workspaces.html\">docs</a></li>\n<li>if you don't define a workspace then you only worked on the \"default\" workspace</li>\n<li>defines how operations are executed</li>\n<li>where persistent data are stored (for example terraform-state file)</li>\n<li>Creating a new workspace:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"ngp-terraform-remote-config\"</span>\n$ terraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n\n$ <span class=\"token assign-left variable\">ENVIRONMENT</span><span class=\"token operator\">=</span>dev\n$ terraform workspace new <span class=\"token variable\">$ENVIRONMENT</span>\n</code></pre></div>\n</li>\n<li>Using an existing workspace:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token assign-left variable\">terraform_state_bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"ngp-terraform-remote-config\"</span>\n$ terraform init -backend-config <span class=\"token assign-left variable\">bucket</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${terraform_state_bucket}</span>\"</span>\n\n$ <span class=\"token assign-left variable\">ENVIRONMENT</span><span class=\"token operator\">=</span>dev\n$ terraform workspace <span class=\"token keyword\">select</span> <span class=\"token variable\">$ENVIRONMENT</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Terraform auto-approve apply</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ terraform apply -auto-approve\n</code></pre></div>\n<h2>Modules</h2>\n<ul>\n<li>\n<p>Terraform ignores subfolders, in order to use subfolders you have to configure the subfolders to be a <code>terraform module</code>, then include those modules in your <code>main.tf</code> file.</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"custom_module\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"./modules/custom_module\"</span>\n\n  <span class=\"token property\">app_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"app-name\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Modules can be created locally or accessed at a url</p>\n</li>\n<li>\n<p>It's like a class for terraform, it encapsulate a piece of configuration</p>\n</li>\n<li>\n<p>A container for multiple resources that are used together.</p>\n</li>\n<li>\n<p>Modules structure:</p>\n<ol>\n<li><strong>Input variables</strong></li>\n</ol>\n<ul>\n<li>accept values from the calling modules</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Output values</strong></li>\n</ol>\n<ul>\n<li>returns values you can ues to populate arguments elsewhere</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Resources</strong></li>\n</ol>\n<ul>\n<li>define 1-or-more infrastructure objects that the module will manage.</li>\n</ul>\n</li>\n<li>\n<p>To define a module, create a new directory and place some <code>.tf</code> files inside of it</p>\n</li>\n<li>\n<p>Terraform can load modules either from local relative paths (prefix with <code>./</code>) or from remote repositories</p>\n<ul>\n<li><code>\"./\"</code> prefix indicates that the address is a relative filesystem path.</li>\n</ul>\n</li>\n<li>\n<p>minimal folder structure:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">.</span>\n├── README.md\n├── main.tf\n├── variables.tf\n├── outputs.tf\n</code></pre></div>\n</li>\n<li>\n<p>Standard structure with nested module</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">.</span>\n├── README.md\n├── main.tf\n├── variables.tf\n├── outputs.tf\n├── <span class=\"token punctuation\">..</span>.\n├── modules/\n│   ├── nestedA/\n│   │   ├── README.md\n│   │   ├── variables.tf\n│   │   ├── main.tf\n│   │   ├── outputs.tf\n│   ├── nestedB/\n</code></pre></div>\n</li>\n<li>\n<p>Accessing the module's outputs you need to reference the module's outputs inside the root tf files. Example <code>./main.tf</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">output<span class=\"token type variable\"> \"root_variable_output_val\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Hello from the root tf\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">output<span class=\"token type variable\"> \"module_variable_output_val\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">value</span> <span class=\"token punctuation\">=</span> module.some_awesome_module\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Calling modules <code>module.&#x3C;MODULE_NAME>.&#x3C;OUPUT_VALUE></code></p>\n</li>\n<li>\n<p><a href=\"https://www.terraform.io/docs/modules/sources.html\">source modules</a></p>\n<ul>\n<li>module installer supports:\n<ul>\n<li>Local paths</li>\n<li>Terraform Registry</li>\n<li>GitHub</li>\n<li>BitbucketGeneric Git, Mercurial repositories</li>\n<li>HTTP URLs</li>\n<li>S3 buckets</li>\n<li>GCS buckets</li>\n</ul>\n</li>\n<li>example of using modules source\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"./consul\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>example of using modules source\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">module<span class=\"token type variable\"> \"consul\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"../module_at_parent_level\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/azavea/terraform-aws-acm-certificate\">terraform-aws-acm-certificate</a></p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-east-1\"</span>\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"certificates\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"aws\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">region</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"us-west-2\"</span>\n  <span class=\"token property\">alias</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"dns\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"aws_route53_zone\"</span></span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"azavea.com\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">module<span class=\"token type variable\"> \"cert\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"github.com/azavea/terraform-aws-acm-certificate?ref=1.1.0\"</span>\n\n  <span class=\"token property\">providers</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">aws.acm_account</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"aws.certificates\"</span>\n    <span class=\"token property\">aws.route53_account</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"aws.dns\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token property\">domain_name</span>                       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"azavea.com\"</span>\n  <span class=\"token property\">subject_alternative_names</span>         <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*.azavea.com\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token property\">hosted_zone_id</span>                    <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span>aws_route53_zone<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span>zone_id<span class=\"token punctuation\">}</span></span>\"</span>\n  <span class=\"token property\">validation_record_ttl</span>             <span class=\"token punctuation\">=</span> <span class=\"token string\">\"60\"</span>\n  <span class=\"token property\">allow_validation_record_overwrite</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Terraform for New Relic Dashboard</h1>\n<ul>\n<li>\n<p>Assign some variables to the new-relic account id &#x26; api-key</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> account_id </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">variable<span class=\"token type variable\"> api_key </span></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>terraform block &#x26; newrelic provider</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">required_version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">= 0.13.5\"</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">newrelic</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"newrelic/newrelic\"</span>\n      <span class=\"token property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"~> 2.21.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"newrelic\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">account_id</span> <span class=\"token punctuation\">=</span> var.account_id\n  <span class=\"token property\">api_key</span>    <span class=\"token punctuation\">=</span> var.api_key\n  <span class=\"token property\">region</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"US\"</span> <span class=\"token comment\"># Valid regions are US and EU</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Create a new relic one dashboard</p>\n<div class=\"remark-highlight\"><pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"newrelic_one_dashboard\"</span></span> <span class=\"token string\">\"nark_dashboard\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.dashboard_name\n\n  <span class=\"token keyword\">page</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span> <span class=\"token punctuation\">=</span> var.dashboard_name\n\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# A\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# B\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">9</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# C\"</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">1</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# D\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# E\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">widget_markdown</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>  <span class=\"token punctuation\">=</span> <span class=\"token string\">\"Dashboard Note\"</span>\n      <span class=\"token property\">row</span>    <span class=\"token punctuation\">=</span> <span class=\"token number\">5</span>\n      <span class=\"token property\">column</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">6</span>\n      <span class=\"token property\">text</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"# F\"</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>Pass in the newrelic account/api-key which running the terraform script</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token assign-left variable\">NR_ACCOUNT_NUMBER</span><span class=\"token operator\">=</span><span class=\"token string\">\"****\"</span>\n$ <span class=\"token assign-left variable\">NR_API_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"****\"</span>\n\n$ terraform plan <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"account_id=<span class=\"token variable\">$NR_ACCOUNT_NUMBER</span>\"</span> <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"api_key=<span class=\"token variable\">$NR_API_KEY</span>\"</span>\n\n$ terraform apply -auto-approve <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"account_id=<span class=\"token variable\">$NR_ACCOUNT_NUMBER</span>\"</span> <span class=\"token punctuation\">\\</span>\n  -var<span class=\"token operator\">=</span><span class=\"token string\">\"api_key=<span class=\"token variable\">$NR_API_KEY</span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n","ogImage":{"url":"/assets/covers/terraform.jpg"},"coverImage":"/assets/covers/terraform.jpg"}},"__N_SSG":true}